<?xml version="1.0"?>
<doc>
    <assembly>
        "AdSec_API"
    </assembly>
    <members>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamGeneral.Create(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Profile.IIBeamGeneral" /> profile from
<param name="depth"><see cref="!:IIBeamGeneral.Depth" /></param><param name="topFlangeWidth"><see cref="!:IIBeamGeneral.TopFlangeWidth" /></param><param name="topFlangeThickness"><see cref="!:IIBeamGeneral.TopFlangeThickness" /></param><param name="bottomFlangeWidth"><see cref="!:IIBeamGeneral.BottomFlangeWidth" /></param><param name="bottomFlangeThickness"><see cref="!:IIBeamGeneral.BottomFlangeThickness" /></param><param name="webThickness" /><see cref="!:IIBeamGeneral.WebThickness" />.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamGeneral.SetWebThickness(System.Double)">
            <summary>Web thickness of the I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamGeneral.GetWebThickness">
            <summary>Web thickness of the I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamGeneral.SetBottomFlangeThickness(System.Double)">
            <summary>Bottom flange thickness of the I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamGeneral.GetBottomFlangeThickness">
            <summary>Bottom flange thickness of the I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamGeneral.SetBottomFlangeWidth(System.Double)">
            <summary>Bottom flange width of the I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamGeneral.GetBottomFlangeWidth">
            <summary>Bottom flange width of the I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamGeneral.SetTopFlangeThickness(System.Double)">
            <summary>Top flange thickness of the I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamGeneral.GetTopFlangeThickness">
            <summary>Top flange thickness of the I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamGeneral.SetTopFlangeWidth(System.Double)">
            <summary>Top flange width of the I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamGeneral.GetTopFlangeWidth">
            <summary>Top flange width of the I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamGeneral.SetDepth(System.Double)">
            <summary>Depth of the I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamGeneral.GetDepth">
            <summary>Depth of the I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Profile.IIBeamGeneral">
            <summary>A general I-beam profile.</summary>
        </member>
        <member name="M:Oasys.AdSec.Profile.IIBeamGeneral.Create(UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Profile.IIBeamGeneral" /> profile from
<param name="depth"><see cref="!:IIBeamGeneral.Depth" /></param><param name="topFlangeWidth"><see cref="!:IIBeamGeneral.TopFlangeWidth" /></param><param name="topFlangeThickness"><see cref="!:IIBeamGeneral.TopFlangeThickness" /></param><param name="bottomFlangeWidth"><see cref="!:IIBeamGeneral.BottomFlangeWidth" /></param><param name="bottomFlangeThickness"><see cref="!:IIBeamGeneral.BottomFlangeThickness" /></param><param name="webThickness" /><see cref="!:IIBeamGeneral.WebThickness" />.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IIBeamGeneral.WebThickness">
            <summary>Web thickness of the I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IIBeamGeneral.BottomFlangeThickness">
            <summary>Bottom flange thickness of the I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IIBeamGeneral.BottomFlangeWidth">
            <summary>Bottom flange width of the I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IIBeamGeneral.TopFlangeThickness">
            <summary>Top flange thickness of the I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IIBeamGeneral.TopFlangeWidth">
            <summary>Top flange width of the I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IIBeamGeneral.Depth">
            <summary>Depth of the I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="T:Oasys.AdSec.Profile.IIBeamGeneral">
            <summary>A general I-beam profile.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IHollowCircle.Create(System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Profile.IHollowCircle" /> profile from
<param name="diameter"><see cref="!:Oasys.AdSec.Profile.IHollowCircle.Diameter" /></param><param name="wallThickness"><see cref="!:Oasys.AdSec.Profile.IHollowCircle.WallThickness" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IHollowCircle.SetWallThickness(System.Double)">
            <summary>Wall thickness of the hollow circle.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IHollowCircle.GetWallThickness">
            <summary>Wall thickness of the hollow circle.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IHollowCircle.SetDiameter(System.Double)">
            <summary>Diameter of the hollow circle.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IHollowCircle.GetDiameter">
            <summary>Diameter of the hollow circle.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Profile.IHollowCircle">
            <summary>A hollow circular section profile.</summary>
        </member>
        <member name="M:Oasys.AdSec.Profile.IHollowCircle.Create(UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Profile.IHollowCircle" /> profile from
<param name="diameter"><see cref="!:Oasys.AdSec.Profile.IHollowCircle.Diameter" /></param><param name="wallThickness"><see cref="!:Oasys.AdSec.Profile.IHollowCircle.WallThickness" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IHollowCircle.WallThickness">
            <summary>Wall thickness of the hollow circle.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IHollowCircle.Diameter">
            <summary>Diameter of the hollow circle.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="T:Oasys.AdSec.Profile.IHollowCircle">
            <summary>A hollow circular section profile.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILine.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Profile.IPoint&gt;,std.shared_ptr&lt;SDK.Oasys.AdSec.Profile.IPoint&gt;,std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.ILayer&gt;,std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.IPreload&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.ILine" /> reinforcement group from
<param name="firstBarPosition"><see cref="!:ILine.FirstBarPosition" /></param>,
<param name="lastBarPosition"><see cref="!:ILine.LastBarPosition" /></param>,
<param name="layer"> the first layer in <see cref="!:Oasys.AdSec.Reinforcement.ILayeredGroup.Layers" /></param>, and
<param name="preload"><see cref="!:Oasys.AdSec.Reinforcement.ILayeredGroup.Preload" /></param>.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILine.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Profile.IPoint&gt;,std.shared_ptr&lt;SDK.Oasys.AdSec.Profile.IPoint&gt;,std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.ILayer&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.ILine" /> reinforcement group from
<param name="firstBarPosition"><see cref="!:ILine.FirstBarPosition" /></param>,
<param name="lastBarPosition"><see cref="!:ILine.LastBarPosition" /></param>, and
<param name="layer"> the first layer in <see cref="!:Oasys.AdSec.Reinforcement.ILayeredGroup.Layers" /></param>.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILine.SetLastBarPosition(std.shared_ptr&lt;SDK.Oasys.AdSec.Profile.IPoint&gt;)">
            <summary>Position of the centre of the last reinforcement bar or bundle of bars, in the local coordinate system of the containing <see cref="!:ISection" />.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILine.GetLastBarPosition">
            <summary>Position of the centre of the last reinforcement bar or bundle of bars, in the local coordinate system of the containing <see cref="!:ISection" />.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILine.SetFirstBarPosition(std.shared_ptr&lt;SDK.Oasys.AdSec.Profile.IPoint&gt;)">
            <summary>Position of the centre of the first reinforcement bar or bundle of bars, in the local coordinate system of the containing <see cref="!:ISection" />.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILine.GetFirstBarPosition">
            <summary>Position of the centre of the first reinforcement bar or bundle of bars, in the local coordinate system of the containing <see cref="!:ISection" />.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.ILine">
            <summary>A linear reinforcement group that contains one or more parallel layers of reinforcement bars or bundles of bars arranged in straight lines.</summary>
            <remarks>
                <para>The length of <see cref="T:SDK.Oasys.AdSec.Reinforcement.ILine" /> is defined by the positions of the first and last bars or bundles of bars, <see cref="!:FirstBarPosition" /> and <see cref="!:LastBarPosition" />. </para>
                <para>
                    <see cref="T:SDK.Oasys.AdSec.Reinforcement.ILine" />contains one or more instances of <see cref="T:SDK.Oasys.AdSec.Reinforcement.ILayer" />, which define/s the reinforcement bundling and spacing for each layer.</para>
                <para>
                    <see cref="T:SDK.Oasys.AdSec.Reinforcement.ILine" /> also defines the <see cref="!:Oasys.AdSec.Reinforcement.ILayeredGroup.Preload" /> that is applied to all bars in the contained layers.</para>
                <img src="../images/ReinforcementGroups.png" />
            </remarks>
            <seealso cref="T:SDK.Oasys.AdSec.Reinforcement.ILayeredGroup" />
            <seealso cref="T:SDK.Oasys.AdSec.Reinforcement.ILayer" />
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.ILine.Create(Oasys.AdSec.Profile.IPoint,Oasys.AdSec.Profile.IPoint,Oasys.AdSec.Reinforcement.ILayer,Oasys.AdSec.Reinforcement.IPreload)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.ILine" /> reinforcement group from
<param name="firstBarPosition"><see cref="!:ILine.FirstBarPosition" /></param>,
<param name="lastBarPosition"><see cref="!:ILine.LastBarPosition" /></param>,
<param name="layer"> the first layer in <see cref="!:Oasys.AdSec.Reinforcement.ILayeredGroup.Layers" /></param>, and
<param name="preload"><see cref="!:Oasys.AdSec.Reinforcement.ILayeredGroup.Preload" /></param>.</summary>
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.ILine.Create(Oasys.AdSec.Profile.IPoint,Oasys.AdSec.Profile.IPoint,Oasys.AdSec.Reinforcement.ILayer)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.ILine" /> reinforcement group from
<param name="firstBarPosition"><see cref="!:ILine.FirstBarPosition" /></param>,
<param name="lastBarPosition"><see cref="!:ILine.LastBarPosition" /></param>, and
<param name="layer"> the first layer in <see cref="!:Oasys.AdSec.Reinforcement.ILayeredGroup.Layers" /></param>.</summary>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.ILine.LastBarPosition">
            <summary>Position of the centre of the last reinforcement bar or bundle of bars, in the local coordinate system of the containing <see cref="!:ISection" />.</summary>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.ILine.FirstBarPosition">
            <summary>Position of the centre of the first reinforcement bar or bundle of bars, in the local coordinate system of the containing <see cref="!:ISection" />.</summary>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.ILine">
            <summary>A linear reinforcement group that contains one or more parallel layers of reinforcement bars or bundles of bars arranged in straight lines.</summary>
            <remarks>
                <para>The length of <see cref="T:Oasys.AdSec.Reinforcement.ILine" /> is defined by the positions of the first and last bars or bundles of bars, <see cref="P:Oasys.AdSec.Reinforcement.ILine.FirstBarPosition" /> and <see cref="P:Oasys.AdSec.Reinforcement.ILine.LastBarPosition" />. </para>
                <para>
                    <see cref="T:Oasys.AdSec.Reinforcement.ILine" />contains one or more instances of <see cref="T:Oasys.AdSec.Reinforcement.ILayer" />, which define/s the reinforcement bundling and spacing for each layer.</para>
                <para>
                    <see cref="T:Oasys.AdSec.Reinforcement.ILine" /> also defines the <see cref="!:Oasys.AdSec.Reinforcement.ILayeredGroup.Preload" /> that is applied to all bars in the contained layers.</para>
                <img src="../images/ReinforcementGroups.png" />
            </remarks>
            <seealso cref="T:Oasys.AdSec.Reinforcement.ILayeredGroup" />
            <seealso cref="T:Oasys.AdSec.Reinforcement.ILayer" />
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.ITSectionTapered.Create(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Profile.ITSectionTapered" /> profile from
<param name="depth"><see cref="!:ITSectionTapered.Depth" /></param><param name="width"><see cref="!:ITSectionTapered.Width" /></param><param name="flangeThickness"><see cref="!:ITSectionTapered.FlangeThickness" /></param><param name="topWebThickness"><see cref="!:ITSectionTapered.TopWebThickness" /></param><param name="bottomWebThickness"><see cref="!:ITSectionTapered.BottomWebThickness" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.ITSectionTapered.SetBottomWebThickness(System.Double)">
            <summary>Bottom web thickness of the tapered Tee section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.ITSectionTapered.GetBottomWebThickness">
            <summary>Bottom web thickness of the tapered Tee section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.ITSectionTapered.SetTopWebThickness(System.Double)">
            <summary>Top web thickness of the tapered Tee section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.ITSectionTapered.GetTopWebThickness">
            <summary>Top web thickness of the tapered Tee section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.ITSectionTapered.SetFlangeThickness(System.Double)">
            <summary>Flange thickness of the tapered Tee section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.ITSectionTapered.GetFlangeThickness">
            <summary>Flange thickness of the tapered Tee section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.ITSectionTapered.SetWidth(System.Double)">
            <summary>Flange width of the tapered Tee section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.ITSectionTapered.GetWidth">
            <summary>Flange width of the tapered Tee section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.ITSectionTapered.SetDepth(System.Double)">
            <summary>Depth of the tapered Tee section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.ITSectionTapered.GetDepth">
            <summary>Depth of the tapered Tee section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Profile.ITSectionTapered">
            <summary>A tapered Tee section profile.</summary>
        </member>
        <member name="M:Oasys.AdSec.Profile.ITSectionTapered.Create(UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Profile.ITSectionTapered" /> profile from
<param name="depth"><see cref="!:ITSectionTapered.Depth" /></param><param name="width"><see cref="!:ITSectionTapered.Width" /></param><param name="flangeThickness"><see cref="!:ITSectionTapered.FlangeThickness" /></param><param name="topWebThickness"><see cref="!:ITSectionTapered.TopWebThickness" /></param><param name="bottomWebThickness"><see cref="!:ITSectionTapered.BottomWebThickness" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.ITSectionTapered.BottomWebThickness">
            <summary>Bottom web thickness of the tapered Tee section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.ITSectionTapered.TopWebThickness">
            <summary>Top web thickness of the tapered Tee section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.ITSectionTapered.FlangeThickness">
            <summary>Flange thickness of the tapered Tee section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.ITSectionTapered.Width">
            <summary>Flange width of the tapered Tee section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.ITSectionTapered.Depth">
            <summary>Depth of the tapered Tee section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="T:Oasys.AdSec.Profile.ITSectionTapered">
            <summary>A tapered Tee section profile.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.SG">
            <value>Eurocode 2 (part 2) using Singapore's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.NL">
            <value>Eurocode 2 (part 2) using Netherlands' National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.IT">
            <value>Eurocode 2 (part 2) using Italy's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.IE">
            <value>Eurocode 2 (part 2) using Ireland's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.GB">
            <value>Eurocode 2 (part 2) using UK's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.FR">
            <value>Eurocode 2 (part 2) using France's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.ES">
            <value>Eurocode 2 (part 2) using Spain's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.DK">
            <value>Eurocode 2 (part 2) using Denmark's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.DE">
            <value>Eurocode 2 (part 2) using Germany's National Annex</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.None">
            <value>Eurocode 2 (part 2) using no National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.CY">
            <value>Eurocode 2 (part 1) using Cyprus' National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.SG">
            <value>Eurocode 2 (part 1) using Singapore's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.PL">
            <value>Eurocode 2 (part 1) using Poland's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.NO">
            <value>Eurocode 2 (part 1) using Norway's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.NL">
            <value>Eurocode 2 (part 1) using Netherlands' National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.IT">
            <value>Eurocode 2 (part 1) using Italy's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.IE">
            <value>Eurocode 2 (part 1) using Ireland's National Annex</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.GB.PD6687.Edition_2010">
            <value>Eurocode 2 (part 1) using UK's National Annex and PD6687</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.GB.PD6687.Edition_2006">
            <value>Eurocode 2 (part 1) using UK's National Annex and PD6687</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.GB">
            <value>Eurocode 2 (part 1) using UK's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.FR">
            <value>Eurocode 2 (part 1) using France's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.FI">
            <value>Eurocode 2 (part 1) using Finland's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.ES">
            <value>Eurocode 2 (part 1) using Spain's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.DK">
            <value>Eurocode 2 (part 1) using Denmark's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.DE">
            <value>Eurocode 2 (part 1) using Germany's National Annex</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.None">
            <value>Eurocode 2 (part 1) using no National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.SG">
            <value>Eurocode 2 (part 2) using Singapore's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.NL">
            <value>Eurocode 2 (part 2) using Netherlands' National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.IT">
            <value>Eurocode 2 (part 2) using Italy's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.IE">
            <value>Eurocode 2 (part 2) using Ireland's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.GB">
            <value>Eurocode 2 (part 2) using UK's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.FR">
            <value>Eurocode 2 (part 2) using France's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.ES">
            <value>Eurocode 2 (part 2) using Spain's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.DK">
            <value>Eurocode 2 (part 2) using Denmark's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.DE">
            <value>Eurocode 2 (part 2) using Germany's National Annex</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.None">
            <value>Eurocode 2 (part 2) using no National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.CY">
            <value>Eurocode 2 (part 1) using Cyprus' National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.SG">
            <value>Eurocode 2 (part 1) using Singapore's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.PL">
            <value>Eurocode 2 (part 1) using Poland's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.NO">
            <value>Eurocode 2 (part 1) using Norway's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.NL">
            <value>Eurocode 2 (part 1) using Netherlands' National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.IT">
            <value>Eurocode 2 (part 1) using Italy's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.IE">
            <value>Eurocode 2 (part 1) using Ireland's National Annex</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.GB.PD6687.Edition_2010">
            <value>Eurocode 2 (part 1) using UK's National Annex and PD6687</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.GB.PD6687.Edition_2006">
            <value>Eurocode 2 (part 1) using UK's National Annex and PD6687</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.GB">
            <value>Eurocode 2 (part 1) using UK's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.FR">
            <value>Eurocode 2 (part 1) using France's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.FI">
            <value>Eurocode 2 (part 1) using Finland's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.ES">
            <value>Eurocode 2 (part 1) using Spain's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.DK">
            <value>Eurocode 2 (part 1) using Denmark's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.DE">
            <value>Eurocode 2 (part 1) using Germany's National Annex</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.None">
            <value>Eurocode 2 (part 1) using no National Annex</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILink.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.IReinforcement&gt;,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.ILink" /> from
<param name="material"><see cref="!:ILink.Material" /></param>, and
<param name="diameter"><see cref="!:ILink.Diameter" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException">
If diameter is non-finite or non-positive.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILink.SetDiameter(System.Double)">
            <summary>The link bar diameter.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILink.GetDiameter">
            <summary>The link bar diameter.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILink.SetMaterial(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.IReinforcement&gt;)">
            <summary>The link material.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILink.GetMaterial">
            <summary>The link material.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.ILink">
            <summary>A link reinforcement.</summary>
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.ILink.Create(Oasys.AdSec.Materials.IReinforcement,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.ILink" /> from
<param name="material"><see cref="!:ILink.Material" /></param>, and
<param name="diameter"><see cref="!:ILink.Diameter" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException">
If diameter is non-finite or non-positive.</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.ILink.Diameter">
            <summary>The link bar diameter.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.ILink.Material">
            <summary>The link material.</summary>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.ILink">
            <summary>A link reinforcement.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.IRC112.Edition_2011">
            <value>The 2011 edition of IRC112</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.IRC112.Edition_2011">
            <value>The 2011 edition of IRC112</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.AASHTO.Edition_2017.US">
            <value>The 2017 (US units) edition of AASHTO</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.AASHTO.Edition_2017.Metric">
            <value>The 2017 (metric units) edition of AASHTO</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.AASHTO.Edition_2017.US">
            <value>The 2017 (US units) edition of AASHTO</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.AASHTO.Edition_2017.Metric">
            <value>The 2017 (metric units) edition of AASHTO</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IHollowEllipse.Create(System.Double,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Profile.IHollowEllipse" /> profile from
<param name="depth"><see cref="!:IHollowEllipse.Depth" /></param><param name="width"><see cref="!:IHollowEllipse.Width" /></param><param name="wallThickness"><see cref="!:IHollowEllipse.WallThickness" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IHollowEllipse.SetWallThickness(System.Double)">
            <summary>Wall thickness of the hollow ellipse.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IHollowEllipse.GetWallThickness">
            <summary>Wall thickness of the hollow ellipse.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IHollowEllipse.SetWidth(System.Double)">
            <summary>Width of the hollow ellipse.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IHollowEllipse.GetWidth">
            <summary>Width of the hollow ellipse.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IHollowEllipse.SetDepth(System.Double)">
            <summary>Depth of the hollow ellipse.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IHollowEllipse.GetDepth">
            <summary>Depth of the hollow ellipse.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Profile.IHollowEllipse">
            <summary>A hollow elliptical section profile.</summary>
        </member>
        <member name="M:Oasys.AdSec.Profile.IHollowEllipse.Create(UnitsNet.Length,UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Profile.IHollowEllipse" /> profile from
<param name="depth"><see cref="!:IHollowEllipse.Depth" /></param><param name="width"><see cref="!:IHollowEllipse.Width" /></param><param name="wallThickness"><see cref="!:IHollowEllipse.WallThickness" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IHollowEllipse.WallThickness">
            <summary>Wall thickness of the hollow ellipse.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IHollowEllipse.Width">
            <summary>Width of the hollow ellipse.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IHollowEllipse.Depth">
            <summary>Depth of the hollow ellipse.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="T:Oasys.AdSec.Profile.IHollowEllipse">
            <summary>A hollow elliptical section profile.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.ITaperedRectangle.Create(System.Double,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Profile.ITaperedRectangle" /> profile from
<param name="depth"><see cref="!:ITaperedRectangle.Depth" /></param><param name="topWidth"><see cref="!:ITaperedRectangle.TopWidth" /></param><param name="bottomWidth"><see cref="!:ITaperedRectangle.BottomWidth" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.ITaperedRectangle.SetBottomWidth(System.Double)">
            <summary>Bottom width of the tapered rectangular section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.ITaperedRectangle.GetBottomWidth">
            <summary>Bottom width of the tapered rectangular section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.ITaperedRectangle.SetTopWidth(System.Double)">
            <summary>Top width of the tapered rectangular section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.ITaperedRectangle.GetTopWidth">
            <summary>Top width of the tapered rectangular section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.ITaperedRectangle.SetDepth(System.Double)">
            <summary>Depth of the tapered rectangular section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.ITaperedRectangle.GetDepth">
            <summary>Depth of the tapered rectangular section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Profile.ITaperedRectangle">
            <summary>A tapered rectangular section profile.</summary>
        </member>
        <member name="M:Oasys.AdSec.Profile.ITaperedRectangle.Create(UnitsNet.Length,UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Profile.ITaperedRectangle" /> profile from
<param name="depth"><see cref="!:ITaperedRectangle.Depth" /></param><param name="topWidth"><see cref="!:ITaperedRectangle.TopWidth" /></param><param name="bottomWidth"><see cref="!:ITaperedRectangle.BottomWidth" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.ITaperedRectangle.BottomWidth">
            <summary>Bottom width of the tapered rectangular section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.ITaperedRectangle.TopWidth">
            <summary>Top width of the tapered rectangular section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.ITaperedRectangle.Depth">
            <summary>Depth of the tapered rectangular section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="T:Oasys.AdSec.Profile.ITaperedRectangle">
            <summary>A tapered rectangular section profile.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.ACI318.Edition_2014.US">
            <value>The 2014 (US units) edition of ACI318</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.ACI318.Edition_2014.Metric">
            <value>The 2014 (metric units) edition of ACI318</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.ACI318.Edition_2011.US">
            <value>The 2011 (US units) edition of ACI318</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.ACI318.Edition_2011.Metric">
            <value>The 2011 (metric units) edition of ACI318</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.ACI318.Edition_2008.US">
            <value>The 2008 (US units) edition of ACI318</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.ACI318.Edition_2008.Metric">
            <value>The 2008 (metric units) edition of ACI318</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.ACI318.Edition_2005.US">
            <value>The 2005 (US units) edition of ACI318</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.ACI318.Edition_2005.Metric">
            <value>The 2005 (metric units) edition of ACI318</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.ACI318.Edition_2002.US">
            <value>The 2002 (US units) edition of ACI318</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.ACI318.Edition_2002.Metric">
            <value>The 2002 (metric units) edition of ACI318</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.ACI318.Edition_2014.US">
            <value>The 2014 (US units) edition of ACI318</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.ACI318.Edition_2014.Metric">
            <value>The 2014 (metric units) edition of ACI318</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.ACI318.Edition_2011.US">
            <value>The 2011 (US units) edition of ACI318</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.ACI318.Edition_2011.Metric">
            <value>The 2011 (metric units) edition of ACI318</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.ACI318.Edition_2008.US">
            <value>The 2008 (US units) edition of ACI318</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.ACI318.Edition_2008.Metric">
            <value>The 2008 (metric units) edition of ACI318</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.ACI318.Edition_2005.US">
            <value>The 2005 (US units) edition of ACI318</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.ACI318.Edition_2005.Metric">
            <value>The 2005 (metric units) edition of ACI318</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.ACI318.Edition_2002.US">
            <value>The 2002 (US units) edition of ACI318</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.ACI318.Edition_2002.Metric">
            <value>The 2002 (metric units) edition of ACI318</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.HK.SDM.Edition_2013">
            <value>The 2013 edition of HKSDM</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.HK.SDM.Edition_2002">
            <value>The 2002 edition of HKSDM</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.HK.CP.Edition_2013">
            <value>The 2013 edition of HKCP</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.HK.CP.Edition_2007">
            <value>The 2007 edition of HKCP</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.HK.CP.Edition_2004">
            <value>The 2004 edition of HKCP</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.HK.CP.Edition_1987">
            <value>The 1987 edition of HKCP</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.HK.SDM.Edition_2013">
            <value>The 2013 edition of HKSDM</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.HK.SDM.Edition_2002">
            <value>The 2002 edition of HKSDM</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.HK.CP.Edition_2013">
            <value>The 2013 edition of HKCP</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.HK.CP.Edition_2007">
            <value>The 2007 edition of HKCP</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.HK.CP.Edition_2004">
            <value>The 2004 edition of HKCP</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.HK.CP.Edition_1987">
            <value>The 1987 edition of HKCP</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ISingleBars.Create(std.shared_ptr&lt;SDK.Oasys.Collections.IList&gt;,std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.IReinforcement&gt;,System.Double,std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.IPreload&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.ISingleBars" /> reinforcement group from
<param name="positions"><see cref="!:Positions" /></param>,
<param name="material"><see cref="!:Material" /></param>,
<param name="diameter"><see cref="!:Diameter" /></param>, and
<param name="preload"><see cref="!:Preload" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException">
If diameter is non-finite or non-positive and
if positions is empty.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ISingleBars.Create(std.shared_ptr&lt;SDK.Oasys.Collections.IList&gt;,std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.IReinforcement&gt;,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.ISingleBars" /> reinforcement group from
<param name="positions"><see cref="!:Positions" /></param>,
<param name="material"><see cref="!:Material" /></param>, and
<param name="diameter"><see cref="!:Diameter" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException">
If diameter is non-finite or non-positive and
if positions is empty.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ISingleBars.SetCountPerBundle(System.Int32)">
            <summary>The number of bars (or tendons) per bundle.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ISingleBars.GetCountPerBundle">
            <summary>The number of bars (or tendons) per bundle.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ISingleBars.SetDiameter(System.Double)">
            <summary>Diameter of reinforcement bar (or tendon).</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ISingleBars.GetDiameter">
            <summary>Diameter of reinforcement bar (or tendon).</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ISingleBars.SetMaterial(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.IReinforcement&gt;)">
            <summary>Material of reinforcement bar (or tendon).</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ISingleBars.GetMaterial">
            <summary>Material of reinforcement bar (or tendon).</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ISingleBars.SetPreload(std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.IPreload&gt;)">
            <summary>Preload for the group.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ISingleBars.GetPreload">
            <summary>Preload for the group.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ISingleBars.SetPositions(std.shared_ptr&lt;SDK.Oasys.Collections.IList&gt;)">
            <summary>Positions for the single/multiple reinforcement bar(s) (or tendon(s)).</summary>
            <exception cref="!:System.InvalidOperationException"> when an empty positions is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ISingleBars.GetPositions">
            <summary>Positions for the single/multiple reinforcement bar(s) (or tendon(s)).</summary>
            <exception cref="!:System.InvalidOperationException"> when an empty positions is set.</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.ISingleBars">
            <summary>A reinforcement group with single/multiple reinforcement bar(s) (or tendon(s)).</summary>
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.ISingleBars.Create(Oasys.Collections.IList`1{Oasys.AdSec.Profile.IPoint},Oasys.AdSec.Materials.IReinforcement,UnitsNet.Length,Oasys.AdSec.Reinforcement.IPreload)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.ISingleBars" /> reinforcement group from
<param name="positions"><see cref="P:Oasys.AdSec.Reinforcement.ISingleBars.Positions" /></param>,
<param name="material"><see cref="P:Oasys.AdSec.Reinforcement.ISingleBars.Material" /></param>,
<param name="diameter"><see cref="P:Oasys.AdSec.Reinforcement.ISingleBars.Diameter" /></param>, and
<param name="preload"><see cref="P:Oasys.AdSec.Reinforcement.ISingleBars.Preload" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException">
If diameter is non-finite or non-positive and
if positions is empty.</exception>
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.ISingleBars.Create(Oasys.Collections.IList`1{Oasys.AdSec.Profile.IPoint},Oasys.AdSec.Materials.IReinforcement,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.ISingleBars" /> reinforcement group from
<param name="positions"><see cref="P:Oasys.AdSec.Reinforcement.ISingleBars.Positions" /></param>,
<param name="material"><see cref="P:Oasys.AdSec.Reinforcement.ISingleBars.Material" /></param>, and
<param name="diameter"><see cref="P:Oasys.AdSec.Reinforcement.ISingleBars.Diameter" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException">
If diameter is non-finite or non-positive and
if positions is empty.</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.ISingleBars.CountPerBundle">
            <summary>The number of bars (or tendons) per bundle.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.ISingleBars.Diameter">
            <summary>Diameter of reinforcement bar (or tendon).</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.ISingleBars.Material">
            <summary>Material of reinforcement bar (or tendon).</summary>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.ISingleBars.Preload">
            <summary>Preload for the group.</summary>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.ISingleBars.Positions">
            <summary>Positions for the single/multiple reinforcement bar(s) (or tendon(s)).</summary>
            <exception cref="!:System.InvalidOperationException"> when an empty positions is set.</exception>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.ISingleBars">
            <summary>A reinforcement group with single/multiple reinforcement bar(s) (or tendon(s)).</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamTapered.Create(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Profile.IIBeamTapered" /> profile from
<param name="depth"><see cref="!:IIBeamTapered.Depth" /></param><param name="topFlangeWidth"><see cref="!:IIBeamTapered.TopFlangeWidth" /></param><param name="topFlangeThickness"><see cref="!:IIBeamTapered.TopFlangeThickness" /></param><param name="bottomFlangeWidth"><see cref="!:IIBeamTapered.BottomFlangeWidth" /></param><param name="bottomFlangeThickness"><see cref="!:IIBeamTapered.BottomFlangeThickness" /></param><param name="topWebThickness"><see cref="!:IIBeamTapered.TopWebThickness" /></param><param name="bottomWebThickness"><see cref="!:IIBeamTapered.BottomWebThickness" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamTapered.SetBottomWebThickness(System.Double)">
            <summary>Bottom web thickness of the tapered I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamTapered.GetBottomWebThickness">
            <summary>Bottom web thickness of the tapered I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamTapered.SetTopWebThickness(System.Double)">
            <summary>Top web thickness of the tapered I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamTapered.GetTopWebThickness">
            <summary>Top web thickness of the tapered I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamTapered.SetBottomFlangeThickness(System.Double)">
            <summary>Bottom flange thickness of the tapered I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamTapered.GetBottomFlangeThickness">
            <summary>Bottom flange thickness of the tapered I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamTapered.SetBottomFlangeWidth(System.Double)">
            <summary>Bottom flange width of the tapered I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamTapered.GetBottomFlangeWidth">
            <summary>Bottom flange width of the tapered I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamTapered.SetTopFlangeThickness(System.Double)">
            <summary>Top flange thickness of the tapered I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamTapered.GetTopFlangeThickness">
            <summary>Top flange thickness of the tapered I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamTapered.SetTopFlangeWidth(System.Double)">
            <summary>Top flange width of the tapered I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamTapered.GetTopFlangeWidth">
            <summary>Top flange width of the tapered I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamTapered.SetDepth(System.Double)">
            <summary>Depth of the tapered I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeamTapered.GetDepth">
            <summary>Depth of the tapered I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Profile.IIBeamTapered">
            <summary>A tapered I-beam profile.</summary>
        </member>
        <member name="M:Oasys.AdSec.Profile.IIBeamTapered.Create(UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Profile.IIBeamTapered" /> profile from
<param name="depth"><see cref="!:IIBeamTapered.Depth" /></param><param name="topFlangeWidth"><see cref="!:IIBeamTapered.TopFlangeWidth" /></param><param name="topFlangeThickness"><see cref="!:IIBeamTapered.TopFlangeThickness" /></param><param name="bottomFlangeWidth"><see cref="!:IIBeamTapered.BottomFlangeWidth" /></param><param name="bottomFlangeThickness"><see cref="!:IIBeamTapered.BottomFlangeThickness" /></param><param name="topWebThickness"><see cref="!:IIBeamTapered.TopWebThickness" /></param><param name="bottomWebThickness"><see cref="!:IIBeamTapered.BottomWebThickness" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IIBeamTapered.BottomWebThickness">
            <summary>Bottom web thickness of the tapered I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IIBeamTapered.TopWebThickness">
            <summary>Top web thickness of the tapered I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IIBeamTapered.BottomFlangeThickness">
            <summary>Bottom flange thickness of the tapered I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IIBeamTapered.BottomFlangeWidth">
            <summary>Bottom flange width of the tapered I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IIBeamTapered.TopFlangeThickness">
            <summary>Top flange thickness of the tapered I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IIBeamTapered.TopFlangeWidth">
            <summary>Top flange width of the tapered I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IIBeamTapered.Depth">
            <summary>Depth of the tapered I section.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="T:Oasys.AdSec.Profile.IIBeamTapered">
            <summary>A tapered I-beam profile.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IEllipse.Create(System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Profile.IEllipse" /> profile from
<param name="depth"><see cref="!:IEllipse.Depth" /></param><param name="width"><see cref="!:IEllipse.Width" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IEllipse.SetWidth(System.Double)">
            <summary>Width of the ellipse.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IEllipse.GetWidth">
            <summary>Width of the ellipse.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IEllipse.SetDepth(System.Double)">
            <summary>Depth of the ellipse.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IEllipse.GetDepth">
            <summary>Depth of the ellipse.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Profile.IEllipse">
            <summary>An elliptical section profile.</summary>
        </member>
        <member name="M:Oasys.AdSec.Profile.IEllipse.Create(UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Profile.IEllipse" /> profile from
<param name="depth"><see cref="!:IEllipse.Depth" /></param><param name="width"><see cref="!:IEllipse.Width" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IEllipse.Width">
            <summary>Width of the ellipse.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IEllipse.Depth">
            <summary>Depth of the ellipse.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="T:Oasys.AdSec.Profile.IEllipse">
            <summary>An elliptical section profile.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IChannel.Create(System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Profile.IChannel" /> profile from
<param name="depth"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Depth" /></param><param name="width"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Width" /></param><param name="flangeThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.FlangeThickness" /></param><param name="webThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.WebThickness" /></param><param name="isBackToBack"><see cref="!:IChannel.IsBackToBack" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IChannel.Create(System.Double,System.Double,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Profile.IChannel" /> profile from
<param name="depth"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Depth" /></param><param name="width"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Width" /></param><param name="flangeThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.FlangeThickness" /></param><param name="webThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.WebThickness" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IChannel.SetIsBackToBack(System.Boolean)">
            <summary>Channels are placed back to back.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IChannel.GetIsBackToBack">
            <summary>Channels are placed back to back.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Profile.IChannel">
            <summary>A channel section profile.</summary>
        </member>
        <member name="M:Oasys.AdSec.Profile.IChannel.Create(UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,System.Boolean)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Profile.IChannel" /> profile from
<param name="depth"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Depth" /></param><param name="width"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Width" /></param><param name="flangeThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.FlangeThickness" /></param><param name="webThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.WebThickness" /></param><param name="isBackToBack"><see cref="!:IChannel.IsBackToBack" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="M:Oasys.AdSec.Profile.IChannel.Create(UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Profile.IChannel" /> profile from
<param name="depth"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Depth" /></param><param name="width"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Width" /></param><param name="flangeThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.FlangeThickness" /></param><param name="webThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.WebThickness" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IChannel.IsBackToBack">
            <summary>Channels are placed back to back.</summary>
        </member>
        <member name="T:Oasys.AdSec.Profile.IChannel">
            <summary>A channel section profile.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IAdSec.Analyse(std.shared_ptr&lt;SDK.Oasys.AdSec.ISection&gt;)">
            <summary>Anslyse a section.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IAdSec.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.DesignCode.IDesignCode&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.IAdSec" />.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IAdSec.SetDesignCode(std.shared_ptr&lt;SDK.Oasys.AdSec.DesignCode.IDesignCode&gt;)">
            <summary>The design standard to be used for analysis</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IAdSec.GetDesignCode">
            <summary>The design standard to be used for analysis</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.IAdSec">
            <summary>AdSec analyses a section for a solution.</summary>
        </member>
        <member name="M:Oasys.AdSec.IAdSec.Analyse(Oasys.AdSec.ISection)">
            <summary>Anslyse a section.</summary>
        </member>
        <member name="M:Oasys.AdSec.IAdSec.Create(Oasys.AdSec.DesignCode.IDesignCode)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.IAdSec" />.</summary>
        </member>
        <member name="P:Oasys.AdSec.IAdSec.DesignCode">
            <summary>The design standard to be used for analysis</summary>
        </member>
        <member name="T:Oasys.AdSec.IAdSec">
            <summary>AdSec analyses a section for a solution.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.BS5400.Edition_2006">
            <value>The 2006 edition of BS5400 including Interim Advice Note 70/06</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.BS5400.Edition_1990">
            <value>The 1990 edition of BS5400</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.BS5400.Edition_2006">
            <value>The 2006 edition of BS5400 including Interim Advice Note 70/06</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.BS5400.Edition_1990">
            <value>The 1990 edition of BS5400</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.ISolution.GetServiceability">
            <summary>Serviceability allows to check serviceability results.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ISolution.GetStrength">
            <summary>Strength allows to check strength results.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.ISolution">
            <summary>Solution for a section.</summary>
            <remarks>ISolution allows to calculate strength and serviceability results.
<seealso cref="T:SDK.Oasys.AdSec.IStrength" /><seealso cref="T:SDK.Oasys.AdSec.IServiceability" /></remarks>
        </member>
        <member name="P:Oasys.AdSec.ISolution.Serviceability">
            <summary>Serviceability allows to check serviceability results.</summary>
        </member>
        <member name="P:Oasys.AdSec.ISolution.Strength">
            <summary>Strength allows to check strength results.</summary>
        </member>
        <member name="T:Oasys.AdSec.ISolution">
            <summary>Solution for a section.</summary>
            <remarks>ISolution allows to calculate strength and serviceability results.
<seealso cref="T:Oasys.AdSec.IStrength" /><seealso cref="T:Oasys.AdSec.IServiceability" /></remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.ISection.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Profile.IProfile&gt;,std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.IMaterial&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.ISection" /> from
a <see cref="N:SDK.Oasys.AdSec.Profile" /> and a <see cref="!:Material" />.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ISection.SetReinforcementGroups(std.shared_ptr&lt;SDK.Oasys.Collections.IList&gt;)">
            <summary>The groups of reinforcement in the section.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ISection.GetReinforcementGroups">
            <summary>The groups of reinforcement in the section.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ISection.SetMaterial(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.IMaterial&gt;)">
            <summary>The material that the section is made from.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ISection.GetMaterial">
            <summary>The material that the section is made from.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ISection.SetProfile(std.shared_ptr&lt;SDK.Oasys.AdSec.Profile.IProfile&gt;)">
            <summary>Describes the section's shape, size and orientation.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ISection.GetProfile">
            <summary>Describes the section's shape, size and orientation.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.ISection">
            <summary>Represents a cross-section through a structural member of the specified material which can contain reinforcement.
A section has a profile that describes its shape, size and orientation.</summary>
        </member>
        <member name="M:Oasys.AdSec.ISection.Create(Oasys.AdSec.Profile.IProfile,Oasys.AdSec.Materials.IMaterial)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.ISection" /> from
a <see cref="P:Oasys.AdSec.ISection.Profile" /> and a <see cref="P:Oasys.AdSec.ISection.Material" />.</summary>
        </member>
        <member name="P:Oasys.AdSec.ISection.ReinforcementGroups">
            <summary>The groups of reinforcement in the section.</summary>
        </member>
        <member name="P:Oasys.AdSec.ISection.Material">
            <summary>The material that the section is made from.</summary>
        </member>
        <member name="P:Oasys.AdSec.ISection.Profile">
            <summary>Describes the section's shape, size and orientation.</summary>
        </member>
        <member name="T:Oasys.AdSec.ISection">
            <summary>Represents a cross-section through a structural member of the specified material which can contain reinforcement.
A section has a profile that describes its shape, size and orientation.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStrength.GetMomentMomentInteractionCurve(System.Double)">
            <summary>Calculates a moment-moment interaction curve.</summary>
            <param name="axialForce">The axial force.</param>
            <exception cref="!:System.ArgumentOutOfRangeException"> when the value is out of range</exception>
            <returns>The force-moment interaction curve, <see cref="!:Oasys.AdSec.Mesh.ILoadCurve" />.</returns>
            <remarks>If the axial force is outside the capacity range of the section, the returned list will be empty.</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStrength.GetForceMomentInteractionCurve(System.Double)">
            <summary>Calculates a force-moment interaction curve.</summary>
            <param name="momentAngle">The moment angle, which must be in the range -180 degrees to +180 degrees.</param>
            <exception cref="!:System.ArgumentOutOfRangeException"> when the value is out of range</exception>
            <returns>The force-moment interaction curve, <see cref="!:Oasys.AdSec.Mesh.ILoadCurve" />.</returns>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStrength.GetFailureSurface">
            <summary>Generates the strength failure surface.</summary>
            <returns>The failure surface, <see cref="!:Oasys.AdSec.Mesh.ILoadSurface" />.</returns>
            <img src="../images/FailureSurface.PNG" />
        </member>
        <member name="M:SDK.Oasys.AdSec.IStrength.Check(std.shared_ptr&lt;SDK.Oasys.AdSec.IDeformation&gt;)">
            <summary>Calculates strength results for an applied deformation.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStrength.Check(std.shared_ptr&lt;SDK.Oasys.AdSec.ILoad&gt;)">
            <summary>Calculates strength results for an applied load.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.IStrength">
            <summary>Performs strength analysis (ULS), for a given <see cref="T:SDK.Oasys.AdSec.ILoad" /> or <see cref="T:SDK.Oasys.AdSec.IDeformation" />.</summary>
            <remarks>
                <para>
                    <see cref="T:SDK.Oasys.AdSec.IStrength" /> can also generate the strength failure surface and
the force-moment and moment-moment interaction curves.</para>
Results are returned in <see cref="T:SDK.Oasys.AdSec.IStrengthResult" />.
</remarks>
            <seealso cref="T:SDK.Oasys.AdSec.IStrengthResult" />
            <seealso cref="T:SDK.Oasys.AdSec.ILoad" />
            <seealso cref="T:SDK.Oasys.AdSec.IDeformation" />
        </member>
        <member name="M:SDK.Oasys.AdSec.Mesh.ILoadCurve.GetPoints">
            <summary>The points in the curve.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Mesh.ILoadCurve">
            <summary>A curve formed from a ordered list of load points.</summary>
        </member>
        <member name="M:Oasys.AdSec.IStrength.GetMomentMomentInteractionCurve(UnitsNet.Force)">
            <summary>Calculates a moment-moment interaction curve.</summary>
            <param name="axialForce">The axial force.</param>
            <exception cref="!:System.ArgumentOutOfRangeException"> when the value is out of range</exception>
            <returns>The force-moment interaction curve, <see cref="!:Oasys.AdSec.Mesh.ILoadCurve" />.</returns>
            <remarks>If the axial force is outside the capacity range of the section, the returned list will be empty.</remarks>
        </member>
        <member name="M:Oasys.AdSec.IStrength.GetForceMomentInteractionCurve(UnitsNet.Angle)">
            <summary>Calculates a force-moment interaction curve.</summary>
            <param name="momentAngle">The moment angle, which must be in the range -180 degrees to +180 degrees.</param>
            <exception cref="!:System.ArgumentOutOfRangeException"> when the value is out of range</exception>
            <returns>The force-moment interaction curve, <see cref="!:Oasys.AdSec.Mesh.ILoadCurve" />.</returns>
        </member>
        <member name="M:Oasys.AdSec.IStrength.GetFailureSurface">
            <summary>Generates the strength failure surface.</summary>
            <returns>The failure surface, <see cref="!:Oasys.AdSec.Mesh.ILoadSurface" />.</returns>
            <img src="../images/FailureSurface.PNG" />
        </member>
        <member name="M:Oasys.AdSec.IStrength.Check(Oasys.AdSec.IDeformation)">
            <summary>Calculates strength results for an applied deformation.</summary>
        </member>
        <member name="M:Oasys.AdSec.IStrength.Check(Oasys.AdSec.ILoad)">
            <summary>Calculates strength results for an applied load.</summary>
        </member>
        <member name="T:Oasys.AdSec.IStrength">
            <summary>Performs strength analysis (ULS), for a given <see cref="T:Oasys.AdSec.ILoad" /> or <see cref="T:Oasys.AdSec.IDeformation" />.</summary>
            <remarks>
                <para>
                    <see cref="T:Oasys.AdSec.IStrength" /> can also generate the strength failure surface and
the force-moment and moment-moment interaction curves.</para>
Results are returned in <see cref="T:Oasys.AdSec.IStrengthResult" />.
</remarks>
            <seealso cref="T:Oasys.AdSec.IStrengthResult" />
            <seealso cref="T:Oasys.AdSec.ILoad" />
            <seealso cref="T:Oasys.AdSec.IDeformation" />
        </member>
        <member name="P:Oasys.AdSec.Mesh.ILoadCurve.Points">
            <summary>The points in the curve.</summary>
        </member>
        <member name="T:Oasys.AdSec.Mesh.ILoadCurve">
            <summary>A curve formed from a ordered list of load points.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IPreStress.Create(System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.IPreStress" /> preload from
<param name="stress"><see cref="!:Oasys.AdSec.Reinforcement.IPreStress.Stress" /></param>.
Positive stress indicates tension.</summary>
            <exception cref="!:System.InvalidOperationException">
If stress is non-finite.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IPreStress.SetStress(System.Double)">
            <summary>Positive stress indicates tension.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IPreStress.GetStress">
            <summary>Positive stress indicates tension.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.IPreStress">
            <summary>A reinforcement preload of type bar stress.</summary>
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.IPreStress.Create(UnitsNet.Pressure)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.IPreStress" /> preload from
<param name="stress"><see cref="!:Oasys.AdSec.Reinforcement.IPreStress.Stress" /></param>.
Positive stress indicates tension.</summary>
            <exception cref="!:System.InvalidOperationException">
If stress is non-finite.</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.IPreStress.Stress">
            <summary>Positive stress indicates tension.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.IPreStress">
            <summary>A reinforcement preload of type bar stress.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IIBeam.Create(System.Double,System.Double,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Profile.IIBeam" /> profile from
<param name="depth"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Depth" /></param><param name="width"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Width" /></param><param name="flangeThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.FlangeThickness" /></param><param name="webThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.WebThickness" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Profile.IIBeam">
            <summary>An I-beam profile.</summary>
        </member>
        <member name="M:Oasys.AdSec.Profile.IIBeam.Create(UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Profile.IIBeam" /> profile from
<param name="depth"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Depth" /></param><param name="width"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Width" /></param><param name="flangeThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.FlangeThickness" /></param><param name="webThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.WebThickness" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="T:Oasys.AdSec.Profile.IIBeam">
            <summary>An I-beam profile.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.CY">
            <value>Eurocode 2 (part 1) using Cyprus' National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.SG">
            <value>Eurocode 2 (part 1) using Singapore's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.PL">
            <value>Eurocode 2 (part 1) using Poland's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.NO">
            <value>Eurocode 2 (part 1) using Norway's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.NL">
            <value>Eurocode 2 (part 1) using Netherlands' National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.IT">
            <value>Eurocode 2 (part 1) using Italy's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.IE">
            <value>Eurocode 2 (part 1) using Ireland's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.GB">
            <value>Eurocode 2 (part 1) using UK's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.FR">
            <value>Eurocode 2 (part 1) using France's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.FI">
            <value>Eurocode 2 (part 1) using Finland's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.ES">
            <value>Eurocode 2 (part 1) using Spain's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.DK">
            <value>Eurocode 2 (part 1) using Denmark's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.DE">
            <value>Eurocode 2 (part 1) using Germany's National Annex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.None">
            <value>Eurocode 2 (part 1) using no National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.CY">
            <value>Eurocode 2 (part 1) using Cyprus' National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.SG">
            <value>Eurocode 2 (part 1) using Singapore's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.PL">
            <value>Eurocode 2 (part 1) using Poland's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.NO">
            <value>Eurocode 2 (part 1) using Norway's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.NL">
            <value>Eurocode 2 (part 1) using Netherlands' National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.IT">
            <value>Eurocode 2 (part 1) using Italy's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.IE">
            <value>Eurocode 2 (part 1) using Ireland's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.GB">
            <value>Eurocode 2 (part 1) using UK's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.FR">
            <value>Eurocode 2 (part 1) using France's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.FI">
            <value>Eurocode 2 (part 1) using Finland's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.ES">
            <value>Eurocode 2 (part 1) using Spain's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.DK">
            <value>Eurocode 2 (part 1) using Denmark's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.DE">
            <value>Eurocode 2 (part 1) using Germany's National Annex</value>
        </member>
        <member name="T:Oasys.AdSec.Materials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.None">
            <value>Eurocode 2 (part 1) using no National Annex</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.AS5100.Edition_2017">
            <value>The 2017 edition of AS5100</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.AS5100.Edition_2017">
            <value>The 2017 edition of AS5100</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IPreStrain.Create(System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.IPreStrain" /> preload from
<param name="strain"><see cref="!:Oasys.AdSec.Reinforcement.IPreStrain.Strain" /></param>.
Positive strain indicates tension.</summary>
            <exception cref="!:System.InvalidOperationException">
If strain is non-finite.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IPreStrain.SetStrain(System.Double)">
            <summary>Positive strain indicates tension.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IPreStrain.GetStrain">
            <summary>Positive strain indicates tension.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.IPreStrain">
            <summary>A reinforcement preload of type bar strain.</summary>
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.IPreStrain.Create(UnitsNet.Strain)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.IPreStrain" /> preload from
<param name="strain"><see cref="!:Oasys.AdSec.Reinforcement.IPreStrain.Strain" /></param>.
Positive strain indicates tension.</summary>
            <exception cref="!:System.InvalidOperationException">
If strain is non-finite.</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.IPreStrain.Strain">
            <summary>Positive strain indicates tension.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.IPreStrain">
            <summary>A reinforcement preload of type bar strain.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.IConcrete">
            <summary>A concrete material.</summary>
        </member>
        <member name="T:Oasys.AdSec.Materials.IConcrete">
            <summary>A concrete material.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IArc.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Profile.IPoint&gt;,System.Double,System.Double,System.Double,std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.ILayer&gt;,std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.IPreload&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.IArc" /> reinforcement group from
<param name="centre"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.Centre" /></param>,
<param name="radius"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.Radius" /></param>,
<param name="startAngle"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.StartAngle" /></param>,
<param name="sweepAngle"><see cref="!:IArc.SweepAngle" /></param>,
<param name="layer"> the first layer in <see cref="!:Oasys.AdSec.Reinforcement.ILayeredGroup.Layers" /></param>, and
<param name="preload"><see cref="!:Oasys.AdSec.Reinforcement.ILayeredGroup.Preload" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException">
If radius is non-finite or non-positive,
if startAngle is non-finite and
if sweepAngle is not between +360.0 and -360.0 degrees.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IArc.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Profile.IPoint&gt;,System.Double,System.Double,System.Double,std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.ILayer&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.IArc" /> reinforcement group from
<param name="centre"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.Centre" /></param>,
<param name="radius"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.Radius" /></param>,
<param name="startAngle"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.StartAngle" /></param>,
<param name="sweepAngle"><see cref="!:IArc.SweepAngle" /></param>, and
<param name="layer"> the first layer in <see cref="!:Oasys.AdSec.Reinforcement.ILayeredGroup.Layers" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException">
If radius is non-finite or non-positive,
if startAngle is non-finite and
if sweepAngle is not between +360.0 and -360.0 degrees.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IArc.SetSweepAngle(System.Double)">
            <summary>Angle sweeped by the arc from its start angle.
Positive angle is anti-clockwise.</summary>
            <exception cref="!:System.InvalidOperationException"> when the value is not between +360.0 and -360.0 degrees.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IArc.GetSweepAngle">
            <summary>Angle sweeped by the arc from its start angle.
Positive angle is anti-clockwise.</summary>
            <exception cref="!:System.InvalidOperationException"> when the value is not between +360.0 and -360.0 degrees.</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.IArc">
            <summary>An arc reinforcement group.</summary>
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.IArc.Create(Oasys.AdSec.Profile.IPoint,UnitsNet.Length,UnitsNet.Angle,UnitsNet.Angle,Oasys.AdSec.Reinforcement.ILayer,Oasys.AdSec.Reinforcement.IPreload)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.IArc" /> reinforcement group from
<param name="centre"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.Centre" /></param>,
<param name="radius"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.Radius" /></param>,
<param name="startAngle"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.StartAngle" /></param>,
<param name="sweepAngle"><see cref="!:IArc.SweepAngle" /></param>,
<param name="layer"> the first layer in <see cref="!:Oasys.AdSec.Reinforcement.ILayeredGroup.Layers" /></param>, and
<param name="preload"><see cref="!:Oasys.AdSec.Reinforcement.ILayeredGroup.Preload" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException">
If radius is non-finite or non-positive,
if startAngle is non-finite and
if sweepAngle is not between +360.0 and -360.0 degrees.</exception>
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.IArc.Create(Oasys.AdSec.Profile.IPoint,UnitsNet.Length,UnitsNet.Angle,UnitsNet.Angle,Oasys.AdSec.Reinforcement.ILayer)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.IArc" /> reinforcement group from
<param name="centre"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.Centre" /></param>,
<param name="radius"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.Radius" /></param>,
<param name="startAngle"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.StartAngle" /></param>,
<param name="sweepAngle"><see cref="!:IArc.SweepAngle" /></param>, and
<param name="layer"> the first layer in <see cref="!:Oasys.AdSec.Reinforcement.ILayeredGroup.Layers" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException">
If radius is non-finite or non-positive,
if startAngle is non-finite and
if sweepAngle is not between +360.0 and -360.0 degrees.</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.IArc.SweepAngle">
            <summary>Angle sweeped by the arc from its start angle.
Positive angle is anti-clockwise.</summary>
            <exception cref="!:System.InvalidOperationException"> when the value is not between +360.0 and -360.0 degrees.</exception>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.IArc">
            <summary>An arc reinforcement group.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IAngle.Create(System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Profile.IAngle" /> profile from
<param name="depth"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Depth" /></param><param name="width"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Width" /></param><param name="flangeThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.FlangeThickness" /></param><param name="webThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.WebThickness" /></param><param name="isBackToBack"><see cref="!:IAngle.IsBackToBack" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IAngle.Create(System.Double,System.Double,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Profile.IAngle" /> profile from
<param name="depth"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Depth" /></param><param name="width"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Width" /></param><param name="flangeThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.FlangeThickness" /></param><param name="webThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.WebThickness" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IAngle.SetIsBackToBack(System.Boolean)">
            <summary>Angles are placed back to back.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IAngle.GetIsBackToBack">
            <summary>Angles are placed back to back.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Profile.IAngle">
            <summary>An angle section profile.</summary>
        </member>
        <member name="M:Oasys.AdSec.Profile.IAngle.Create(UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,System.Boolean)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Profile.IAngle" /> profile from
<param name="depth"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Depth" /></param><param name="width"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Width" /></param><param name="flangeThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.FlangeThickness" /></param><param name="webThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.WebThickness" /></param><param name="isBackToBack"><see cref="!:IAngle.IsBackToBack" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="M:Oasys.AdSec.Profile.IAngle.Create(UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Profile.IAngle" /> profile from
<param name="depth"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Depth" /></param><param name="width"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Width" /></param><param name="flangeThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.FlangeThickness" /></param><param name="webThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.WebThickness" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IAngle.IsBackToBack">
            <summary>Angles are placed back to back.</summary>
        </member>
        <member name="T:Oasys.AdSec.Profile.IAngle">
            <summary>An angle section profile.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.ITSection.Create(System.Double,System.Double,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Profile.ITSection" /> profile from
<param name="depth"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Depth" /></param><param name="width"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Width" /></param><param name="flangeThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.FlangeThickness" /></param><param name="webThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.WebThickness" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Profile.ITSection">
            <summary>A Tee section profile.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IStandardFlange.SetWebThickness(System.Double)">
            <summary>Web thickness of the profile.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IStandardFlange.GetWebThickness">
            <summary>Web thickness of the profile.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IStandardFlange.SetFlangeThickness(System.Double)">
            <summary>Flange thickness of the profile.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IStandardFlange.GetFlangeThickness">
            <summary>Flange thickness of the profile.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IStandardFlange.SetWidth(System.Double)">
            <summary>Flange width of the profile.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IStandardFlange.GetWidth">
            <summary>Flange width of the profile.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IStandardFlange.SetDepth(System.Double)">
            <summary>Depth of the profile.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IStandardFlange.GetDepth">
            <summary>Depth of the profile.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Profile.IStandardFlange">
            <summary>A standard flanged section profile.</summary>
        </member>
        <member name="M:Oasys.AdSec.Profile.ITSection.Create(UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Profile.ITSection" /> profile from
<param name="depth"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Depth" /></param><param name="width"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.Width" /></param><param name="flangeThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.FlangeThickness" /></param><param name="webThickness"><see cref="!:Oasys.AdSec.Profile.IStandardFlange.WebThickness" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="T:Oasys.AdSec.Profile.ITSection">
            <summary>A Tee section profile.</summary>
        </member>
        <member name="P:Oasys.AdSec.Profile.IStandardFlange.WebThickness">
            <summary>Web thickness of the profile.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IStandardFlange.FlangeThickness">
            <summary>Flange thickness of the profile.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IStandardFlange.Width">
            <summary>Flange width of the profile.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IStandardFlange.Depth">
            <summary>Depth of the profile.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="T:Oasys.AdSec.Profile.IStandardFlange">
            <summary>A standard flanged section profile.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.BS8110.Edition_2005">
            <value>The 2005 edition of BS8110</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.BS8110.Edition_1997">
            <value>The 1997 edition of BS8110</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.BS8110.Edition_1985">
            <value>The 1985 edition of BS8110</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.BS8110.Edition_2005">
            <value>The 2005 edition of BS8110</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.BS8110.Edition_1997">
            <value>The 1997 edition of BS8110</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.BS8110.Edition_1985">
            <value>The 1985 edition of BS8110</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ICircular.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Profile.IPoint&gt;,System.Double,System.Double,std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.ILayer&gt;,std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.IPreload&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.ICircular" /> reinforcement group from
<param name="centre"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.Centre" /></param>,
<param name="radius"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.Radius" /></param>,
<param name="startAngle"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.StartAngle" /></param>,
<param name="layer"> the first layer in <see cref="!:Oasys.AdSec.Reinforcement.ILayeredGroup.Layers" /></param>, and
<param name="preload"><see cref="!:Oasys.AdSec.Reinforcement.ILayeredGroup.Preload" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException">
If radius is non-finite or non-positive and
if startAngle is non-finite.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ICircular.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Profile.IPoint&gt;,System.Double,System.Double,std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.ILayer&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.ICircular" /> reinforcement group from
<param name="centre"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.Centre" /></param>,
<param name="radius"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.Radius" /></param>,
<param name="startAngle"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.StartAngle" /></param>, and
<param name="layer"> the first layer in <see cref="!:Oasys.AdSec.Reinforcement.ILayeredGroup.Layers" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException">
If radius is non-finite or non-positive and
if startAngle is non-finite.</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.ICircular">
            <summary>A circular reinforcement group.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IRadialGroup.SetStartAngle(System.Double)">
            <summary>Angle at which the group starts.
Positive angle is anti-clockwise.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IRadialGroup.GetStartAngle">
            <summary>Angle at which the group starts.
Positive angle is anti-clockwise.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IRadialGroup.SetRadius(System.Double)">
            <summary>Radius of the group.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IRadialGroup.GetRadius">
            <summary>Radius of the group.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IRadialGroup.SetCentre(std.shared_ptr&lt;SDK.Oasys.AdSec.Profile.IPoint&gt;)">
            <summary>Centre of the group.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IRadialGroup.GetCentre">
            <summary>Centre of the group.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.IRadialGroup">
            <summary>A radial reinforcement group.</summary>
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.ICircular.Create(Oasys.AdSec.Profile.IPoint,UnitsNet.Length,UnitsNet.Angle,Oasys.AdSec.Reinforcement.ILayer,Oasys.AdSec.Reinforcement.IPreload)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.ICircular" /> reinforcement group from
<param name="centre"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.Centre" /></param>,
<param name="radius"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.Radius" /></param>,
<param name="startAngle"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.StartAngle" /></param>,
<param name="layer"> the first layer in <see cref="!:Oasys.AdSec.Reinforcement.ILayeredGroup.Layers" /></param>, and
<param name="preload"><see cref="!:Oasys.AdSec.Reinforcement.ILayeredGroup.Preload" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException">
If radius is non-finite or non-positive and
if startAngle is non-finite.</exception>
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.ICircular.Create(Oasys.AdSec.Profile.IPoint,UnitsNet.Length,UnitsNet.Angle,Oasys.AdSec.Reinforcement.ILayer)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.ICircular" /> reinforcement group from
<param name="centre"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.Centre" /></param>,
<param name="radius"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.Radius" /></param>,
<param name="startAngle"><see cref="!:Oasys.AdSec.Reinforcement.IRadialGroup.StartAngle" /></param>, and
<param name="layer"> the first layer in <see cref="!:Oasys.AdSec.Reinforcement.ILayeredGroup.Layers" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException">
If radius is non-finite or non-positive and
if startAngle is non-finite.</exception>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.ICircular">
            <summary>A circular reinforcement group.</summary>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.IRadialGroup.StartAngle">
            <summary>Angle at which the group starts.
Positive angle is anti-clockwise.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.IRadialGroup.Radius">
            <summary>Radius of the group.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.IRadialGroup.Centre">
            <summary>Centre of the group.</summary>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.IRadialGroup">
            <summary>A radial reinforcement group.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Mesh.ILoadSurface.GetFaces">
            <value>The faces of the surface, with consistent orientation.</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.Mesh.ILoadSurface.GetVertices">
            <value>The vertices of the surface.</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.Mesh.ILoadSurface">
            <summary>
A triangulated surface in a Load coordinate system.
</summary>
            <remarks>
Each vertex is a <see cref="!:Oasys.AdSec.ILoad" />.
Each face is a <see cref="!:Oasys.AdSec.Mesh.ITriangleFace" /> which contains three references to
vertices in <see cref="!:Oasys.AdSec.Mesh.ILoadSurface.Vertices" />.
</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.Mesh.ITriangleFace.GetVertex3">
            <value>The index of the third vertex</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.Mesh.ITriangleFace.GetVertex2">
            <value>The index of the second vertex</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.Mesh.ITriangleFace.GetVertex1">
            <value>The index of the first vertex</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.Mesh.ITriangleFace">
            <summary>A face in a triangulated surface.</summary>
            <remarks>
Contains three vertex indices. A list of vertices that the indices refer to are
typically provided along with the faces (e.g. in <see cref="!:Oasys.AdSec.Mesh.ILoadSurface" />).
</remarks>
        </member>
        <member name="P:Oasys.AdSec.Mesh.ILoadSurface.Faces">
            <value>The faces of the surface, with consistent orientation.</value>
        </member>
        <member name="P:Oasys.AdSec.Mesh.ILoadSurface.Vertices">
            <value>The vertices of the surface.</value>
        </member>
        <member name="T:Oasys.AdSec.Mesh.ILoadSurface">
            <summary>
A triangulated surface in a Load coordinate system.
</summary>
            <remarks>
Each vertex is a <see cref="!:Oasys.AdSec.ILoad" />.
Each face is a <see cref="!:Oasys.AdSec.Mesh.ITriangleFace" /> which contains three references to
vertices in <see cref="!:Oasys.AdSec.Mesh.ILoadSurface.Vertices" />.
</remarks>
        </member>
        <member name="P:Oasys.AdSec.Mesh.ITriangleFace.Vertex3">
            <value>The index of the third vertex</value>
        </member>
        <member name="P:Oasys.AdSec.Mesh.ITriangleFace.Vertex2">
            <value>The index of the second vertex</value>
        </member>
        <member name="P:Oasys.AdSec.Mesh.ITriangleFace.Vertex1">
            <value>The index of the first vertex</value>
        </member>
        <member name="T:Oasys.AdSec.Mesh.ITriangleFace">
            <summary>A face in a triangulated surface.</summary>
            <remarks>
Contains three vertex indices. A list of vertices that the indices refer to are
typically provided along with the faces (e.g. in <see cref="!:Oasys.AdSec.Mesh.ILoadSurface" />).
</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ICover.Create(System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.ICover" /> from
<param name="allFaces"><see cref="!:ICover.AllFaces" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException">
If allFaces is non-finite.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ICover.SetAllFaces(System.Double)">
            <summary>The cover for all faces of the section component</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ICover.GetAllFaces">
            <summary>The cover for all faces of the section component</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.ICover">
            <summary>A cover definition</summary>
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.ICover.Create(UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.ICover" /> from
<param name="allFaces"><see cref="!:ICover.AllFaces" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException">
If allFaces is non-finite.</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.ICover.AllFaces">
            <summary>The cover for all faces of the section component</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.ICover">
            <summary>A cover definition</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.IS456.Edition_2000">
            <value>The 2000 edition of IS456</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.IS456.Edition_2000">
            <value>The 2000 edition of IS456</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILayerByBarCount.Create(System.Int32,std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.IReinforcement&gt;,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.ILayerByBarCount" /> from
bar count, reinforcement material and diameter.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILayerByBarCount.SetCount(System.Int32)">
            <summary>The number of bundles, or single bars, in the layer.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILayerByBarCount.GetCount">
            <summary>The number of bundles, or single bars, in the layer.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.ILayerByBarCount">
            <summary>A reinforcement layer defined by the number of bundles or single bars in the layer.</summary>
            <remarks>
                <see cref="T:SDK.Oasys.AdSec.Reinforcement.ILayerByBarCount" /> inherits <see cref="T:SDK.Oasys.AdSec.Reinforcement.ILayer" />.
<para>It defines a reinforcement layer by the number of bundles or single bars.
The bundles or single bars are spaced out evenly over the available space.</para><img src="../images/ReinforcementGroups.png" /></remarks>
            <example>
# [C#](#tab/tabid-1)
<code source="../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ILayerByBarCount.cs" region="SnippetCreateLayerByBarCount" lang="csharp" title="Example 1" /><para>Example creating layer</para>
# [Python](#tab/tabid-2)
<code source="../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ILayerByBarCount.py" region="SnippetCreateLayerByBarCount" lang="python" title="Example 2" /><para>Example creating layer</para>
***
</example>
            <seealso cref="T:SDK.Oasys.AdSec.Reinforcement.ILayer" />
            <seealso cref="!:ILayerByBarPitch" />
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.ILayerByBarCount.Create(System.Int32,Oasys.AdSec.Materials.IReinforcement,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.ILayerByBarCount" /> from
bar count, reinforcement material and diameter.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.ILayerByBarCount.Count">
            <summary>The number of bundles, or single bars, in the layer.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.ILayerByBarCount">
            <summary>A reinforcement layer defined by the number of bundles or single bars in the layer.</summary>
            <remarks>
                <see cref="T:Oasys.AdSec.Reinforcement.ILayerByBarCount" /> inherits <see cref="T:Oasys.AdSec.Reinforcement.ILayer" />.
<para>It defines a reinforcement layer by the number of bundles or single bars.
The bundles or single bars are spaced out evenly over the available space.</para><img src="../images/ReinforcementGroups.png" /></remarks>
            <example>
# [C#](#tab/tabid-1)
<code source="../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ILayerByBarCount.cs" region="SnippetCreateLayerByBarCount" lang="csharp" title="Example 1" /><para>Example creating layer</para>
# [Python](#tab/tabid-2)
<code source="../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ILayerByBarCount.py" region="SnippetCreateLayerByBarCount" lang="python" title="Example 2" /><para>Example creating layer</para>
***
</example>
            <seealso cref="T:Oasys.AdSec.Reinforcement.ILayer" />
            <seealso cref="!:ILayerByBarPitch" />
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.IRS.Edition_1997">
            <value>The 1997 edition of IRS Bridge</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.IRS.Edition_1997">
            <value>The 1997 edition of IRS Bridge</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IRectangle.Create(System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Profile.IRectangle" /> profile from
<see cref="!:Depth" /> and <see cref="!:Width" />.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IRectangle.SetWidth(System.Double)">
            <summary>Width of the rectangle, in y-axis direction.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IRectangle.GetWidth">
            <summary>Width of the rectangle, in y-axis direction.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IRectangle.SetDepth(System.Double)">
            <summary>Depth of the rectangle, in z-axis direction.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IRectangle.GetDepth">
            <summary>Depth of the rectangle, in z-axis direction.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Profile.IRectangle">
            <summary>Defines a rectangular section profile from a depth and a width.</summary>
            <remarks>
The rectangle is centered at the origin of the local coordinate system.
<para><see cref="T:SDK.Oasys.AdSec.Profile.IRectangle" /> inherits <see cref="T:SDK.Oasys.AdSec.Profile.IProfile" />.</para><img src="../images/RectangleProfile.PNG" /></remarks>
            <example>
C#
<code>
/* Create a rectangular concrete section
 * with a depth of 800mm and a width of 500mm.
 * Set the profile rotation to 30 degrees.
 */
ISection CreateSection() {
    IProfile profile = IRectangle.Create(
        UnitsNet.Length.FromMillimeters(800),
        UnitsNet.Length.FromMillimeters(500));
    profile.Rotation = UnitsNet.Angle.FromDegrees(30);

    return ISection.Create(profile, Materials.Concrete.IS456.Edition_2000.M20);
}
</code>

Python
<code>
def create_section():
    depth = UnitsNet.Length(800.0, UnitsNet.Units.LengthUnit.MilliMeter)
    width = UnitsNet.Length(500.0, UnitsNet.Units.LengthUnit.MilliMeter)
    profile = IRectangle.Create(depth, width)
    profile.Rotation = UnitsNet.Angle(30.0, UnitsNet.Units.AngleUnit.Degrees)

    return ISection.Create(profile, Materials.Concrete.IS456.Edition_2000.M20)
</code></example>
            <seealso cref="T:SDK.Oasys.AdSec.Profile.IProfile" />
        </member>
        <member name="M:Oasys.AdSec.Profile.IRectangle.Create(UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Profile.IRectangle" /> profile from
<see cref="P:Oasys.AdSec.Profile.IRectangle.Depth" /> and <see cref="P:Oasys.AdSec.Profile.IRectangle.Width" />.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IRectangle.Width">
            <summary>Width of the rectangle, in y-axis direction.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IRectangle.Depth">
            <summary>Depth of the rectangle, in z-axis direction.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="T:Oasys.AdSec.Profile.IRectangle">
            <summary>Defines a rectangular section profile from a depth and a width.</summary>
            <remarks>
The rectangle is centered at the origin of the local coordinate system.
<para><see cref="T:Oasys.AdSec.Profile.IRectangle" /> inherits <see cref="T:Oasys.AdSec.Profile.IProfile" />.</para><img src="../images/RectangleProfile.PNG" /></remarks>
            <example>
C#
<code>
/* Create a rectangular concrete section
 * with a depth of 800mm and a width of 500mm.
 * Set the profile rotation to 30 degrees.
 */
ISection CreateSection() {
    IProfile profile = IRectangle.Create(
        UnitsNet.Length.FromMillimeters(800),
        UnitsNet.Length.FromMillimeters(500));
    profile.Rotation = UnitsNet.Angle.FromDegrees(30);

    return ISection.Create(profile, Materials.Concrete.IS456.Edition_2000.M20);
}
</code>

Python
<code>
def create_section():
    depth = UnitsNet.Length(800.0, UnitsNet.Units.LengthUnit.MilliMeter)
    width = UnitsNet.Length(500.0, UnitsNet.Units.LengthUnit.MilliMeter)
    profile = IRectangle.Create(depth, width)
    profile.Rotation = UnitsNet.Angle(30.0, UnitsNet.Units.AngleUnit.Degrees)

    return ISection.Create(profile, Materials.Concrete.IS456.Edition_2000.M20)
</code></example>
            <seealso cref="T:Oasys.AdSec.Profile.IProfile" />
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IPerimeter.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Profile.IProfile&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Profile.IPerimeter" /> profile from any other profile.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IPerimeter.Create">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Profile.IPerimeter" /> profile.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IPerimeter.SetVoidPolygons(std.shared_ptr&lt;SDK.Oasys.Collections.IList&gt;)">
            <summary>The void polygons.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IPerimeter.GetVoidPolygons">
            <summary>The void polygons.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IPerimeter.SetSolidPolygon(std.shared_ptr&lt;SDK.Oasys.AdSec.Profile.IPolygon&gt;)">
            <summary>The solid polygon.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IPerimeter.GetSolidPolygon">
            <summary>The solid polygon.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Profile.IPerimeter">
            <summary>A perimeter section profile.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IPolygon.SetPoints(std.shared_ptr&lt;SDK.Oasys.Collections.IList&gt;)">
            <summary>The vertices of the polygon.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IPolygon.GetPoints">
            <summary>The vertices of the polygon.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Profile.IPolygon">
            <summary>A 2D polygon for defining section profile geometry.</summary>
        </member>
        <member name="M:Oasys.AdSec.Profile.IPerimeter.Create(Oasys.AdSec.Profile.IProfile)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Profile.IPerimeter" /> profile from any other profile.</summary>
        </member>
        <member name="M:Oasys.AdSec.Profile.IPerimeter.Create">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Profile.IPerimeter" /> profile.</summary>
        </member>
        <member name="P:Oasys.AdSec.Profile.IPerimeter.VoidPolygons">
            <summary>The void polygons.</summary>
        </member>
        <member name="P:Oasys.AdSec.Profile.IPerimeter.SolidPolygon">
            <summary>The solid polygon.</summary>
        </member>
        <member name="T:Oasys.AdSec.Profile.IPerimeter">
            <summary>A perimeter section profile.</summary>
        </member>
        <member name="P:Oasys.AdSec.Profile.IPolygon.Points">
            <summary>The vertices of the polygon.</summary>
        </member>
        <member name="T:Oasys.AdSec.Profile.IPolygon">
            <summary>A 2D polygon for defining section profile geometry.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IVersion.Api">
            <summary>The version of the API.</summary>
        </member>
        <member name="M:Oasys.AdSec.IVersion.Api">
            <summary>The version of the API.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.CSA.S6.Edition_2014">
            <value>The 2014 edition of CSA S6</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.CSA.A23_3.Edition_2014">
            <value>The 2014 edition of CSA A23 Part 3</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.CSA.A23_3.Edition_2004">
            <value>The 2004 edition of CSA A23 Part 3</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.CSA.S6.Edition_2014">
            <value>The 2014 edition of CSA S6</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.CSA.A23_3.Edition_2014">
            <value>The 2014 edition of CSA A23 Part 3</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.CSA.A23_3.Edition_2004">
            <value>The 2004 edition of CSA A23 Part 3</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.AS3600.Edition_2018">
            <value>The 2018 edition of AS3600</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.AS3600.Edition_2009">
            <value>The 2009 edition of AS3600</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.AS3600.Edition_2001">
            <value>The 2001 edition of AS3600</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.IDesignCode">
            <summary>A design code</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.AS3600.Edition_2018">
            <value>The 2018 edition of AS3600</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.AS3600.Edition_2009">
            <value>The 2009 edition of AS3600</value>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.AS3600.Edition_2001">
            <value>The 2001 edition of AS3600</value>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.IDesignCode">
            <summary>A design code</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.ICircle.Create(System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Profile.ICircle" /> profile from <see cref="!:Diameter" />.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.ICircle.SetDiameter(System.Double)">
            <value>Diameter of the circle</value>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.ICircle.GetDiameter">
            <value>Diameter of the circle</value>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Profile.ICircle">
            <summary>A circular section profile.</summary>
            <remarks>
                <see cref="T:SDK.Oasys.AdSec.Profile.ICircle" /> inherits <see cref="!:Oasys.AdSec.Profile.IProfile" />.
<para>It defines a circular section profile from a <see cref="!:Diameter" />.
The circle is centered at the origin of the its local coordinate system.</para><img src="../images/CircleProfile.png" /></remarks>
            <example>
C#
<code>
/* Create a circular section profile
 * with a diameter of 800mm.
 */
ICircle circle = ICircle.Create(UnitsNet.Length.FromMillimeters(800));
</code>

Python
<code>
circle = ICircle.Create(UnitsNet.Length(800.0, UnitsNet.Units.LengthUnit.MilliMeter))
</code></example>
            <seealso cref="!:Oasys.AdSec.Profile.IProfile" />
            <seealso cref="!:Oasys.AdSec.ISection" />
        </member>
        <member name="M:Oasys.AdSec.Profile.ICircle.Create(UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Profile.ICircle" /> profile from <see cref="P:Oasys.AdSec.Profile.ICircle.Diameter" />.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.ICircle.Diameter">
            <value>Diameter of the circle</value>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="T:Oasys.AdSec.Profile.ICircle">
            <summary>A circular section profile.</summary>
            <remarks>
                <see cref="T:Oasys.AdSec.Profile.ICircle" /> inherits <see cref="!:Oasys.AdSec.Profile.IProfile" />.
<para>It defines a circular section profile from a <see cref="P:Oasys.AdSec.Profile.ICircle.Diameter" />.
The circle is centered at the origin of the its local coordinate system.</para><img src="../images/CircleProfile.png" /></remarks>
            <example>
C#
<code>
/* Create a circular section profile
 * with a diameter of 800mm.
 */
ICircle circle = ICircle.Create(UnitsNet.Length.FromMillimeters(800));
</code>

Python
<code>
circle = ICircle.Create(UnitsNet.Length(800.0, UnitsNet.Units.LengthUnit.MilliMeter))
</code></example>
            <seealso cref="!:Oasys.AdSec.Profile.IProfile" />
            <seealso cref="!:Oasys.AdSec.ISection" />
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.ISteel">
            <summary>A steel material.</summary>
        </member>
        <member name="T:Oasys.AdSec.Materials.ISteel">
            <summary>A steel material.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStrengthResult.GetDeformationUtilisation">
            <summary>
The strength deformation utilisation is the ratio of the applied deformation to the deformation
in the same direction that would cause the section to reach its capacity.
</summary>
            <value>utilisation &gt; 1 means capacity has been exceeded</value>
            <remarks>
Capacity has been exceeded when the utilisation is greater than 1.
</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStrengthResult.GetLoadUtilisation">
            <summary>
The strength load utilisation is the ratio of the applied load to the load
in the same direction that would cause the section to reach its capacity.
</summary>
            <value>utilisation &gt; 1 means capacity has been exceeded</value>
            <remarks>
Capacity has been exceeded when the utilisation is greater than 1.
</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStrengthResult.GetMomentRatio">
            <summary>The moment ratio.</summary>
            <value>moment ratio</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStrengthResult.GetDeformation">
            <summary>The section deformation under the applied action.</summary>
            <value>section deformation</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStrengthResult.GetLoad">
            <summary>The section load under the applied action.</summary>
            <value>section load</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.IStrengthResult">
            <summary>The result of strength analysis (ULS) calculated by <see cref="!:IStrength" />.</summary>
            <seealso cref="!:IStrength" />
        </member>
        <member name="P:Oasys.AdSec.IStrengthResult.DeformationUtilisation">
            <summary>
The strength deformation utilisation is the ratio of the applied deformation to the deformation
in the same direction that would cause the section to reach its capacity.
</summary>
            <value>utilisation &gt; 1 means capacity has been exceeded</value>
            <remarks>
Capacity has been exceeded when the utilisation is greater than 1.
</remarks>
        </member>
        <member name="P:Oasys.AdSec.IStrengthResult.LoadUtilisation">
            <summary>
The strength load utilisation is the ratio of the applied load to the load
in the same direction that would cause the section to reach its capacity.
</summary>
            <value>utilisation &gt; 1 means capacity has been exceeded</value>
            <remarks>
Capacity has been exceeded when the utilisation is greater than 1.
</remarks>
        </member>
        <member name="P:Oasys.AdSec.IStrengthResult.MomentRatio">
            <summary>The moment ratio.</summary>
            <value>moment ratio</value>
        </member>
        <member name="P:Oasys.AdSec.IStrengthResult.Deformation">
            <summary>The section deformation under the applied action.</summary>
            <value>section deformation</value>
        </member>
        <member name="P:Oasys.AdSec.IStrengthResult.Load">
            <summary>The section load under the applied action.</summary>
            <value>section load</value>
        </member>
        <member name="T:Oasys.AdSec.IStrengthResult">
            <summary>The result of strength analysis (ULS) calculated by <see cref="!:IStrength" />.</summary>
            <seealso cref="!:IStrength" />
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IPreForce.Create(System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.IPreForce" /> preload from
<param name="force"><see cref="!:Oasys.AdSec.Reinforcement.IPreForce.Force" /></param>.
Positive force is tension.</summary>
            <exception cref="!:System.InvalidOperationException">
If force is non-finite.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IPreForce.SetForce(System.Double)">
            <summary>Positive force is tension.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IPreForce.GetForce">
            <summary>Positive force is tension.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.IPreForce">
            <summary>A reinforcement preload of type force per bar.</summary>
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.IPreForce.Create(UnitsNet.Force)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.IPreForce" /> preload from
<param name="force"><see cref="!:Oasys.AdSec.Reinforcement.IPreForce.Force" /></param>.
Positive force is tension.</summary>
            <exception cref="!:System.InvalidOperationException">
If force is non-finite.</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.IPreForce.Force">
            <summary>Positive force is tension.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.IPreForce">
            <summary>A reinforcement preload of type force per bar.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IServiceability.Check(std.shared_ptr&lt;SDK.Oasys.AdSec.IDeformation&gt;)">
            <summary>Calculates serviceability results for an applied deformation.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IServiceability.Check(std.shared_ptr&lt;SDK.Oasys.AdSec.ILoad&gt;)">
            <summary>Calculates serviceability results for an applied load.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.IServiceability">
            <summary>Performs serviceability analysis (SLS), for a given <see cref="T:SDK.Oasys.AdSec.ILoad" /> or <see cref="T:SDK.Oasys.AdSec.IDeformation" />.</summary>
            <remarks>Results are returned in <see cref="T:SDK.Oasys.AdSec.IServiceabilityResult" />.</remarks>
            <seealso cref="T:SDK.Oasys.AdSec.IServiceabilityResult" />
            <seealso cref="T:SDK.Oasys.AdSec.ILoad" />
            <seealso cref="T:SDK.Oasys.AdSec.IDeformation" />
        </member>
        <member name="M:SDK.Oasys.AdSec.IServiceabilityResult.GetCrackResults">
            <summary>All crack results.</summary>
            <value>all crack results</value>
            <remarks>See <see cref="!:MaximumWidthCrack" /> for the crack result corresponding to the maximum crack width.</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.IServiceabilityResult.GetMaximumWidthCrack">
            <summary>The crack result from <see cref="!:CrackResults" /> that corresponds to the maximum crack width.</summary>
            <value>maximum crack width result</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.IServiceabilityResult.GetCrackingUtilisation">
            <summary>The ratio of the applied load (moment and axial) to the load (moment and axial)
in the same direction that would cause the section to crack.</summary>
            <value>ratio &gt; 1 means section is cracked</value>
            <remarks>
The section is cracked when the cracking utilisation ratio is greater than 1.
</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.IServiceabilityResult.GetSecantStiffness">
            <summary>The secant stiffness under the applied action.</summary>
            <value>secant stiffness</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.IServiceabilityResult.GetCrackingMomentRatio">
            <summary>The ratios of the applied moment to the moments
in the same direction that would cause the section to crack, with unchanged axial load.
</summary>
            <value>cracking moment ratios</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.IServiceabilityResult.GetDeformation">
            <summary>The section deformation under the applied action.</summary>
            <value>section deformation</value>
        </member>
        <member name="M:SDK.Oasys.AdSec.IServiceabilityResult.GetLoad">
            <summary>The section load under the applied action.</summary>
            <value>section load</value>
        </member>
        <member name="T:SDK.Oasys.AdSec.IServiceabilityResult">
            <summary>The result of serviceability analysis (SLS) calculated by <see cref="!:IServiceability" />.</summary>
            <seealso cref="!:IServiceability" />
        </member>
        <member name="M:SDK.Oasys.AdSec.IStiffness.GetMinorAxisBending">
            <summary>The bending stiffness about the z-axis in the local coordinate system.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStiffness.GetMajorAxisBending">
            <summary>The bending stiffness about the y-axis in the local coordinate system.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStiffness.GetAxial">
            <summary>The axial stiffness.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.IStiffness">
            <summary>Represents the <see cref="!:IServiceability" /> (SLS) result <see cref="!:IServiceabilityResult.SecantStiffness" />).</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IMomentRatio.GetMax">
            <summary>The ratio of the applied moment to the maximum moment range in the applied moment direction.</summary>
            <value>ratio &gt; 1 means position is outside envelope</value>
            <remarks>Assumes constant axial force.
<para>
A ratio greater than 1.0 indicates a position outside the envelope, i.e.
* Beyond the section's strength capacity for a strength moment ratio or
* Cracked for a cracking moment ratio.</para></remarks>
        </member>
        <member name="T:SDK.Oasys.AdSec.IMomentRatio">
            <summary />
            <remarks />
        </member>
        <member name="M:SDK.Oasys.AdSec.ICrackResult.GetPosition">
            <summary>Crack position.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ICrackResult.GetWidth">
            <summary>Crack width.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.ICrackResult">
            <summary>A crack result. Refer <seealso cref="!:IServiceabilityResult" /></summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IPoint.Create(System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Profile.IPoint" /> from
<param name="y"><see cref="!:IPoint.Y" /></param><param name="z"><see cref="!:IPoint.Z" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> when any value is out of range</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IPoint.SetZ(System.Double)">
            <summary>The z coordinate.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IPoint.GetZ">
            <summary>The z coordinate.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IPoint.SetY(System.Double)">
            <summary>The y coordinate.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IPoint.GetY">
            <summary>The y coordinate.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Profile.IPoint">
            <summary>A 2D vertex in the yz-plane.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ILoad.Create(System.Double,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.ILoad" /> from
<param name="fx"><see cref="!:Oasys.AdSec.ILoad.Fx" /></param><param name="myy"><see cref="!:Oasys.AdSec.ILoad.Myy" /></param><param name="mzz"><see cref="!:Oasys.AdSec.ILoad.Mzz" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.ILoad.SetMzz(System.Double)">
            <summary>The moment about the z-axis.</summary>
            <value>A positive value represents anti-clockwise direction about the z-axis in the local coordinate system.</value>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.ILoad.GetMzz">
            <summary>The moment about the z-axis.</summary>
            <value>A positive value represents anti-clockwise direction about the z-axis in the local coordinate system.</value>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.ILoad.SetMyy(System.Double)">
            <summary>The moment about the y-axis</summary>
            <value>Positive value in anti-clockwise direction</value>
            <remarks>A positive value represents anti-clockwise direction about the y-axis in the local coordinate system.</remarks>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.ILoad.GetMyy">
            <summary>The moment about the y-axis</summary>
            <value>Positive value in anti-clockwise direction</value>
            <remarks>A positive value represents anti-clockwise direction about the y-axis in the local coordinate system.</remarks>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.ILoad.SetFx(System.Double)">
            <summary>The axial force.
Tension is represented by a positive value, compression by a negative value.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.ILoad.GetFx">
            <summary>The axial force.
Tension is represented by a positive value, compression by a negative value.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.ILoad">
            <summary>Defines an axial force and bending around the local y-axis and z-axis.</summary>
            <remarks>
                <see cref="T:SDK.Oasys.AdSec.ILoad" /> can be used as an input type for calculating
<see cref="!:IStrength" /> (ULS) and <see cref="!:IServiceability" /> (SLS) results.
</remarks>
            <seealso cref="!:IStrength" />
            <seealso cref="!:IServiceability" />
        </member>
        <member name="M:SDK.Oasys.AdSec.IDeformation.Create(System.Double,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.IDeformation" /> from
<param name="ex"><see cref="!:Oasys.AdSec.IDeformation.Ex" /></param><param name="kyy"><see cref="!:Oasys.AdSec.IDeformation.Kyy" /></param><param name="kzz"><see cref="!:Oasys.AdSec.IDeformation.Kzz" /></param>.<br />
Positive ex indicates tension.<br />
Positive kyy is anti-clockwise curvature about local y-axis.<br />
Positive kzz is anti-clockwise curvature about local z-axis.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.IDeformation.SetKzz(System.Double)">
            <summary>The curvature about local z axis.
Positive value is anti-clockwise.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.IDeformation.GetKzz">
            <summary>The curvature about local z axis.
Positive value is anti-clockwise.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.IDeformation.SetKyy(System.Double)">
            <summary>The curvature about local y axis.
Positive value is anti-clockwise.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.IDeformation.GetKyy">
            <summary>The curvature about local y axis.
Positive value is anti-clockwise.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.IDeformation.SetEx(System.Double)">
            <summary>The axial strain.
Positive value indicates tension.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.IDeformation.GetEx">
            <summary>The axial strain.
Positive value indicates tension.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.IDeformation">
            <summary>A deformation.</summary>
            <remarks>IDeformation can be used as an input type for calculating
ULS (<see cref="!:IStrength" />) and SLS (<see cref="!:IServiceability" />) results.
</remarks>
        </member>
        <member name="M:Oasys.AdSec.IServiceability.Check(Oasys.AdSec.IDeformation)">
            <summary>Calculates serviceability results for an applied deformation.</summary>
        </member>
        <member name="M:Oasys.AdSec.IServiceability.Check(Oasys.AdSec.ILoad)">
            <summary>Calculates serviceability results for an applied load.</summary>
        </member>
        <member name="T:Oasys.AdSec.IServiceability">
            <summary>Performs serviceability analysis (SLS), for a given <see cref="T:Oasys.AdSec.ILoad" /> or <see cref="T:Oasys.AdSec.IDeformation" />.</summary>
            <remarks>Results are returned in <see cref="T:Oasys.AdSec.IServiceabilityResult" />.</remarks>
            <seealso cref="T:Oasys.AdSec.IServiceabilityResult" />
            <seealso cref="T:Oasys.AdSec.ILoad" />
            <seealso cref="T:Oasys.AdSec.IDeformation" />
        </member>
        <member name="P:Oasys.AdSec.IServiceabilityResult.CrackResults">
            <summary>All crack results.</summary>
            <value>all crack results</value>
            <remarks>See <see cref="P:Oasys.AdSec.IServiceabilityResult.MaximumWidthCrack" /> for the crack result corresponding to the maximum crack width.</remarks>
        </member>
        <member name="P:Oasys.AdSec.IServiceabilityResult.MaximumWidthCrack">
            <summary>The crack result from <see cref="P:Oasys.AdSec.IServiceabilityResult.CrackResults" /> that corresponds to the maximum crack width.</summary>
            <value>maximum crack width result</value>
        </member>
        <member name="P:Oasys.AdSec.IServiceabilityResult.CrackingUtilisation">
            <summary>The ratio of the applied load (moment and axial) to the load (moment and axial)
in the same direction that would cause the section to crack.</summary>
            <value>ratio &gt; 1 means section is cracked</value>
            <remarks>
The section is cracked when the cracking utilisation ratio is greater than 1.
</remarks>
        </member>
        <member name="P:Oasys.AdSec.IServiceabilityResult.SecantStiffness">
            <summary>The secant stiffness under the applied action.</summary>
            <value>secant stiffness</value>
        </member>
        <member name="P:Oasys.AdSec.IServiceabilityResult.CrackingMomentRatio">
            <summary>The ratios of the applied moment to the moments
in the same direction that would cause the section to crack, with unchanged axial load.
</summary>
            <value>cracking moment ratios</value>
        </member>
        <member name="P:Oasys.AdSec.IServiceabilityResult.Deformation">
            <summary>The section deformation under the applied action.</summary>
            <value>section deformation</value>
        </member>
        <member name="P:Oasys.AdSec.IServiceabilityResult.Load">
            <summary>The section load under the applied action.</summary>
            <value>section load</value>
        </member>
        <member name="T:Oasys.AdSec.IServiceabilityResult">
            <summary>The result of serviceability analysis (SLS) calculated by <see cref="!:IServiceability" />.</summary>
            <seealso cref="!:IServiceability" />
        </member>
        <member name="P:Oasys.AdSec.IStiffness.MinorAxisBending">
            <summary>The bending stiffness about the z-axis in the local coordinate system.</summary>
        </member>
        <member name="P:Oasys.AdSec.IStiffness.MajorAxisBending">
            <summary>The bending stiffness about the y-axis in the local coordinate system.</summary>
        </member>
        <member name="P:Oasys.AdSec.IStiffness.Axial">
            <summary>The axial stiffness.</summary>
        </member>
        <member name="T:Oasys.AdSec.IStiffness">
            <summary>Represents the <see cref="!:IServiceability" /> (SLS) result <see cref="!:IServiceabilityResult.SecantStiffness" />).</summary>
        </member>
        <member name="P:Oasys.AdSec.IMomentRatio.Max">
            <summary>The ratio of the applied moment to the maximum moment range in the applied moment direction.</summary>
            <value>ratio &gt; 1 means position is outside envelope</value>
            <remarks>Assumes constant axial force.
<para>
A ratio greater than 1.0 indicates a position outside the envelope, i.e.
* Beyond the section's strength capacity for a strength moment ratio or
* Cracked for a cracking moment ratio.</para></remarks>
        </member>
        <member name="T:Oasys.AdSec.IMomentRatio">
            <summary />
            <remarks />
        </member>
        <member name="P:Oasys.AdSec.ICrackResult.Position">
            <summary>Crack position.</summary>
        </member>
        <member name="P:Oasys.AdSec.ICrackResult.Width">
            <summary>Crack width.</summary>
        </member>
        <member name="T:Oasys.AdSec.ICrackResult">
            <summary>A crack result. Refer <seealso cref="!:IServiceabilityResult" /></summary>
        </member>
        <member name="M:Oasys.AdSec.Profile.IPoint.Create(UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Profile.IPoint" /> from
<param name="y"><see cref="!:IPoint.Y" /></param><param name="z"><see cref="!:IPoint.Z" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> when any value is out of range</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IPoint.Z">
            <summary>The z coordinate.</summary>
        </member>
        <member name="P:Oasys.AdSec.Profile.IPoint.Y">
            <summary>The y coordinate.</summary>
        </member>
        <member name="T:Oasys.AdSec.Profile.IPoint">
            <summary>A 2D vertex in the yz-plane.</summary>
        </member>
        <member name="M:Oasys.AdSec.ILoad.Create(UnitsNet.Force,UnitsNet.Moment,UnitsNet.Moment)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.ILoad" /> from
<param name="fx"><see cref="!:Oasys.AdSec.ILoad.Fx" /></param><param name="myy"><see cref="!:Oasys.AdSec.ILoad.Myy" /></param><param name="mzz"><see cref="!:Oasys.AdSec.ILoad.Mzz" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite.</exception>
        </member>
        <member name="P:Oasys.AdSec.ILoad.Mzz">
            <summary>The moment about the z-axis.</summary>
            <value>A positive value represents anti-clockwise direction about the z-axis in the local coordinate system.</value>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="P:Oasys.AdSec.ILoad.Myy">
            <summary>The moment about the y-axis</summary>
            <value>Positive value in anti-clockwise direction</value>
            <remarks>A positive value represents anti-clockwise direction about the y-axis in the local coordinate system.</remarks>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="P:Oasys.AdSec.ILoad.Fx">
            <summary>The axial force.
Tension is represented by a positive value, compression by a negative value.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="T:Oasys.AdSec.ILoad">
            <summary>Defines an axial force and bending around the local y-axis and z-axis.</summary>
            <remarks>
                <see cref="T:Oasys.AdSec.ILoad" /> can be used as an input type for calculating
<see cref="!:IStrength" /> (ULS) and <see cref="!:IServiceability" /> (SLS) results.
</remarks>
            <seealso cref="!:IStrength" />
            <seealso cref="!:IServiceability" />
        </member>
        <member name="M:Oasys.AdSec.IDeformation.Create(UnitsNet.Strain,UnitsNet.Curvature,UnitsNet.Curvature)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.IDeformation" /> from
<param name="ex"><see cref="!:Oasys.AdSec.IDeformation.Ex" /></param><param name="kyy"><see cref="!:Oasys.AdSec.IDeformation.Kyy" /></param><param name="kzz"><see cref="!:Oasys.AdSec.IDeformation.Kzz" /></param>.<br />
Positive ex indicates tension.<br />
Positive kyy is anti-clockwise curvature about local y-axis.<br />
Positive kzz is anti-clockwise curvature about local z-axis.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite.</exception>
        </member>
        <member name="P:Oasys.AdSec.IDeformation.Kzz">
            <summary>The curvature about local z axis.
Positive value is anti-clockwise.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.IDeformation.Kyy">
            <summary>The curvature about local y axis.
Positive value is anti-clockwise.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.IDeformation.Ex">
            <summary>The axial strain.
Positive value indicates tension.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite value is set.</exception>
        </member>
        <member name="T:Oasys.AdSec.IDeformation">
            <summary>A deformation.</summary>
            <remarks>IDeformation can be used as an input type for calculating
ULS (<see cref="!:IStrength" />) and SLS (<see cref="!:IServiceability" />) results.
</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IHollowRectangle.Create(System.Double,System.Double,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Profile.IHollowRectangle" /> profile from
<param name="depth"><see cref="!:Oasys.AdSec.Profile.IHollowRectangle.Depth" /></param><param name="width"><see cref="!:Oasys.AdSec.Profile.IHollowRectangle.Width" /></param><param name="flangeThickness"><see cref="!:Oasys.AdSec.Profile.IHollowRectangle.FlangeThickness" /></param><param name="sideThickness"><see cref="!:Oasys.AdSec.Profile.IHollowRectangle.SideThickness" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IHollowRectangle.SetSideThickness(System.Double)">
            <summary>Side wall thickness of the hollow rectangle.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IHollowRectangle.GetSideThickness">
            <summary>Side wall thickness of the hollow rectangle.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IHollowRectangle.SetFlangeThickness(System.Double)">
            <summary>Flange thickness of the hollow rectangle.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IHollowRectangle.GetFlangeThickness">
            <summary>Flange thickness of the hollow rectangle.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IHollowRectangle.SetWidth(System.Double)">
            <summary>Width of the hollow rectangle.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IHollowRectangle.GetWidth">
            <summary>Width of the hollow rectangle.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IHollowRectangle.SetDepth(System.Double)">
            <summary>Depth of the hollow rectangle.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IHollowRectangle.GetDepth">
            <summary>Depth of the hollow rectangle.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Profile.IHollowRectangle">
            <summary>A hollow rectangular section profile.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IProfile.GetDescription">
            <summary>Converts the geometry into a description.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IProfile.GetArea">
            <summary>Calculates the area.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IProfile.SetIsReflectedZ(System.Boolean)">
            <summary>Reflects the profile over the z-axis in the local coordinate system.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IProfile.GetIsReflectedZ">
            <summary>Reflects the profile over the z-axis in the local coordinate system.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IProfile.SetIsReflectedY(System.Boolean)">
            <summary>Reflects the profile over the y-axis in the local coordinate system.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IProfile.GetIsReflectedY">
            <summary>Reflects the profile over the y-axis in the local coordinate system.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IProfile.SetRotation(System.Double)">
            <summary>Positive rotation is anti-clockwise around the x-axis in the local coordinate system.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Profile.IProfile.GetRotation">
            <summary>Positive rotation is anti-clockwise around the x-axis in the local coordinate system.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Profile.IProfile">
            <summary>Defines a <see cref="!:Oasys.AdSec.ISection" />'s shape, size and orientation.</summary>
            <remarks>
                <see cref="T:SDK.Oasys.AdSec.Profile.IProfile" /> is a base class for other profiles with specific shapes, e.g. <see cref="!:Oasys.AdSec.Profile.ICircle" /> and <see cref="!:Oasys.AdSec.Profile.IRectangle" />.
</remarks>
            <example>
C#
<code>
/* Create a rectangular concrete section
 * with a depth of 800mm and a width of 500mm.
 * Set the profile rotation to 30 degrees.
 */
ISection CreateSection() {
    IProfile profile = IRectangle.Create(
        UnitsNet.Length.FromMillimeters(800),
        UnitsNet.Length.FromMillimeters(500));
    profile.Rotation = UnitsNet.Angle.FromDegrees(30);

    return ISection.Create(profile, Materials.Concrete.IS456.Edition_2000.M20);
}
</code>

Python
<code>
def create_section():
    depth = UnitsNet.Length(800.0, UnitsNet.Units.LengthUnit.MilliMeter)
    width = UnitsNet.Length(500.0, UnitsNet.Units.LengthUnit.MilliMeter)
    profile = IRectangle.Create(depth, width)
    profile.Rotation = UnitsNet.Angle(30.0, UnitsNet.Units.AngleUnit.Degrees)

    return ISection.Create(profile, Materials.Concrete.IS456.Edition_2000.M20)
</code></example>
            <seealso cref="!:Oasys.AdSec.ISection" />
        </member>
        <member name="M:Oasys.AdSec.Profile.IHollowRectangle.Create(UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Profile.IHollowRectangle" /> profile from
<param name="depth"><see cref="!:Oasys.AdSec.Profile.IHollowRectangle.Depth" /></param><param name="width"><see cref="!:Oasys.AdSec.Profile.IHollowRectangle.Width" /></param><param name="flangeThickness"><see cref="!:Oasys.AdSec.Profile.IHollowRectangle.FlangeThickness" /></param><param name="sideThickness"><see cref="!:Oasys.AdSec.Profile.IHollowRectangle.SideThickness" /></param>.</summary>
            <exception cref="!:System.InvalidOperationException"> if any input is non-finite or non-positive.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IHollowRectangle.SideThickness">
            <summary>Side wall thickness of the hollow rectangle.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IHollowRectangle.FlangeThickness">
            <summary>Flange thickness of the hollow rectangle.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IHollowRectangle.Width">
            <summary>Width of the hollow rectangle.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="P:Oasys.AdSec.Profile.IHollowRectangle.Depth">
            <summary>Depth of the hollow rectangle.</summary>
            <exception cref="!:System.InvalidOperationException"> when non-finite or non-positive value is set.</exception>
        </member>
        <member name="T:Oasys.AdSec.Profile.IHollowRectangle">
            <summary>A hollow rectangular section profile.</summary>
        </member>
        <member name="P:Oasys.AdSec.Profile.IProfile.Description">
            <summary>Converts the geometry into a description.</summary>
        </member>
        <member name="P:Oasys.AdSec.Profile.IProfile.Area">
            <summary>Calculates the area.</summary>
        </member>
        <member name="P:Oasys.AdSec.Profile.IProfile.IsReflectedZ">
            <summary>Reflects the profile over the z-axis in the local coordinate system.</summary>
        </member>
        <member name="P:Oasys.AdSec.Profile.IProfile.IsReflectedY">
            <summary>Reflects the profile over the y-axis in the local coordinate system.</summary>
        </member>
        <member name="P:Oasys.AdSec.Profile.IProfile.Rotation">
            <summary>Positive rotation is anti-clockwise around the x-axis in the local coordinate system.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="T:Oasys.AdSec.Profile.IProfile">
            <summary>Defines a <see cref="!:Oasys.AdSec.ISection" />'s shape, size and orientation.</summary>
            <remarks>
                <see cref="T:Oasys.AdSec.Profile.IProfile" /> is a base class for other profiles with specific shapes, e.g. <see cref="!:Oasys.AdSec.Profile.ICircle" /> and <see cref="!:Oasys.AdSec.Profile.IRectangle" />.
</remarks>
            <example>
C#
<code>
/* Create a rectangular concrete section
 * with a depth of 800mm and a width of 500mm.
 * Set the profile rotation to 30 degrees.
 */
ISection CreateSection() {
    IProfile profile = IRectangle.Create(
        UnitsNet.Length.FromMillimeters(800),
        UnitsNet.Length.FromMillimeters(500));
    profile.Rotation = UnitsNet.Angle.FromDegrees(30);

    return ISection.Create(profile, Materials.Concrete.IS456.Edition_2000.M20);
}
</code>

Python
<code>
def create_section():
    depth = UnitsNet.Length(800.0, UnitsNet.Units.LengthUnit.MilliMeter)
    width = UnitsNet.Length(500.0, UnitsNet.Units.LengthUnit.MilliMeter)
    profile = IRectangle.Create(depth, width)
    profile.Rotation = UnitsNet.Angle(30.0, UnitsNet.Units.AngleUnit.Degrees)

    return ISection.Create(profile, Materials.Concrete.IS456.Edition_2000.M20)
</code></example>
            <seealso cref="!:Oasys.AdSec.ISection" />
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILayerByBarPitch.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.IReinforcement&gt;,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.ILayerByBarPitch" /> from
reinforcement material, diameter and bar pitch.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILayerByBarPitch.SetPitch(System.Double)">
            <summary>The pitch is the maximum centre-to-centre spacing of the bundles or single bars.</summary>
            <remarks>The pitch defines the centre-to-centre spacing between bundles or single bars in the layer.
<para>The pitch is "maximum centre-to-centre spacing", i.e. it will fit as many bundles or single bars in as necessary to achieve the given spacing. </para><para>If the available space is not an exact multiple of the pitch, the resulting spacing will be smaller than the specified pitch.</para><img src="../images/AdSecPitch.PNG" /></remarks>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILayerByBarPitch.GetPitch">
            <summary>The pitch is the maximum centre-to-centre spacing of the bundles or single bars.</summary>
            <remarks>The pitch defines the centre-to-centre spacing between bundles or single bars in the layer.
<para>The pitch is "maximum centre-to-centre spacing", i.e. it will fit as many bundles or single bars in as necessary to achieve the given spacing. </para><para>If the available space is not an exact multiple of the pitch, the resulting spacing will be smaller than the specified pitch.</para><img src="../images/AdSecPitch.PNG" /></remarks>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.ILayerByBarPitch">
            <summary>A reinforcement layer defined by the bar pitch.</summary>
            <remarks>
                <see cref="T:SDK.Oasys.AdSec.Reinforcement.ILayerByBarPitch" /> implements <see cref="T:SDK.Oasys.AdSec.Reinforcement.ILayer" />.
<para>It defines a reinforcement layer by the <see cref="!:Pitch" />. </para><img src="../images/ReinforcementGroups.png" /></remarks>
            <example>
C#
<code>
ILayer GetLayer()
{
    /* Create a reinforcement layer
     * with single steel bars, diameter 20 mm, and 150 mm pitch.
     */
    ILayerByBarPitch layer = ILayerByBarPitch.Create(
        2,
        Materials.Reinforcement.Steel.HK.SDM.Edition_2013.S500B,
        UnitsNet.Length.FromMillimeters(20));
    layer.CountPerBundle = 1;
    return layer;
}
</code>

Python
<code>
def get_layer():
    diameter = UnitsNet.Length(20.0, UnitsNet.Units.LengthUnit.MilliMeter)
    layer = ILayerByBarPitch.Create(2, Materials.Reinforcement.Steel.HK.SDM.Edition_2013.S500B, diameter)
    layer.CountPerBundle = 1
    return layer
</code></example>
            <seealso cref="T:SDK.Oasys.AdSec.Reinforcement.ILayer" />
            <seealso cref="!:ILayerByBarCount" />
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.ILayerByBarPitch.Create(Oasys.AdSec.Materials.IReinforcement,UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.ILayerByBarPitch" /> from
reinforcement material, diameter and bar pitch.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.ILayerByBarPitch.Pitch">
            <summary>The pitch is the maximum centre-to-centre spacing of the bundles or single bars.</summary>
            <remarks>The pitch defines the centre-to-centre spacing between bundles or single bars in the layer.
<para>The pitch is "maximum centre-to-centre spacing", i.e. it will fit as many bundles or single bars in as necessary to achieve the given spacing. </para><para>If the available space is not an exact multiple of the pitch, the resulting spacing will be smaller than the specified pitch.</para><img src="../images/AdSecPitch.PNG" /></remarks>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.ILayerByBarPitch">
            <summary>A reinforcement layer defined by the bar pitch.</summary>
            <remarks>
                <see cref="T:Oasys.AdSec.Reinforcement.ILayerByBarPitch" /> implements <see cref="T:Oasys.AdSec.Reinforcement.ILayer" />.
<para>It defines a reinforcement layer by the <see cref="P:Oasys.AdSec.Reinforcement.ILayerByBarPitch.Pitch" />. </para><img src="../images/ReinforcementGroups.png" /></remarks>
            <example>
C#
<code>
ILayer GetLayer()
{
    /* Create a reinforcement layer
     * with single steel bars, diameter 20 mm, and 150 mm pitch.
     */
    ILayerByBarPitch layer = ILayerByBarPitch.Create(
        2,
        Materials.Reinforcement.Steel.HK.SDM.Edition_2013.S500B,
        UnitsNet.Length.FromMillimeters(20));
    layer.CountPerBundle = 1;
    return layer;
}
</code>

Python
<code>
def get_layer():
    diameter = UnitsNet.Length(20.0, UnitsNet.Units.LengthUnit.MilliMeter)
    layer = ILayerByBarPitch.Create(2, Materials.Reinforcement.Steel.HK.SDM.Edition_2013.S500B, diameter)
    layer.CountPerBundle = 1
    return layer
</code></example>
            <seealso cref="T:Oasys.AdSec.Reinforcement.ILayer" />
            <seealso cref="!:ILayerByBarCount" />
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILayeredGroup.SetPreload(std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.IPreload&gt;)">
            <summary>Preload applied to all bars in the group.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILayeredGroup.GetPreload">
            <summary>Preload applied to all bars in the group.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILayeredGroup.SetLayers(std.shared_ptr&lt;SDK.Oasys.Collections.IList&gt;)">
            <summary>Layers of reinforcement bars or bundles of bars.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILayeredGroup.GetLayers">
            <summary>Layers of reinforcement bars or bundles of bars.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.ILayeredGroup">
            <summary>A reinforcement group that groups layers of reinforcement together.</summary>
            <remarks>
                <see cref="T:SDK.Oasys.AdSec.Reinforcement.ILayeredGroup" /> can contain several layers of reinforcement.
<para>Layers define the reinforcement bundling and spacing. See <see cref="T:SDK.Oasys.AdSec.Reinforcement.ILayer" />. </para><para><see cref="T:SDK.Oasys.AdSec.Reinforcement.ILayeredGroup" /> also defines the <see cref="!:Preload" /> that is applied to all bars in the contained layers.</para><para><see cref="T:SDK.Oasys.AdSec.Reinforcement.ILayeredGroup" /> is an abstract base class of e.g. <see cref="!:ILine" />.</para><img src="../images/ReinforcementGroups.png" /></remarks>
            <seealso cref="T:SDK.Oasys.AdSec.Reinforcement.IGroup" />
            <seealso cref="!:ILine" />
            <seealso cref="T:SDK.Oasys.AdSec.Reinforcement.ILayer" />
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.IPreload">
            <summary>A reinforcement preload.</summary>
        </member>
        <member name="M:SDK.Oasys.Collections.IList.Create(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>Creates an empty list</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILayer.SetDiameter(System.Double)">
            <summary>The diameter of the reinforcement bars or tendons.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILayer.GetDiameter">
            <summary>The diameter of the reinforcement bars or tendons.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILayer.SetMaterial(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.IReinforcement&gt;)">
            <summary>The reinforcement material.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.ILayer.GetMaterial">
            <summary>The reinforcement material.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.ILayer">
            <summary>A reinforcement layer.</summary>
            <remarks>Reinforcement layers are used by reinforcement groups, <see cref="T:SDK.Oasys.AdSec.Reinforcement.IGroup" />.
Layers define the number of bars or tendons in each reinforcement bundle, their diameter and material.
<para>ILayer is a base class. </para><para>Use <see cref="!:ILayerByBarCount" /> to define layers by number of bundles or single bars. </para><para>Use <see cref="!:ILayerByBarPitch" /> to define layers by the <see cref="!:ILayerByBarPitch.Pitch" /> between bundles or single bars.</para><img src="../images/ReinforcementGroups.png" /></remarks>
            <seealso cref="T:SDK.Oasys.AdSec.Reinforcement.IGroup" />
            <seealso cref="!:ILayerByBarCount" />
            <seealso cref="!:ILayerByBarPitch" />
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.IReinforcement">
            <summary>A reinforcement material.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IGroup.GetDescription">
            <summary>Converts the group definition into a string description.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.IGroup">
            <summary>Defines a group of reinforcement.</summary>
            <remarks>
                <see cref="T:SDK.Oasys.AdSec.Reinforcement.IGroup" /> is an abstract base class of e.g. <see cref="!:ILayeredGroup" />, <see cref="!:ILink" />, <see cref="!:IRadialGroup" />, <see cref="!:ISingleBars" />. </remarks>
            <seealso cref="!:ILayeredGroup" />
            <seealso cref="!:ILink" />
            <seealso cref="!:IRadialGroup" />
            <seealso cref="!:ISingleBars" />
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.ILayeredGroup.Preload">
            <summary>Preload applied to all bars in the group.</summary>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.ILayeredGroup.Layers">
            <summary>Layers of reinforcement bars or bundles of bars.</summary>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.ILayeredGroup">
            <summary>A reinforcement group that groups layers of reinforcement together.</summary>
            <remarks>
                <see cref="T:Oasys.AdSec.Reinforcement.ILayeredGroup" /> can contain several layers of reinforcement.
<para>Layers define the reinforcement bundling and spacing. See <see cref="T:Oasys.AdSec.Reinforcement.ILayer" />. </para><para><see cref="T:Oasys.AdSec.Reinforcement.ILayeredGroup" /> also defines the <see cref="P:Oasys.AdSec.Reinforcement.ILayeredGroup.Preload" /> that is applied to all bars in the contained layers.</para><para><see cref="T:Oasys.AdSec.Reinforcement.ILayeredGroup" /> is an abstract base class of e.g. <see cref="!:ILine" />.</para><img src="../images/ReinforcementGroups.png" /></remarks>
            <seealso cref="T:Oasys.AdSec.Reinforcement.IGroup" />
            <seealso cref="!:ILine" />
            <seealso cref="T:Oasys.AdSec.Reinforcement.ILayer" />
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.IPreload">
            <summary>A reinforcement preload.</summary>
        </member>
        <member name="M:Oasys.Collections.IList`1.Create">
            <summary>Creates an empty list</summary>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.ILayer.Diameter">
            <summary>The diameter of the reinforcement bars or tendons.</summary>
            <exception cref="!:System.InvalidOperationException"> when value is out of range</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.ILayer.Material">
            <summary>The reinforcement material.</summary>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.ILayer">
            <summary>A reinforcement layer.</summary>
            <remarks>Reinforcement layers are used by reinforcement groups, <see cref="T:Oasys.AdSec.Reinforcement.IGroup" />.
Layers define the number of bars or tendons in each reinforcement bundle, their diameter and material.
<para>ILayer is a base class. </para><para>Use <see cref="!:ILayerByBarCount" /> to define layers by number of bundles or single bars. </para><para>Use <see cref="!:ILayerByBarPitch" /> to define layers by the <see cref="!:ILayerByBarPitch.Pitch" /> between bundles or single bars.</para><img src="../images/ReinforcementGroups.png" /></remarks>
            <seealso cref="T:Oasys.AdSec.Reinforcement.IGroup" />
            <seealso cref="!:ILayerByBarCount" />
            <seealso cref="!:ILayerByBarPitch" />
        </member>
        <member name="T:Oasys.AdSec.Materials.IReinforcement">
            <summary>A reinforcement material.</summary>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.IGroup.Description">
            <summary>Converts the group definition into a string description.</summary>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.IGroup">
            <summary>Defines a group of reinforcement.</summary>
            <remarks>
                <see cref="T:Oasys.AdSec.Reinforcement.IGroup" /> is an abstract base class of e.g. <see cref="!:ILayeredGroup" />, <see cref="!:ILink" />, <see cref="!:IRadialGroup" />, <see cref="!:ISingleBars" />. </remarks>
            <seealso cref="!:ILayeredGroup" />
            <seealso cref="!:ILink" />
            <seealso cref="!:IRadialGroup" />
            <seealso cref="!:ISingleBars" />
        </member>
        <member name="M:Oasys.Exceptions.ExceptionUtils.ConvertException(std.exception*)">
            <summary>Converts a C++ STL exception into a suitable .NET exception.</summary>
            <summary>Converts a C++ STL exception into a suitable .NET exception.</summary>
        </member>
        <member name="T:Oasys.Exceptions.RuntimeError">
            <summary>std::runtime_error and some other standard exceptions
that cannot be mapped to a more suitable exception are converted
to this type.

Do not throw this exception deliberately. Use a more specific
exception instead.
</summary>
        </member>
        <member name="T:Oasys.Exceptions.LogicError">
            <summary>Any std::logic_error that cannot be mapped to a more
specific error is converted to this type.

Do not throw this exception deliberately. Use a more specific
exception instead.
</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.IFrp">
            <summary>A fibre-reinforced polymer (FRP) material.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.IMaterial">
            <summary>A material for use in AdSec.</summary>
        </member>
        <member name="M:INativeWrapper.FromNative``1(std.shared_ptr&lt;SDK.INative&gt;)">
            <summary>Creates a new wrapper to hold 'native_ptr'.</summary>
            <typeparam name="TType">Casts the result to this type.</typeparam>
            <param name="native_ptr">An SDK implementation object</param>
            <returns>A C++/CLI wrapper containing native_ptr</returns>
        </member>
        <member name="M:INativeWrapper.SetNative(std.shared_ptr&lt;SDK.INative&gt;)">
            <summary>Sets the native object to the given pointer.
Required for objects contained in templates. Can only be called after a default constructor.
</summary>
        </member>
        <member name="M:INativeWrapper.Native(System.Object!System.Runtime.CompilerServices.IsConst)">
            <summary>Returns the wrapper's native pointer or null if the
wrapper is null.</summary>
            <param name="wrapper">Takes an Object^ to avoid annoying casts.</param>
        </member>
        <member name="T:INativeWrapper">
            <summary>A class that wraps a native C++ class.</summary>
        </member>
        <member name="M:SDK.INative.GetInterfaceTypeName">
            <summary>Provided so that the C++/CLI layer can tell
which SDK Interface has been implemented by a native
object. This allows us to construct the CLR wrapper
for a native object without knowing anything else
about the native object.</summary>
        </member>
        <member name="M:ApiUtils.GetApiType(System.String)">
            <summary>Recursively separates a type from it's type arguments builds
the .NET Type for each piece.</summary>
        </member>
        <member name="M:ApiUtils.ToInterfaceTypeName2(System.Type)">
            <summary>Converts the output of ToInterfaceTypeName() to a
managed string for testing purposes.</summary>
        </member>
        <member name="M:ApiUtils.ToInterfaceTypeName(System.Type)">
            <summary>This is the inverse of GetWrapperType().
</summary>
            <param name="dotNetType">The type of the wrapper class</param>
            <returns>A string that will generate apiInterfaceType if
passed to GetWrapperType().</returns>
        </member>
        <member name="M:ApiUtils.GetWrapperType(System.String)">
            <summary>Finds the API type that acts as the wrapper
for a given native type.
This function is only useful for generated classes using
the wrapped class strategy.</summary>
            <param name="interfaceTypeName">The C++ run time type name
of a class returned with typeid(x).name().</param>
            <returns>The .NET type that wraps the native C++ type.</returns>
            <exception cref="T:System.ArgumentException">If the type name
is in an unexpected format or if there's no matching wrapper
type.</exception>
        </member>
        <member name="T:ApiUtils">
            <summary>Assorted utilities for API implementations.
This class is public so we can test the methods with C#
unit tests.</summary>
        </member>
        <member name="T:Oasys.AdSec.Materials.IFrp">
            <summary>A fibre-reinforced polymer (FRP) material.</summary>
        </member>
        <member name="T:Oasys.AdSec.Materials.IMaterial">
            <summary>A material for use in AdSec.</summary>
        </member>
        <!-- Discarding badly formed XML document comment for member 'P:Oasys.AdSec.IMomentRatio.Min'. -->
        <!-- Discarding badly formed XML document comment for member 'M:SDK.Oasys.AdSec.IMomentRatio.GetMin'. -->
        <!-- Discarding badly formed XML document comment for member 'P:Oasys.AdSec.IMomentRatio.Min'. -->
        <!-- Discarding badly formed XML document comment for member 'M:SDK.Oasys.AdSec.IMomentRatio.GetMin'. -->
        <!-- Discarding badly formed XML document comment for member 'P:Oasys.AdSec.IMomentRatio.Min'. -->
        <!-- Discarding badly formed XML document comment for member 'M:SDK.Oasys.AdSec.IMomentRatio.GetMin'. -->
        <!-- Discarding badly formed XML document comment for member 'P:Oasys.AdSec.IMomentRatio.Min'. -->
        <!-- Discarding badly formed XML document comment for member 'M:SDK.Oasys.AdSec.IMomentRatio.GetMin'. -->
        <!-- Discarding badly formed XML document comment for member 'P:Oasys.AdSec.IMomentRatio.Min'. -->
        <!-- Discarding badly formed XML document comment for member 'M:SDK.Oasys.AdSec.IMomentRatio.GetMin'. -->
        <!-- Discarding badly formed XML document comment for member 'P:Oasys.AdSec.IMomentRatio.Min'. -->
        <!-- Discarding badly formed XML document comment for member 'M:SDK.Oasys.AdSec.IMomentRatio.GetMin'. -->
        <!-- Discarding badly formed XML document comment for member 'P:Oasys.AdSec.IMomentRatio.Min'. -->
        <!-- Discarding badly formed XML document comment for member 'M:SDK.Oasys.AdSec.IMomentRatio.GetMin'. -->
    </members>
</doc>