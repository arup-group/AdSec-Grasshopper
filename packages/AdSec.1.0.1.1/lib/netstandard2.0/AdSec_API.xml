<?xml version="1.0"?>
<doc>
    <assembly>
        "AdSec_API"
    </assembly>
    <members>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ILineGroup.Create(std.shared_ptr&lt;SDK.Oasys.Profiles.IPoint&gt;,std.shared_ptr&lt;SDK.Oasys.Profiles.IPoint&gt;,std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.Layers.ILayer&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.Groups.ILineGroup" /> reinforcement group from its
<see cref="!:FirstBarPosition" />,
<see cref="!:LastBarPosition" /> and
<see cref="!:Layer" />.
</summary>
            <param name="firstBarPosition">Defines the position of the first reinforcement bar in the line group.</param>
            <param name="lastBarPosition">Defines the position of the last reinforcement bar in the line group.</param>
            <param name="layer">Defines the bar (or bar bundles) that will be positioned along the line.</param>
            <returns>A new line reinforcement group.</returns>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ILineGroup.SetLayer(std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.Layers.ILayer&gt;)">
            <summary>The layer of reinforcement to be positioned along the line.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ILineGroup.GetLayer">
            <summary>The layer of reinforcement to be positioned along the line.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ILineGroup.SetLastBarPosition(std.shared_ptr&lt;SDK.Oasys.Profiles.IPoint&gt;)">
            <summary>Position of the centre of the last reinforcement bar or bundle of bars,
in the local coordinate system of the containing <see cref="!:ISection" />.
</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ILineGroup.GetLastBarPosition">
            <summary>Position of the centre of the last reinforcement bar or bundle of bars,
in the local coordinate system of the containing <see cref="!:ISection" />.
</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ILineGroup.SetFirstBarPosition(std.shared_ptr&lt;SDK.Oasys.Profiles.IPoint&gt;)">
            <summary>Position of the centre of the first reinforcement bar or bundle of bars,
in the local coordinate system of the containing <see cref="!:ISection" />.
</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ILineGroup.GetFirstBarPosition">
            <summary>Position of the centre of the first reinforcement bar or bundle of bars,
in the local coordinate system of the containing <see cref="!:ISection" />.
</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.Groups.ILineGroup">
            <summary>A linear reinforcement group that contains one or more parallel
layers of reinforcement bars or bundles of bars arranged in straight lines.
</summary>
            <remarks>
                <para>The length of <see cref="T:SDK.Oasys.AdSec.Reinforcement.Groups.ILineGroup" /> is defined by the positions of the first and last bars or bundles of bars, <see cref="!:FirstBarPosition" /> and <see cref="!:LastBarPosition" />. </para>
                <para>
                    <see cref="T:SDK.Oasys.AdSec.Reinforcement.Groups.ILineGroup" />contains a <see cref="!:Oasys.AdSec.Reinforcement.Layers.ILayer" />, which define/s the reinforcement bundling and spacing along the line.</para>
                <img src="../images/ReinforcementGroups.png" />
            </remarks>
            <seealso cref="T:SDK.Oasys.AdSec.Reinforcement.Groups.ILongitudinalGroup" />
            <seealso cref="!:Oasys.AdSec.Reinforcement.Layers.ILayer" />
            <example>
# [C#](#tab/tabid-1)
<code source="../../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ILine.cs" region="Usings" lang="csharp" /><code source="../../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ILine.cs" region="Snippet" lang="csharp" /><para>Example creating a multi-layered reinforcement group.</para>
# [Python](#tab/tabid-2)
<code source="../../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ILine.py" region="Imports" lang="python" /><code source="../../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ILine.py" region="Snippet" lang="python" /><para>Example creating a multi-layered reinforcement group.</para>
***
</example>
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.Groups.ILineGroup.Create(Oasys.Profiles.IPoint,Oasys.Profiles.IPoint,Oasys.AdSec.Reinforcement.Layers.ILayer)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.Groups.ILineGroup" /> reinforcement group from its
<see cref="P:Oasys.AdSec.Reinforcement.Groups.ILineGroup.FirstBarPosition" />,
<see cref="P:Oasys.AdSec.Reinforcement.Groups.ILineGroup.LastBarPosition" /> and
<see cref="P:Oasys.AdSec.Reinforcement.Groups.ILineGroup.Layer" />.
</summary>
            <param name="firstBarPosition">Defines the position of the first reinforcement bar in the line group.</param>
            <param name="lastBarPosition">Defines the position of the last reinforcement bar in the line group.</param>
            <param name="layer">Defines the bar (or bar bundles) that will be positioned along the line.</param>
            <returns>A new line reinforcement group.</returns>
            <exception cref="!:System.ArgumentNullException">If firstBarPosition is null</exception>
            <exception cref="!:System.ArgumentNullException">If lastBarPosition is null</exception>
            <exception cref="!:System.ArgumentNullException">If layer is null</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.Groups.ILineGroup.Layer">
            <summary>The layer of reinforcement to be positioned along the line.</summary>
            <exception cref="!:System.ArgumentNullException">If Layer is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.Groups.ILineGroup.LastBarPosition">
            <summary>Position of the centre of the last reinforcement bar or bundle of bars,
in the local coordinate system of the containing <see cref="!:ISection" />.
</summary>
            <exception cref="!:System.ArgumentNullException">If LastBarPosition is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.Groups.ILineGroup.FirstBarPosition">
            <summary>Position of the centre of the first reinforcement bar or bundle of bars,
in the local coordinate system of the containing <see cref="!:ISection" />.
</summary>
            <exception cref="!:System.ArgumentNullException">If FirstBarPosition is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.Groups.ILineGroup">
            <summary>A linear reinforcement group that contains one or more parallel
layers of reinforcement bars or bundles of bars arranged in straight lines.
</summary>
            <remarks>
                <para>The length of <see cref="T:Oasys.AdSec.Reinforcement.Groups.ILineGroup" /> is defined by the positions of the first and last bars or bundles of bars, <see cref="P:Oasys.AdSec.Reinforcement.Groups.ILineGroup.FirstBarPosition" /> and <see cref="P:Oasys.AdSec.Reinforcement.Groups.ILineGroup.LastBarPosition" />. </para>
                <para>
                    <see cref="T:Oasys.AdSec.Reinforcement.Groups.ILineGroup" />contains a <see cref="!:Oasys.AdSec.Reinforcement.Layers.ILayer" />, which define/s the reinforcement bundling and spacing along the line.</para>
                <img src="../images/ReinforcementGroups.png" />
            </remarks>
            <seealso cref="T:Oasys.AdSec.Reinforcement.Groups.ILongitudinalGroup" />
            <seealso cref="!:Oasys.AdSec.Reinforcement.Layers.ILayer" />
            <example>
# [C#](#tab/tabid-1)
<code source="../../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ILine.cs" region="Usings" lang="csharp" /><code source="../../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ILine.cs" region="Snippet" lang="csharp" /><para>Example creating a multi-layered reinforcement group.</para>
# [Python](#tab/tabid-2)
<code source="../../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ILine.py" region="Imports" lang="python" /><code source="../../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ILine.py" region="Snippet" lang="python" /><para>Example creating a multi-layered reinforcement group.</para>
***
</example>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.SG">
            <summary>Eurocode 2 (part 2) using Singapore's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.NL">
            <summary>Eurocode 2 (part 2) using Netherlands' National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.IT">
            <summary>Eurocode 2 (part 2) using Italy's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.IE">
            <summary>Eurocode 2 (part 2) using Ireland's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.GB">
            <summary>Eurocode 2 (part 2) using UK's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.FR">
            <summary>Eurocode 2 (part 2) using France's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.ES">
            <summary>Eurocode 2 (part 2) using Spain's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.DK">
            <summary>Eurocode 2 (part 2) using Denmark's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.DE">
            <summary>Eurocode 2 (part 2) using Germany's National Annex</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.NoNationalAnnex">
            <summary>Eurocode 2 (part 2) using the recommended values for Nationally Determined Parameters.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.CY">
            <summary>Eurocode 2 (part 1) using Cyprus' National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.SG">
            <summary>Eurocode 2 (part 1) using Singapore's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.PL">
            <summary>Eurocode 2 (part 1) using Poland's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.NO">
            <summary>Eurocode 2 (part 1) using Norway's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.NL">
            <summary>Eurocode 2 (part 1) using Netherlands' National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.IT">
            <summary>Eurocode 2 (part 1) using Italy's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.IE">
            <summary>Eurocode 2 (part 1) using Ireland's National Annex</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.GB.PD6687.Edition_2010">
            <summary>Eurocode 2 (part 1) using UK's National Annex and PD6687</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.GB.PD6687.Edition_2006">
            <summary>Eurocode 2 (part 1) using UK's National Annex and PD6687</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.GB">
            <summary>Eurocode 2 (part 1) using UK's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.FR">
            <summary>Eurocode 2 (part 1) using France's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.FI">
            <summary>Eurocode 2 (part 1) using Finland's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.ES">
            <summary>Eurocode 2 (part 1) using Spain's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.DK">
            <summary>Eurocode 2 (part 1) using Denmark's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.DE">
            <summary>Eurocode 2 (part 1) using Germany's National Annex</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.NoNationalAnnex">
            <summary>Eurocode 2 (part 1) using the recommended values for Nationally Determined Parameters.</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.SG">
            <summary>Eurocode 2 (part 2) using Singapore's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.NL">
            <summary>Eurocode 2 (part 2) using Netherlands' National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.IT">
            <summary>Eurocode 2 (part 2) using Italy's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.IE">
            <summary>Eurocode 2 (part 2) using Ireland's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.GB">
            <summary>Eurocode 2 (part 2) using UK's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.FR">
            <summary>Eurocode 2 (part 2) using France's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.ES">
            <summary>Eurocode 2 (part 2) using Spain's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.DK">
            <summary>Eurocode 2 (part 2) using Denmark's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.DE">
            <summary>Eurocode 2 (part 2) using Germany's National Annex</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.EN1992.Part2.Edition_2005.NationalAnnex.NoNationalAnnex">
            <summary>Eurocode 2 (part 2) using the recommended values for Nationally Determined Parameters.</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.CY">
            <summary>Eurocode 2 (part 1) using Cyprus' National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.SG">
            <summary>Eurocode 2 (part 1) using Singapore's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.PL">
            <summary>Eurocode 2 (part 1) using Poland's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.NO">
            <summary>Eurocode 2 (part 1) using Norway's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.NL">
            <summary>Eurocode 2 (part 1) using Netherlands' National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.IT">
            <summary>Eurocode 2 (part 1) using Italy's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.IE">
            <summary>Eurocode 2 (part 1) using Ireland's National Annex</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.GB.PD6687.Edition_2010">
            <summary>Eurocode 2 (part 1) using UK's National Annex and PD6687</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.GB.PD6687.Edition_2006">
            <summary>Eurocode 2 (part 1) using UK's National Annex and PD6687</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.GB">
            <summary>Eurocode 2 (part 1) using UK's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.FR">
            <summary>Eurocode 2 (part 1) using France's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.FI">
            <summary>Eurocode 2 (part 1) using Finland's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.ES">
            <summary>Eurocode 2 (part 1) using Spain's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.DK">
            <summary>Eurocode 2 (part 1) using Denmark's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.DE">
            <summary>Eurocode 2 (part 1) using Germany's National Annex</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.EN1992.Part1_1.Edition_2004.NationalAnnex.NoNationalAnnex">
            <summary>Eurocode 2 (part 1) using the recommended values for Nationally Determined Parameters.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.IArcGroup.Create(std.shared_ptr&lt;SDK.Oasys.Profiles.IPoint&gt;,System.Double,System.Double,System.Double,std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.Layers.ILayer&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.Groups.IArcGroup" /> reinforcement group from its
<see cref="!:Centre" />,
<see cref="!:Radius" />,
<see cref="!:StartAngle" />,
<see cref="!:SweepAngle" /> and
<see cref="!:Layer" />.
</summary>
            <param name="centre">Defines the arc's centre.</param>
            <param name="radius">Defines the arc's radius.</param>
            <param name="startAngle">Defines the arc's start angle.<br />
Positive angle is considered anti-clockwise.
</param>
            <param name="sweepAngle">Defines the arc's sweep angle.<br />
Positive angle is considered anti-clockwise.
</param>
            <param name="layer">Defines the bar (or bar bundles) that will be positioned along the arc.</param>
            <returns>A new arc reinforcement group.</returns>
            <exception cref="!:System.ArgumentException">
When the radius is not a positive and finite value.
</exception>
            <exception cref="!:System.ArgumentException">
When the sweep angle is not between +360.0 and -360.0 degrees.
</exception>
            <exception cref="!:System.ArgumentException">
When the start angle is not a finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.IArcGroup.SetLayer(std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.Layers.ILayer&gt;)">
            <summary>The layer of reinforcement to be positioned along the arc.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.IArcGroup.GetLayer">
            <summary>The layer of reinforcement to be positioned along the arc.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.IArcGroup.SetSweepAngle(System.Double)">
            <summary>The angle sweeped by the arc from its start angle.<br />
Positive angle is considered anti-clockwise.
</summary>
            <exception cref="!:System.ArgumentException">
When the angle is not between +360.0 and -360.0 degrees.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.IArcGroup.GetSweepAngle">
            <summary>The angle sweeped by the arc from its start angle.<br />
Positive angle is considered anti-clockwise.
</summary>
            <exception cref="!:System.ArgumentException">
When the angle is not between +360.0 and -360.0 degrees.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.IArcGroup.SetStartAngle(System.Double)">
            <summary>The start angle of the arc.<br />
Positive angle is considered anti-clockwise.
</summary>
            <exception cref="!:System.ArgumentException">
When the angle is not a finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.IArcGroup.GetStartAngle">
            <summary>The start angle of the arc.<br />
Positive angle is considered anti-clockwise.
</summary>
            <exception cref="!:System.ArgumentException">
When the angle is not a finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.IArcGroup.SetRadius(System.Double)">
            <summary>The radius of the arc.
</summary>
            <exception cref="!:System.ArgumentException">
When the radius is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.IArcGroup.GetRadius">
            <summary>The radius of the arc.
</summary>
            <exception cref="!:System.ArgumentException">
When the radius is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.IArcGroup.SetCentre(std.shared_ptr&lt;SDK.Oasys.Profiles.IPoint&gt;)">
            <summary>The centre of the arc.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.IArcGroup.GetCentre">
            <summary>The centre of the arc.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.Groups.IArcGroup">
            <summary>An arc reinforcement group.
</summary>
            <seealso cref="T:SDK.Oasys.AdSec.Reinforcement.Groups.ILongitudinalGroup" />
            <seealso cref="!:Oasys.AdSec.Reinforcement.Layers.ILayer" />
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.Groups.IArcGroup.Create(Oasys.Profiles.IPoint,UnitsNet.Length,UnitsNet.Angle,UnitsNet.Angle,Oasys.AdSec.Reinforcement.Layers.ILayer)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.Groups.IArcGroup" /> reinforcement group from its
<see cref="P:Oasys.AdSec.Reinforcement.Groups.IArcGroup.Centre" />,
<see cref="P:Oasys.AdSec.Reinforcement.Groups.IArcGroup.Radius" />,
<see cref="P:Oasys.AdSec.Reinforcement.Groups.IArcGroup.StartAngle" />,
<see cref="P:Oasys.AdSec.Reinforcement.Groups.IArcGroup.SweepAngle" /> and
<see cref="P:Oasys.AdSec.Reinforcement.Groups.IArcGroup.Layer" />.
</summary>
            <param name="centre">Defines the arc's centre.</param>
            <param name="radius">Defines the arc's radius.</param>
            <param name="startAngle">Defines the arc's start angle.<br />
Positive angle is considered anti-clockwise.
</param>
            <param name="sweepAngle">Defines the arc's sweep angle.<br />
Positive angle is considered anti-clockwise.
</param>
            <param name="layer">Defines the bar (or bar bundles) that will be positioned along the arc.</param>
            <returns>A new arc reinforcement group.</returns>
            <exception cref="!:System.ArgumentException">
When the radius is not a positive and finite value.
</exception>
            <exception cref="!:System.ArgumentException">
When the sweep angle is not between +360.0 and -360.0 degrees.
</exception>
            <exception cref="!:System.ArgumentException">
When the start angle is not a finite value.
</exception>
            <exception cref="!:System.ArgumentNullException">If centre is null</exception>
            <exception cref="!:System.ArgumentNullException">If layer is null</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.Groups.IArcGroup.Layer">
            <summary>The layer of reinforcement to be positioned along the arc.</summary>
            <exception cref="!:System.ArgumentNullException">If Layer is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.Groups.IArcGroup.SweepAngle">
            <summary>The angle sweeped by the arc from its start angle.<br />
Positive angle is considered anti-clockwise.
</summary>
            <exception cref="!:System.ArgumentException">
When the angle is not between +360.0 and -360.0 degrees.
</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.Groups.IArcGroup.StartAngle">
            <summary>The start angle of the arc.<br />
Positive angle is considered anti-clockwise.
</summary>
            <exception cref="!:System.ArgumentException">
When the angle is not a finite value.
</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.Groups.IArcGroup.Radius">
            <summary>The radius of the arc.
</summary>
            <exception cref="!:System.ArgumentException">
When the radius is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.Groups.IArcGroup.Centre">
            <summary>The centre of the arc.</summary>
            <exception cref="!:System.ArgumentNullException">If Centre is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.Groups.IArcGroup">
            <summary>An arc reinforcement group.
</summary>
            <seealso cref="T:Oasys.AdSec.Reinforcement.Groups.ILongitudinalGroup" />
            <seealso cref="!:Oasys.AdSec.Reinforcement.Layers.ILayer" />
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.IS456.Edition_2000">
            <summary>The 2000 edition of IS456</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.IS456.Edition_2000">
            <summary>The 2000 edition of IS456</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IManderConfinedStressStrainCurve.Create(System.Double,System.Double,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IManderConfinedStressStrainCurve" />.
</summary>
            <param name="unconfinedStrength">The unconfined strength of the material.</param>
            <param name="confinedStrength">The confined strength of the material.</param>
            <param name="initialModulus">The initial gradient of the stress-strain curve.</param>
            <param name="failureStrain">The strain beyond which the material fails.</param>
            <remarks>Peak strain is calculated from unconfined strength, confined strength and initial modulus.</remarks>
            <exception cref="!:System.ArgumentException">
When the peak strain is larger than the failure strain.
</exception>
            <exception cref="!:System.ArgumentException">
When the initial gradient is not a poitive finite value.
</exception>
            <exception cref="!:System.ArgumentException">
When the confined strength is smaller than the unconfined strength.
</exception>
            <exception cref="!:System.ArgumentException">
When the failure strain is smaller than the calculated peak strain.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IManderConfinedStressStrainCurve.GetInitialModulus">
            <summary>The initial gradient of the stress-strain curve.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IManderConfinedStressStrainCurve.GetConfinedStrength">
            <summary>The confined strength of the material.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IManderConfinedStressStrainCurve.GetUnconfinedStrength">
            <summary>The unconfined strength of the material.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IManderConfinedStressStrainCurve">
            <summary>
A type of <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" /> for a confined concrete <see cref="!:IMaterial" />.
Refer 'Mander J.B., Priestley M.J.N., and Park R. (1988). â€œTheoretical
Stress-Strain Model for Confined Concreteâ€, ASCE Journal of Structural
Engineering, V. 114, No. 8, pp. 1804-1826' for further details.
<center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 40,229 60,184 80,146 100,115 120,91 130,82 140,74 150,68 155,66 160,64 170,61 180,60.5 200,61 220,62 240,64 400,78" class="curve" /><line x1="20" y1="60" x2="180" y2="60" stroke-dasharray="4" /><text x="35" y="40" class="text">Confined strength</text><circle cX="20" cy="60" r="15" /><line x1="400" y1="78" x2="400" y2="280" stroke-dasharray="4" /><text x="495" y="265" class="text" text-anchor="end">Failure strain</text><circle cX="400" cy="280" r="15" /><line x1="20" y1="280" x2="66" y2="131" stroke-dasharray="4" /><text x="-150" y="135" class="text" transform="rotate(289)" text-anchor="end">Initial modulus</text><line x1="180" y1="60" x2="180" y2="280" stroke-dasharray="4" /><text x="265" y="265" class="text" text-anchor="end">Peak strain</text><circle cX="180" cy="280" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
  </style></svg></center></summary>
            <remarks>Mander curve is commonly used for concrete materials.</remarks>
        </member>
        <member name="M:Oasys.AdSec.Materials.StressStrainCurves.IManderConfinedStressStrainCurve.Create(UnitsNet.Pressure,UnitsNet.Pressure,UnitsNet.Pressure,Oasys.Units.Strain)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IManderConfinedStressStrainCurve" />.
</summary>
            <param name="unconfinedStrength">The unconfined strength of the material.</param>
            <param name="confinedStrength">The confined strength of the material.</param>
            <param name="initialModulus">The initial gradient of the stress-strain curve.</param>
            <param name="failureStrain">The strain beyond which the material fails.</param>
            <remarks>Peak strain is calculated from unconfined strength, confined strength and initial modulus.</remarks>
            <exception cref="!:System.ArgumentException">
When the peak strain is larger than the failure strain.
</exception>
            <exception cref="!:System.ArgumentException">
When the initial gradient is not a poitive finite value.
</exception>
            <exception cref="!:System.ArgumentException">
When the confined strength is smaller than the unconfined strength.
</exception>
            <exception cref="!:System.ArgumentException">
When the failure strain is smaller than the calculated peak strain.
</exception>
        </member>
        <member name="P:Oasys.AdSec.Materials.StressStrainCurves.IManderConfinedStressStrainCurve.InitialModulus">
            <summary>The initial gradient of the stress-strain curve.</summary>
        </member>
        <member name="P:Oasys.AdSec.Materials.StressStrainCurves.IManderConfinedStressStrainCurve.ConfinedStrength">
            <summary>The confined strength of the material.</summary>
        </member>
        <member name="P:Oasys.AdSec.Materials.StressStrainCurves.IManderConfinedStressStrainCurve.UnconfinedStrength">
            <summary>The unconfined strength of the material.</summary>
        </member>
        <member name="T:Oasys.AdSec.Materials.StressStrainCurves.IManderConfinedStressStrainCurve">
            <summary>
A type of <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" /> for a confined concrete <see cref="!:IMaterial" />.
Refer 'Mander J.B., Priestley M.J.N., and Park R. (1988). â€œTheoretical
Stress-Strain Model for Confined Concreteâ€, ASCE Journal of Structural
Engineering, V. 114, No. 8, pp. 1804-1826' for further details.
<center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 40,229 60,184 80,146 100,115 120,91 130,82 140,74 150,68 155,66 160,64 170,61 180,60.5 200,61 220,62 240,64 400,78" class="curve" /><line x1="20" y1="60" x2="180" y2="60" stroke-dasharray="4" /><text x="35" y="40" class="text">Confined strength</text><circle cX="20" cy="60" r="15" /><line x1="400" y1="78" x2="400" y2="280" stroke-dasharray="4" /><text x="495" y="265" class="text" text-anchor="end">Failure strain</text><circle cX="400" cy="280" r="15" /><line x1="20" y1="280" x2="66" y2="131" stroke-dasharray="4" /><text x="-150" y="135" class="text" transform="rotate(289)" text-anchor="end">Initial modulus</text><line x1="180" y1="60" x2="180" y2="280" stroke-dasharray="4" /><text x="265" y="265" class="text" text-anchor="end">Peak strain</text><circle cX="180" cy="280" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
  </style></svg></center></summary>
            <remarks>Mander curve is commonly used for concrete materials.</remarks>
        </member>
        <member name="M:SDK.Oasys.Profiles.ISheetPileProfile.Create(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.ISheetPileProfile" /> profile from its
<see cref="!:Depth" />,
<see cref="!:Width" />,
<see cref="!:TopFlangeWidth" />,
<see cref="!:BottomFlangeWidth" />,
<see cref="!:FlangeThickness" /> and
<see cref="!:WebThickness" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="width">Defines the profile's overall width.</param>
            <param name="topFlangeWidth">Defines the profile's top flange width.</param>
            <param name="bottomFlangeWidth">Defines the profile's bottom flange width.</param>
            <param name="flangeThickness">Defines the profile's flange thickness.</param>
            <param name="webThickness">Defines the profile's web thickness.</param>
            <exception cref="!:System.ArgumentException">
When any of the dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ISheetPileProfile.SetWebThickness(System.Double)">
            <summary>The web thickness of the sheet pile section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the web thickness is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ISheetPileProfile.GetWebThickness">
            <summary>The web thickness of the sheet pile section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the web thickness is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ISheetPileProfile.SetFlangeThickness(System.Double)">
            <summary>The flange thickness of the sheet pile section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the flange thickness is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ISheetPileProfile.GetFlangeThickness">
            <summary>The flange thickness of the sheet pile section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the flange thickness is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ISheetPileProfile.SetBottomFlangeWidth(System.Double)">
            <summary>The bottom flange width of the sheet pile section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the bottom flange width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ISheetPileProfile.GetBottomFlangeWidth">
            <summary>The bottom flange width of the sheet pile section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the bottom flange width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ISheetPileProfile.SetTopFlangeWidth(System.Double)">
            <summary>The top flange width of the sheet pile section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the top flange width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ISheetPileProfile.GetTopFlangeWidth">
            <summary>The top flange width of the sheet pile section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the top flange width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ISheetPileProfile.SetWidth(System.Double)">
            <summary>The overall width of the sheet pile section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the overall width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ISheetPileProfile.GetWidth">
            <summary>The overall width of the sheet pile section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the overall width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ISheetPileProfile.SetDepth(System.Double)">
            <summary>The depth of the sheet pile section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ISheetPileProfile.GetDepth">
            <summary>The depth of the sheet pile section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.ISheetPileProfile">
            <summary>A sheet pile section profile.
<center><svg height="350" width="350"><path class="profile-line" d="M57,171 L90,100 L155,100 L215,235 L260,235 L292,168 L305,175 L270,250 L205,250 L145,115 L100,115 L70,178z" fill="#8da0cb" /><line class="profile-centreline" x1="63.5" y1="174.5" x2="95" y2="107.5" /><line class="profile-centreline" x1="95" y1="107.5" x2="150" y2="107.5" /><line class="profile-centreline" x1="150" y1="107.5" x2="210" y2="242.5" /><line class="profile-centreline" x1="210" y1="242.5" x2="265" y2="242.5" /><line class="profile-centreline" x1="265" y1="242.5" x2="298.5" y2="171.5" /><line class="profile-line" x1="20" y1="100" x2="20" y2="250" /><line class="profile-line" x1="10" y1="100" x2="75" y2="100" /><line class="profile-line" x1="10" y1="250" x2="190" y2="250" /><text class="profile-label" x="-175" y="12" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><line class="profile-line" x1="50" y1="100" x2="50" y2="175" /><line class="profile-line" x1="45" y1="175" x2="55" y2="175" /><text class="profile-label" x="-150" y="40" fill="black" text-anchor="middle" transform="rotate(-90)">0.5 × Depth</text><line class="profile-line" x1="63.5" y1="310" x2="298" y2="310" /><line class="profile-line" x1="63.5" y1="174.5" x2="63.5" y2="320" /><line class="profile-line" x1="298" y1="171.5" x2="298" y2="320" /><text class="profile-label" x="180" y="335" fill="black" text-anchor="middle">Width</text><line class="profile-line" x1="210" y1="270" x2="265" y2="270" /><line class="profile-line" x1="210" y1="260" x2="210" y2="280" /><line class="profile-line" x1="265" y1="260" x2="265" y2="280" /><text class="profile-label" x="290" y="300" fill="black" text-anchor="end">Bottom Flange Width</text><line class="profile-line" x1="95" y1="80" x2="150" y2="80" /><line class="profile-line" x1="95" y1="70" x2="95" y2="90" /><line class="profile-line" x1="150" y1="70" x2="150" y2="90" /><text class="profile-label" x="122" y="65" fill="black" text-anchor="middle">Top Flange Width</text><line class="profile-line" x1="237" y1="250" x2="237" y2="195" /><text class="profile-label" x="237" y="170" fill="black" text-anchor="middle">Flange</text><text class="profile-label" x="237" y="190" fill="black" text-anchor="middle">Thickness</text><line class="profile-line" x1="151" y1="131" x2="195" y2="110" /><text class="profile-label" x="200" y="110" fill="black" text-anchor="start">Web Thickness</text><circle class="profile-origin" cx="180" cy="175" r="6" /><text class="profile-label" x="175" y="195" fill="black" text-anchor="end">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
    .profile-centreline {stroke:black;stroke-width:1;stroke-dasharray:4}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.ISheetPileProfile" /> inherits <see cref="T:SDK.Oasys.Profiles.IProfile" />.</remarks>
        </member>
        <member name="M:Oasys.Profiles.ISheetPileProfile.Create(UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.ISheetPileProfile" /> profile from its
<see cref="P:Oasys.Profiles.ISheetPileProfile.Depth" />,
<see cref="P:Oasys.Profiles.ISheetPileProfile.Width" />,
<see cref="P:Oasys.Profiles.ISheetPileProfile.TopFlangeWidth" />,
<see cref="P:Oasys.Profiles.ISheetPileProfile.BottomFlangeWidth" />,
<see cref="P:Oasys.Profiles.ISheetPileProfile.FlangeThickness" /> and
<see cref="P:Oasys.Profiles.ISheetPileProfile.WebThickness" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="width">Defines the profile's overall width.</param>
            <param name="topFlangeWidth">Defines the profile's top flange width.</param>
            <param name="bottomFlangeWidth">Defines the profile's bottom flange width.</param>
            <param name="flangeThickness">Defines the profile's flange thickness.</param>
            <param name="webThickness">Defines the profile's web thickness.</param>
            <exception cref="!:System.ArgumentException">
When any of the dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.ISheetPileProfile.WebThickness">
            <summary>The web thickness of the sheet pile section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the web thickness is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.ISheetPileProfile.FlangeThickness">
            <summary>The flange thickness of the sheet pile section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the flange thickness is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.ISheetPileProfile.BottomFlangeWidth">
            <summary>The bottom flange width of the sheet pile section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the bottom flange width is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.ISheetPileProfile.TopFlangeWidth">
            <summary>The top flange width of the sheet pile section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the top flange width is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.ISheetPileProfile.Width">
            <summary>The overall width of the sheet pile section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the overall width is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.ISheetPileProfile.Depth">
            <summary>The depth of the sheet pile section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.ISheetPileProfile">
            <summary>A sheet pile section profile.
<center><svg height="350" width="350"><path class="profile-line" d="M57,171 L90,100 L155,100 L215,235 L260,235 L292,168 L305,175 L270,250 L205,250 L145,115 L100,115 L70,178z" fill="#8da0cb" /><line class="profile-centreline" x1="63.5" y1="174.5" x2="95" y2="107.5" /><line class="profile-centreline" x1="95" y1="107.5" x2="150" y2="107.5" /><line class="profile-centreline" x1="150" y1="107.5" x2="210" y2="242.5" /><line class="profile-centreline" x1="210" y1="242.5" x2="265" y2="242.5" /><line class="profile-centreline" x1="265" y1="242.5" x2="298.5" y2="171.5" /><line class="profile-line" x1="20" y1="100" x2="20" y2="250" /><line class="profile-line" x1="10" y1="100" x2="75" y2="100" /><line class="profile-line" x1="10" y1="250" x2="190" y2="250" /><text class="profile-label" x="-175" y="12" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><line class="profile-line" x1="50" y1="100" x2="50" y2="175" /><line class="profile-line" x1="45" y1="175" x2="55" y2="175" /><text class="profile-label" x="-150" y="40" fill="black" text-anchor="middle" transform="rotate(-90)">0.5 × Depth</text><line class="profile-line" x1="63.5" y1="310" x2="298" y2="310" /><line class="profile-line" x1="63.5" y1="174.5" x2="63.5" y2="320" /><line class="profile-line" x1="298" y1="171.5" x2="298" y2="320" /><text class="profile-label" x="180" y="335" fill="black" text-anchor="middle">Width</text><line class="profile-line" x1="210" y1="270" x2="265" y2="270" /><line class="profile-line" x1="210" y1="260" x2="210" y2="280" /><line class="profile-line" x1="265" y1="260" x2="265" y2="280" /><text class="profile-label" x="290" y="300" fill="black" text-anchor="end">Bottom Flange Width</text><line class="profile-line" x1="95" y1="80" x2="150" y2="80" /><line class="profile-line" x1="95" y1="70" x2="95" y2="90" /><line class="profile-line" x1="150" y1="70" x2="150" y2="90" /><text class="profile-label" x="122" y="65" fill="black" text-anchor="middle">Top Flange Width</text><line class="profile-line" x1="237" y1="250" x2="237" y2="195" /><text class="profile-label" x="237" y="170" fill="black" text-anchor="middle">Flange</text><text class="profile-label" x="237" y="190" fill="black" text-anchor="middle">Thickness</text><line class="profile-line" x1="151" y1="131" x2="195" y2="110" /><text class="profile-label" x="200" y="110" fill="black" text-anchor="start">Web Thickness</text><circle class="profile-origin" cx="180" cy="175" r="6" /><text class="profile-label" x="175" y="195" fill="black" text-anchor="end">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
    .profile-centreline {stroke:black;stroke-width:1;stroke-dasharray:4}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.ISheetPileProfile" /> inherits <see cref="T:Oasys.Profiles.IProfile" />.</remarks>
        </member>
        <member name="M:SDK.Oasys.Profiles.ISecantPileProfile.Create(System.Double,System.Double,System.Int32,System.Boolean)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.ISecantPileProfile" /> profile from its
<see cref="!:Diameter" />,
<see cref="!:PileCentres" />,
<see cref="!:PileCount" /> and
<see cref="!:IsWallNotSection" />.
</summary>
            <param name="diameter">Defines the diameter of the piles.</param>
            <param name="pileCentres">Defines the centre to centre distance between adjacent piles.</param>
            <param name="pileCount">Defines the number of piles in the profile.</param>
            <param name="isWallNotSection">
Converts the profile into a wall secant pile profile if true.<br />
Converts the profile into a section secant pile profile if false.
</param>
            <exception cref="!:System.ArgumentException">
When any of the dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ISecantPileProfile.SetIsWallNotSection(System.Boolean)">
            <summary>
Converts the profile into a wall secant pile profile if true.<br />
Converts the profile into a section secant pile profile if false.
</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.ISecantPileProfile.GetIsWallNotSection">
            <summary>
Converts the profile into a wall secant pile profile if true.<br />
Converts the profile into a section secant pile profile if false.
</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.ISecantPileProfile.SetPileCount(System.Int32)">
            <summary>The number of piles in the profile.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.ISecantPileProfile.GetPileCount">
            <summary>The number of piles in the profile.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.ISecantPileProfile.SetPileCentres(System.Double)">
            <summary>The centre to centre distance between adjacent piles.
</summary>
            <exception cref="!:System.ArgumentException">
When the distance is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ISecantPileProfile.GetPileCentres">
            <summary>The centre to centre distance between adjacent piles.
</summary>
            <exception cref="!:System.ArgumentException">
When the distance is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ISecantPileProfile.SetDiameter(System.Double)">
            <summary>The diameter of the piles.
</summary>
            <exception cref="!:System.ArgumentException">
When the diameter is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ISecantPileProfile.GetDiameter">
            <summary>The diameter of the piles.
</summary>
            <exception cref="!:System.ArgumentException">
When the diameter is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.ISecantPileProfile">
            <summary>A secant pile section profile.
<center><svg height="350" width="350"><text class="profile-label" x="175" y="50" fill="black" text-anchor="middle">Section</text><path class="profile-line" d="M47,175 A75,75 1 0,1 175,122 A75,75 1 0,1 303,175 A75,75 1 0,1 175,228 A75,75 1 0,1 47,175z" fill="#8da0cb" /><line class="profile-line" x1="29" y1="100" x2="29" y2="250" /><line class="profile-line" x1="19" y1="100" x2="90" y2="100" /><line class="profile-line" x1="19" y1="250" x2="90" y2="250" /><text class="profile-label" x="-175" y="19" fill="black" text-anchor="middle" transform="rotate(-90)">Diameter</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="175" y="165" fill="black" text-anchor="start">Origin</text><line class="centres" x1="119" y1="172" x2="125" y2="178" /><line class="centres" x1="125" y1="172" x2="119" y2="178" /><line class="centres" x1="225" y1="172" x2="231" y2="178" /><line class="centres" x1="231" y1="172" x2="225" y2="178" /><line class="profile-line" x1="122" y1="270" x2="228" y2="270" /><line class="profile-line" x1="122" y1="260" x2="122" y2="280" /><line class="profile-line" x1="228" y1="260" x2="228" y2="280" /><text class="profile-label" x="175" y="295" fill="black" text-anchor="middle">Pile centres</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
    .centres {stroke:black;stroke-width:0.5;}
  </style></svg><svg height="350" width="350"><text class="profile-label" x="175" y="50" fill="black" text-anchor="middle">Wall</text><path class="profile-line" d="M69,122 A75,75 1 0,1 175,122 A75,75 1 0,1 281,122 L281,228 A75,75 1 0,1 175,228 A75,75 1 0,1 69,228z" fill="#8da0cb" /><line class="profile-line" x1="29" y1="100" x2="29" y2="250" /><line class="profile-line" x1="19" y1="100" x2="90" y2="100" /><line class="profile-line" x1="19" y1="250" x2="90" y2="250" /><text class="profile-label" x="-175" y="19" fill="black" text-anchor="middle" transform="rotate(-90)">Diameter</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="175" y="165" fill="black" text-anchor="start">Origin</text><line class="centres" x1="119" y1="172" x2="125" y2="178" /><line class="centres" x1="125" y1="172" x2="119" y2="178" /><line class="centres" x1="225" y1="172" x2="231" y2="178" /><line class="centres" x1="231" y1="172" x2="225" y2="178" /><line class="profile-line" x1="122" y1="270" x2="228" y2="270" /><line class="profile-line" x1="122" y1="260" x2="122" y2="280" /><line class="profile-line" x1="228" y1="260" x2="228" y2="280" /><text class="profile-label" x="175" y="295" fill="black" text-anchor="middle">Pile centres</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
    .centres {stroke:black;stroke-width:0.5;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.ISecantPileProfile" /> inherits <see cref="T:SDK.Oasys.Profiles.IProfile" />.</remarks>
        </member>
        <member name="M:Oasys.Profiles.ISecantPileProfile.Create(UnitsNet.Length,UnitsNet.Length,System.Int32,System.Boolean)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.ISecantPileProfile" /> profile from its
<see cref="P:Oasys.Profiles.ISecantPileProfile.Diameter" />,
<see cref="P:Oasys.Profiles.ISecantPileProfile.PileCentres" />,
<see cref="P:Oasys.Profiles.ISecantPileProfile.PileCount" /> and
<see cref="P:Oasys.Profiles.ISecantPileProfile.IsWallNotSection" />.
</summary>
            <param name="diameter">Defines the diameter of the piles.</param>
            <param name="pileCentres">Defines the centre to centre distance between adjacent piles.</param>
            <param name="pileCount">Defines the number of piles in the profile.</param>
            <param name="isWallNotSection">
Converts the profile into a wall secant pile profile if true.<br />
Converts the profile into a section secant pile profile if false.
</param>
            <exception cref="!:System.ArgumentException">
When any of the dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.ISecantPileProfile.IsWallNotSection">
            <summary>
Converts the profile into a wall secant pile profile if true.<br />
Converts the profile into a section secant pile profile if false.
</summary>
        </member>
        <member name="P:Oasys.Profiles.ISecantPileProfile.PileCount">
            <summary>The number of piles in the profile.</summary>
        </member>
        <member name="P:Oasys.Profiles.ISecantPileProfile.PileCentres">
            <summary>The centre to centre distance between adjacent piles.
</summary>
            <exception cref="!:System.ArgumentException">
When the distance is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.ISecantPileProfile.Diameter">
            <summary>The diameter of the piles.
</summary>
            <exception cref="!:System.ArgumentException">
When the diameter is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.ISecantPileProfile">
            <summary>A secant pile section profile.
<center><svg height="350" width="350"><text class="profile-label" x="175" y="50" fill="black" text-anchor="middle">Section</text><path class="profile-line" d="M47,175 A75,75 1 0,1 175,122 A75,75 1 0,1 303,175 A75,75 1 0,1 175,228 A75,75 1 0,1 47,175z" fill="#8da0cb" /><line class="profile-line" x1="29" y1="100" x2="29" y2="250" /><line class="profile-line" x1="19" y1="100" x2="90" y2="100" /><line class="profile-line" x1="19" y1="250" x2="90" y2="250" /><text class="profile-label" x="-175" y="19" fill="black" text-anchor="middle" transform="rotate(-90)">Diameter</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="175" y="165" fill="black" text-anchor="start">Origin</text><line class="centres" x1="119" y1="172" x2="125" y2="178" /><line class="centres" x1="125" y1="172" x2="119" y2="178" /><line class="centres" x1="225" y1="172" x2="231" y2="178" /><line class="centres" x1="231" y1="172" x2="225" y2="178" /><line class="profile-line" x1="122" y1="270" x2="228" y2="270" /><line class="profile-line" x1="122" y1="260" x2="122" y2="280" /><line class="profile-line" x1="228" y1="260" x2="228" y2="280" /><text class="profile-label" x="175" y="295" fill="black" text-anchor="middle">Pile centres</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
    .centres {stroke:black;stroke-width:0.5;}
  </style></svg><svg height="350" width="350"><text class="profile-label" x="175" y="50" fill="black" text-anchor="middle">Wall</text><path class="profile-line" d="M69,122 A75,75 1 0,1 175,122 A75,75 1 0,1 281,122 L281,228 A75,75 1 0,1 175,228 A75,75 1 0,1 69,228z" fill="#8da0cb" /><line class="profile-line" x1="29" y1="100" x2="29" y2="250" /><line class="profile-line" x1="19" y1="100" x2="90" y2="100" /><line class="profile-line" x1="19" y1="250" x2="90" y2="250" /><text class="profile-label" x="-175" y="19" fill="black" text-anchor="middle" transform="rotate(-90)">Diameter</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="175" y="165" fill="black" text-anchor="start">Origin</text><line class="centres" x1="119" y1="172" x2="125" y2="178" /><line class="centres" x1="125" y1="172" x2="119" y2="178" /><line class="centres" x1="225" y1="172" x2="231" y2="178" /><line class="centres" x1="231" y1="172" x2="225" y2="178" /><line class="profile-line" x1="122" y1="270" x2="228" y2="270" /><line class="profile-line" x1="122" y1="260" x2="122" y2="280" /><line class="profile-line" x1="228" y1="260" x2="228" y2="280" /><text class="profile-label" x="175" y="295" fill="black" text-anchor="middle">Pile centres</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
    .centres {stroke:black;stroke-width:0.5;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.ISecantPileProfile" /> inherits <see cref="T:Oasys.Profiles.IProfile" />.</remarks>
        </member>
        <member name="M:SDK.Oasys.Profiles.IGeneralZProfile.Create(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.IGeneralZProfile" /> profile from its
<see cref="!:Depth" />,
<see cref="!:TopFlangeWidth" />,
<see cref="!:BottomFlangeWidth" />,
<see cref="!:TopLip" />,
<see cref="!:BottomLip" /> and
<see cref="!:Thickness" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="topFlangeWidth">Defines the profile's top flange width.</param>
            <param name="bottomFlangeWidth">Defines the profile's bottom flange width.</param>
            <param name="topLip">Defines the profile's top lip.</param>
            <param name="bottomLip">Defines the profile's bottom lip.</param>
            <param name="thickness">Defines the profile's thickness.</param>
            <exception cref="!:System.ArgumentException">
When any of the dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IGeneralZProfile.SetThickness(System.Double)">
            <summary>The thickness of the generic z section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the thickness is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IGeneralZProfile.GetThickness">
            <summary>The thickness of the generic z section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the thickness is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IGeneralZProfile.SetBottomLip(System.Double)">
            <summary>The bottom lip of the generic z section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the bottom lip is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IGeneralZProfile.GetBottomLip">
            <summary>The bottom lip of the generic z section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the bottom lip is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IGeneralZProfile.SetTopLip(System.Double)">
            <summary>The top lip of the generic z section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the top lip is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IGeneralZProfile.GetTopLip">
            <summary>The top lip of the generic z section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the top lip is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IGeneralZProfile.SetBottomFlangeWidth(System.Double)">
            <summary>The bottom flange width of the generic z section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the bottom flange width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IGeneralZProfile.GetBottomFlangeWidth">
            <summary>The bottom flange width of the generic z section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the bottom flange width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IGeneralZProfile.SetTopFlangeWidth(System.Double)">
            <summary>The top flange width of the generic z section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the top flange width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IGeneralZProfile.GetTopFlangeWidth">
            <summary>The top flange width of the generic z section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the top flange width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IGeneralZProfile.SetDepth(System.Double)">
            <summary>The depth of the generic z section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IGeneralZProfile.GetDepth">
            <summary>The depth of the generic z section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.IGeneralZProfile">
            <summary>A general z section profile.
<center><svg height="350" width="350"><path class="profile-line" d="M50 265 L65 265 L65 285 L135 285 L135 50 L265 50 L265 100 L250 100 L250 65 L150 65 L150 300 L50 300 Z" fill="#8da0cb" /><line class="profile-line" x1="30" y1="265" x2="30" y2="300" /><line class="profile-line" x1="20" y1="265" x2="40" y2="265" /><line class="profile-line" x1="20" y1="300" x2="40" y2="300" /><text class="profile-label" x="-283" y="15" fill="black" text-anchor="middle" transform="rotate(-90)">Bottom Lip</text><line class="profile-line" x1="50" y1="320" x2="150" y2="320" /><line class="profile-line" x1="50" y1="310" x2="50" y2="330" /><line class="profile-line" x1="150" y1="310" x2="150" y2="330" /><text class="profile-label" x="100" y="345" fill="black" text-anchor="middle">Bottom Flange Width</text><line class="profile-line" x1="135" y1="220" x2="160" y2="220" /><text class="profile-label" x="163" y="225" fill="black" text-anchor="start">Thickness</text><line class="profile-line" x1="135" y1="30" x2="265" y2="30" /><line class="profile-line" x1="135" y1="20" x2="135" y2="40" /><line class="profile-line" x1="265" y1="20" x2="265" y2="40" /><text class="profile-label" x="200" y="15" fill="black" text-anchor="middle">Top Flange Width</text><line class="profile-line" x1="285" y1="50" x2="285" y2="100" /><line class="profile-line" x1="275" y1="50" x2="295" y2="50" /><line class="profile-line" x1="275" y1="100" x2="295" y2="100" /><text class="profile-label" x="-75" y="310" fill="black" text-anchor="middle" transform="rotate(-90)">Top Lip</text><line class="profile-line" x1="320" y1="50" x2="320" y2="300" /><line class="profile-line" x1="315" y1="50" x2="330" y2="50" /><line class="profile-line" x1="160" y1="300" x2="330" y2="300" /><text class="profile-label" x="-180" y="340" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><circle class="profile-origin" cx="142" cy="180" r="6" /><text class="profile-label" x="155" y="175" fill="black" text-anchor="start">Origin</text><line class="profile-line" x1="115" y1="50" x2="115" y2="181" /><line class="profile-line" x1="105" y1="181" x2="125" y2="181" /><line class="profile-line" x1="105" y1="50" x2="125" y2="50" /><text class="profile-label" x="-115" y="105" fill="black" text-anchor="middle" transform="rotate(-90)">0.5 × Depth</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.IGeneralZProfile" /> inherits <see cref="T:SDK.Oasys.Profiles.IProfile" />.</remarks>
        </member>
        <member name="M:Oasys.Profiles.IGeneralZProfile.Create(UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.IGeneralZProfile" /> profile from its
<see cref="P:Oasys.Profiles.IGeneralZProfile.Depth" />,
<see cref="P:Oasys.Profiles.IGeneralZProfile.TopFlangeWidth" />,
<see cref="P:Oasys.Profiles.IGeneralZProfile.BottomFlangeWidth" />,
<see cref="P:Oasys.Profiles.IGeneralZProfile.TopLip" />,
<see cref="P:Oasys.Profiles.IGeneralZProfile.BottomLip" /> and
<see cref="P:Oasys.Profiles.IGeneralZProfile.Thickness" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="topFlangeWidth">Defines the profile's top flange width.</param>
            <param name="bottomFlangeWidth">Defines the profile's bottom flange width.</param>
            <param name="topLip">Defines the profile's top lip.</param>
            <param name="bottomLip">Defines the profile's bottom lip.</param>
            <param name="thickness">Defines the profile's thickness.</param>
            <exception cref="!:System.ArgumentException">
When any of the dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IGeneralZProfile.Thickness">
            <summary>The thickness of the generic z section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the thickness is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IGeneralZProfile.BottomLip">
            <summary>The bottom lip of the generic z section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the bottom lip is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IGeneralZProfile.TopLip">
            <summary>The top lip of the generic z section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the top lip is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IGeneralZProfile.BottomFlangeWidth">
            <summary>The bottom flange width of the generic z section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the bottom flange width is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IGeneralZProfile.TopFlangeWidth">
            <summary>The top flange width of the generic z section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the top flange width is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IGeneralZProfile.Depth">
            <summary>The depth of the generic z section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.IGeneralZProfile">
            <summary>A general z section profile.
<center><svg height="350" width="350"><path class="profile-line" d="M50 265 L65 265 L65 285 L135 285 L135 50 L265 50 L265 100 L250 100 L250 65 L150 65 L150 300 L50 300 Z" fill="#8da0cb" /><line class="profile-line" x1="30" y1="265" x2="30" y2="300" /><line class="profile-line" x1="20" y1="265" x2="40" y2="265" /><line class="profile-line" x1="20" y1="300" x2="40" y2="300" /><text class="profile-label" x="-283" y="15" fill="black" text-anchor="middle" transform="rotate(-90)">Bottom Lip</text><line class="profile-line" x1="50" y1="320" x2="150" y2="320" /><line class="profile-line" x1="50" y1="310" x2="50" y2="330" /><line class="profile-line" x1="150" y1="310" x2="150" y2="330" /><text class="profile-label" x="100" y="345" fill="black" text-anchor="middle">Bottom Flange Width</text><line class="profile-line" x1="135" y1="220" x2="160" y2="220" /><text class="profile-label" x="163" y="225" fill="black" text-anchor="start">Thickness</text><line class="profile-line" x1="135" y1="30" x2="265" y2="30" /><line class="profile-line" x1="135" y1="20" x2="135" y2="40" /><line class="profile-line" x1="265" y1="20" x2="265" y2="40" /><text class="profile-label" x="200" y="15" fill="black" text-anchor="middle">Top Flange Width</text><line class="profile-line" x1="285" y1="50" x2="285" y2="100" /><line class="profile-line" x1="275" y1="50" x2="295" y2="50" /><line class="profile-line" x1="275" y1="100" x2="295" y2="100" /><text class="profile-label" x="-75" y="310" fill="black" text-anchor="middle" transform="rotate(-90)">Top Lip</text><line class="profile-line" x1="320" y1="50" x2="320" y2="300" /><line class="profile-line" x1="315" y1="50" x2="330" y2="50" /><line class="profile-line" x1="160" y1="300" x2="330" y2="300" /><text class="profile-label" x="-180" y="340" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><circle class="profile-origin" cx="142" cy="180" r="6" /><text class="profile-label" x="155" y="175" fill="black" text-anchor="start">Origin</text><line class="profile-line" x1="115" y1="50" x2="115" y2="181" /><line class="profile-line" x1="105" y1="181" x2="125" y2="181" /><line class="profile-line" x1="105" y1="50" x2="125" y2="50" /><text class="profile-label" x="-115" y="105" fill="black" text-anchor="middle" transform="rotate(-90)">0.5 × Depth</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.IGeneralZProfile" /> inherits <see cref="T:Oasys.Profiles.IProfile" />.</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IRectangularStressStrainCurve.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint&gt;,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IRectangularStressStrainCurve" />.
</summary>
            <param name="yieldPoint">
The material does not have strength until the yield point.
The stress is constant beyond this point.
</param>
            <param name="failureStrain">The strain beyond which the material fails.</param>
            <exception cref="!:System.ArgumentException">
When the yield strain is larger than the failure strain.
</exception>
            <exception cref="!:System.ArgumentException">
When any of the stress-strain inputs is negative or infinite.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IRectangularStressStrainCurve.GetYieldPoint">
            <summary>The material does not have strength until the
yield point. The stress is constant beyond this point.
</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IRectangularStressStrainCurve">
            <summary>
A type of <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" /> in which the stress
is zero until the yield point. The stress is constant betweeen the yield
point and the failure point.
<center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 100,280 100,100 400,100" class="curve" /><text x="110" y="80" class="text">Yield point</text><circle cX="100" cy="100" r="15" /><line x1="400" y1="100" x2="400" y2="280" stroke-dasharray="4" /><text x="380" y="260" class="text" text-anchor="end">Failure strain</text><circle cX="400" cy="280" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
  </style></svg></center></summary>
            <remarks>Rectanglular curve is commonly used for concrete materials.</remarks>
        </member>
        <member name="M:Oasys.AdSec.Materials.StressStrainCurves.IRectangularStressStrainCurve.Create(Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint,Oasys.Units.Strain)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IRectangularStressStrainCurve" />.
</summary>
            <param name="yieldPoint">
The material does not have strength until the yield point.
The stress is constant beyond this point.
</param>
            <param name="failureStrain">The strain beyond which the material fails.</param>
            <exception cref="!:System.ArgumentException">
When the yield strain is larger than the failure strain.
</exception>
            <exception cref="!:System.ArgumentException">
When any of the stress-strain inputs is negative or infinite.
</exception>
            <exception cref="!:System.ArgumentNullException">If yieldPoint is null</exception>
        </member>
        <member name="P:Oasys.AdSec.Materials.StressStrainCurves.IRectangularStressStrainCurve.YieldPoint">
            <summary>The material does not have strength until the
yield point. The stress is constant beyond this point.
</summary>
            <exception cref="!:System.ArgumentNullException">If YieldPoint is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.Materials.StressStrainCurves.IRectangularStressStrainCurve">
            <summary>
A type of <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" /> in which the stress
is zero until the yield point. The stress is constant betweeen the yield
point and the failure point.
<center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 100,280 100,100 400,100" class="curve" /><text x="110" y="80" class="text">Yield point</text><circle cX="100" cy="100" r="15" /><line x1="400" y1="100" x2="400" y2="280" stroke-dasharray="4" /><text x="380" y="260" class="text" text-anchor="end">Failure strain</text><circle cX="400" cy="280" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
  </style></svg></center></summary>
            <remarks>Rectanglular curve is commonly used for concrete materials.</remarks>
        </member>
        <member name="T:SDK.Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.CY">
            <summary>Eurocode 2 (part 1) using Cyprus' National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.SG">
            <summary>Eurocode 2 (part 1) using Singapore's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.PL">
            <summary>Eurocode 2 (part 1) using Poland's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.NO">
            <summary>Eurocode 2 (part 1) using Norway's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.NL">
            <summary>Eurocode 2 (part 1) using Netherlands' National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.IT">
            <summary>Eurocode 2 (part 1) using Italy's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.IE">
            <summary>Eurocode 2 (part 1) using Ireland's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.GB">
            <summary>Eurocode 2 (part 1) using UK's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.FR">
            <summary>Eurocode 2 (part 1) using France's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.FI">
            <summary>Eurocode 2 (part 1) using Finland's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.ES">
            <summary>Eurocode 2 (part 1) using Spain's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.DK">
            <summary>Eurocode 2 (part 1) using Denmark's National Annex</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.DE">
            <summary>Eurocode 2 (part 1) using Germany's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.CY">
            <summary>Eurocode 2 (part 1) using Cyprus' National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.SG">
            <summary>Eurocode 2 (part 1) using Singapore's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.PL">
            <summary>Eurocode 2 (part 1) using Poland's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.NO">
            <summary>Eurocode 2 (part 1) using Norway's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.NL">
            <summary>Eurocode 2 (part 1) using Netherlands' National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.IT">
            <summary>Eurocode 2 (part 1) using Italy's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.IE">
            <summary>Eurocode 2 (part 1) using Ireland's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.GB">
            <summary>Eurocode 2 (part 1) using UK's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.FR">
            <summary>Eurocode 2 (part 1) using France's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.FI">
            <summary>Eurocode 2 (part 1) using Finland's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.ES">
            <summary>Eurocode 2 (part 1) using Spain's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.DK">
            <summary>Eurocode 2 (part 1) using Denmark's National Annex</summary>
        </member>
        <member name="T:Oasys.AdSec.StandardMaterials.Concrete.EN1992.Part1_1.Edition_2004.NationalAnnex.DE">
            <summary>Eurocode 2 (part 1) using Germany's National Annex</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IExplicitStressStrainCurve.Create">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IExplicitStressStrainCurve" />.
</summary>
            <returns>Explicit curve with empty list of stress-strain points (<see cref="!:Points" />).</returns>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IExplicitStressStrainCurve.SetPoints(std.shared_ptr&lt;SDK.Oasys.Collections.IList&gt;)">
            <summary>The stress-strain points.
</summary>
            <exception cref="!:System.ArgumentException">
When the first point in the stress-strain points list is not a zero stress and zero strain point.
</exception>
            <exception cref="!:System.ArgumentException">
When the points in the stress-strain points list are not in the ascending order of the strains.
</exception>
            <exception cref="!:System.ArgumentException">
When the stress-strain points list has fewer than two points.
</exception>
            <exception cref="!:System.ArgumentException">
When any of the stress-strain inputs is negative or infinite.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IExplicitStressStrainCurve.GetPoints">
            <summary>The stress-strain points.
</summary>
            <exception cref="!:System.ArgumentException">
When the first point in the stress-strain points list is not a zero stress and zero strain point.
</exception>
            <exception cref="!:System.ArgumentException">
When the points in the stress-strain points list are not in the ascending order of the strains.
</exception>
            <exception cref="!:System.ArgumentException">
When the stress-strain points list has fewer than two points.
</exception>
            <exception cref="!:System.ArgumentException">
When any of the stress-strain inputs is negative or infinite.
</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IExplicitStressStrainCurve">
            <summary>
A type of <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" /> defined by a list of
<see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint" />s.
<para>See <see href="~/articles/glossary.md#explicit-stress-strain-curveexplicit-stress-strain-curve">Glossary</see></para><center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 70,150 170,100 320,100" class="curve" /><line x1="320" y1="100" x2="400" y2="60" stroke-dasharray="4" class="curve" /><text x="40" y="260" class="text">(x1, y1)</text><text x="45" y="125" class="text">(x2, y2)</text><text x="150" y="75" class="text">(x3, y3)</text><text x="300" y="75" class="text">(x4, y4)</text><text x="380" y="35" class="text">(x, y)</text><circle cX="20" cy="280" r="15" /><circle cX="70" cy="150" r="15" /><circle cX="170" cy="100" r="15" /><circle cX="320" cy="100" r="15" /><circle cX="400" cy="60" r="15" /><style>
  .text { font: 14px sans-serif; }
  .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
  line {stroke:#666;}
  circle {stroke:black; stroke-width:1; fill:none;}
</style></svg></center></summary>
            <example>
# [C#](#tab/tabid-1)
<code source="../../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/IExplicitCurve.cs" region="Usings" lang="csharp" /><code source="../../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/IExplicitCurve.cs" region="Snippet" lang="csharp" /><para>Example creating a material with explicit curves.</para>
# [Python](#tab/tabid-2)
<code source="../../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/IExplicitCurve.py" region="Imports" lang="python" /><code source="../../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/IExplicitCurve.py" region="Snippet" lang="python" /><para>Example creating a material with explicit curves.</para>
***
</example>
        </member>
        <member name="M:Oasys.AdSec.Materials.StressStrainCurves.IExplicitStressStrainCurve.Create">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IExplicitStressStrainCurve" />.
</summary>
            <returns>Explicit curve with empty list of stress-strain points (<see cref="P:Oasys.AdSec.Materials.StressStrainCurves.IExplicitStressStrainCurve.Points" />).</returns>
        </member>
        <member name="P:Oasys.AdSec.Materials.StressStrainCurves.IExplicitStressStrainCurve.Points">
            <summary>The stress-strain points.
</summary>
            <exception cref="!:System.ArgumentException">
When the first point in the stress-strain points list is not a zero stress and zero strain point.
</exception>
            <exception cref="!:System.ArgumentException">
When the points in the stress-strain points list are not in the ascending order of the strains.
</exception>
            <exception cref="!:System.ArgumentException">
When the stress-strain points list has fewer than two points.
</exception>
            <exception cref="!:System.ArgumentException">
When any of the stress-strain inputs is negative or infinite.
</exception>
            <exception cref="!:System.ArgumentNullException">If Points is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.Materials.StressStrainCurves.IExplicitStressStrainCurve">
            <summary>
A type of <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" /> defined by a list of
<see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint" />s.
<para>See <see href="~/articles/glossary.md#explicit-stress-strain-curveexplicit-stress-strain-curve">Glossary</see></para><center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 70,150 170,100 320,100" class="curve" /><line x1="320" y1="100" x2="400" y2="60" stroke-dasharray="4" class="curve" /><text x="40" y="260" class="text">(x1, y1)</text><text x="45" y="125" class="text">(x2, y2)</text><text x="150" y="75" class="text">(x3, y3)</text><text x="300" y="75" class="text">(x4, y4)</text><text x="380" y="35" class="text">(x, y)</text><circle cX="20" cy="280" r="15" /><circle cX="70" cy="150" r="15" /><circle cX="170" cy="100" r="15" /><circle cX="320" cy="100" r="15" /><circle cX="400" cy="60" r="15" /><style>
  .text { font: 14px sans-serif; }
  .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
  line {stroke:#666;}
  circle {stroke:black; stroke-width:1; fill:none;}
</style></svg></center></summary>
            <example>
# [C#](#tab/tabid-1)
<code source="../../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/IExplicitCurve.cs" region="Usings" lang="csharp" /><code source="../../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/IExplicitCurve.cs" region="Snippet" lang="csharp" /><para>Example creating a material with explicit curves.</para>
# [Python](#tab/tabid-2)
<code source="../../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/IExplicitCurve.py" region="Imports" lang="python" /><code source="../../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/IExplicitCurve.py" region="Snippet" lang="python" /><para>Example creating a material with explicit curves.</para>
***
</example>
        </member>
        <member name="M:SDK.Oasys.Profiles.ICircleHollowProfile.Create(System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.ICircleHollowProfile" /> profile from its
<see cref="!:Diameter" /> and
<see cref="!:WallThickness" />.
</summary>
            <param name="diameter">Defines the profile's diameter.</param>
            <param name="wallThickness">Defines the profile's wall thickness.</param>
            <returns>Hollow circle profile with the specified dimensions.</returns>
            <exception cref="!:System.ArgumentException">
When any of its dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ICircleHollowProfile.SetWallThickness(System.Double)">
            <summary>The wall thickness of the hollow circle.
</summary>
            <exception cref="!:System.ArgumentException">
When the wall thickness is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ICircleHollowProfile.GetWallThickness">
            <summary>The wall thickness of the hollow circle.
</summary>
            <exception cref="!:System.ArgumentException">
When the wall thickness is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ICircleHollowProfile.SetDiameter(System.Double)">
            <summary>The diameter of the hollow circle.
</summary>
            <exception cref="!:System.ArgumentException">
When the diameter is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ICircleHollowProfile.GetDiameter">
            <summary>The diameter of the hollow circle.
</summary>
            <exception cref="!:System.ArgumentException">
When the diameter is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.ICircleHollowProfile">
            <summary>Defines a hollow circular section profile from
<see cref="!:Diameter" /> and
<see cref="!:WallThickness" />.<br /><center><svg height="350" width="350"><circle class="profile-line" cx="175" cy="175" r="100" fill="#8da0cb" /><circle class="profile-line" cx="175" cy="175" r="80" fill="white" /><line class="profile-line" x1="60" y1="75" x2="60" y2="275" /><line class="profile-line" x1="50" y1="75" x2="140" y2="75" /><line class="profile-line" x1="50" y1="275" x2="140" y2="275" /><text class="profile-label" x="-175" y="50" fill="black" text-anchor="middle" transform="rotate(-90)">Diameter</text><line class="profile-line" x1="175" y1="255" x2="175" y2="295" /><text class="profile-label" x="175" y="310" fill="black" text-anchor="middle">Wall Thickness</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="175" y="165" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.ICircleHollowProfile" /> inherits <see cref="T:SDK.Oasys.Profiles.IProfile" />.
<para>The hollow circle is centered at the origin of its local coordinate system.</para></remarks>
        </member>
        <member name="M:Oasys.Profiles.ICircleHollowProfile.Create(UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.ICircleHollowProfile" /> profile from its
<see cref="P:Oasys.Profiles.ICircleHollowProfile.Diameter" /> and
<see cref="P:Oasys.Profiles.ICircleHollowProfile.WallThickness" />.
</summary>
            <param name="diameter">Defines the profile's diameter.</param>
            <param name="wallThickness">Defines the profile's wall thickness.</param>
            <returns>Hollow circle profile with the specified dimensions.</returns>
            <exception cref="!:System.ArgumentException">
When any of its dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.ICircleHollowProfile.WallThickness">
            <summary>The wall thickness of the hollow circle.
</summary>
            <exception cref="!:System.ArgumentException">
When the wall thickness is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.ICircleHollowProfile.Diameter">
            <summary>The diameter of the hollow circle.
</summary>
            <exception cref="!:System.ArgumentException">
When the diameter is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.ICircleHollowProfile">
            <summary>Defines a hollow circular section profile from
<see cref="P:Oasys.Profiles.ICircleHollowProfile.Diameter" /> and
<see cref="P:Oasys.Profiles.ICircleHollowProfile.WallThickness" />.<br /><center><svg height="350" width="350"><circle class="profile-line" cx="175" cy="175" r="100" fill="#8da0cb" /><circle class="profile-line" cx="175" cy="175" r="80" fill="white" /><line class="profile-line" x1="60" y1="75" x2="60" y2="275" /><line class="profile-line" x1="50" y1="75" x2="140" y2="75" /><line class="profile-line" x1="50" y1="275" x2="140" y2="275" /><text class="profile-label" x="-175" y="50" fill="black" text-anchor="middle" transform="rotate(-90)">Diameter</text><line class="profile-line" x1="175" y1="255" x2="175" y2="295" /><text class="profile-label" x="175" y="310" fill="black" text-anchor="middle">Wall Thickness</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="175" y="165" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.ICircleHollowProfile" /> inherits <see cref="T:Oasys.Profiles.IProfile" />.
<para>The hollow circle is centered at the origin of its local coordinate system.</para></remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.AASHTO.Edition_2017.US">
            <summary>The 2017 (US units) edition of AASHTO</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.AASHTO.Edition_2017.Metric">
            <summary>The 2017 (metric units) edition of AASHTO</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.AASHTO.Edition_2017.US">
            <summary>The 2017 (US units) edition of AASHTO</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.AASHTO.Edition_2017.Metric">
            <summary>The 2017 (metric units) edition of AASHTO</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Preloads.IPreStress.Create(System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.Preloads.IPreStress" /> preload from <see cref="!:Stress" />.
</summary>
            <param name="stress">The pre-stress in the reinforcement bars.<br />
Positive stress indicates tension.
</param>
            <returns>Stress preload with the specified stress.</returns>
            <exception cref="!:System.ArgumentException">
When the stress is not a finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Preloads.IPreStress.SetStress(System.Double)">
            <summary>The pre-stress in reinforcement bar.<br />
Positive stress indicates tension.
</summary>
            <exception cref="!:System.ArgumentException">
When the stress is not a finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Preloads.IPreStress.GetStress">
            <summary>The pre-stress in reinforcement bar.<br />
Positive stress indicates tension.
</summary>
            <exception cref="!:System.ArgumentException">
When the stress is not a finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.Preloads.IPreStress">
            <summary>A preload of type stress.</summary>
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.Preloads.IPreStress.Create(UnitsNet.Pressure)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.Preloads.IPreStress" /> preload from <see cref="P:Oasys.AdSec.Reinforcement.Preloads.IPreStress.Stress" />.
</summary>
            <param name="stress">The pre-stress in the reinforcement bars.<br />
Positive stress indicates tension.
</param>
            <returns>Stress preload with the specified stress.</returns>
            <exception cref="!:System.ArgumentException">
When the stress is not a finite value.
</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.Preloads.IPreStress.Stress">
            <summary>The pre-stress in reinforcement bar.<br />
Positive stress indicates tension.
</summary>
            <exception cref="!:System.ArgumentException">
When the stress is not a finite value.
</exception>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.Preloads.IPreStress">
            <summary>A preload of type stress.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.ICatalogueProfile.Create(std.basic_string&lt;System.Char,std.char_traits{System.Char},std.allocator&lt;System.Char&gt;&gt;)">
            <summary>
Creates a new <see cref="T:SDK.Oasys.Profiles.ICatalogueProfile" /> profile from its unique string description.
Valid strings can be found using the section profile helper dialog within the AdSec application.
</summary>
            <param name="description">The profile's description.</param>
            <returns>A catalogue section profile with the specified description.</returns>
            <exception cref="!:System.ArgumentException">
When the description string is invalid.
</exception>
            <example>
# [C#](#tab/tabid-1)
<code source="../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ICatalogue.cs" region="Usings" lang="csharp" /><code source="../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ICatalogue.cs" region="Snippet" lang="csharp" /><para>Creates a catalogue section profile from a valid description.</para>
# [Python](#tab/tabid-2)
<code source="../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ICatalogue.py" region="Imports" lang="python" /><code source="../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ICatalogue.py" region="Snippet" lang="python" /><para>Creates a catalogue section profile from a valid description.</para>
***
</example>
        </member>
        <member name="T:SDK.Oasys.Profiles.ICatalogueProfile">
            <summary>
Defines a catalogue section profile from its unique string identifier.
<para>
See <see href="~/articles/glossary.md#catalogue-profilecatalogue-profile">Glossary</see></para></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.ICatalogueProfile" /> inherits <see cref="T:SDK.Oasys.Profiles.IProfile" />.</remarks>
        </member>
        <member name="M:Oasys.Profiles.ICatalogueProfile.Create(System.String)">
            <summary>
Creates a new <see cref="T:Oasys.Profiles.ICatalogueProfile" /> profile from its unique string description.
Valid strings can be found using the section profile helper dialog within the AdSec application.
</summary>
            <param name="description">The profile's description.</param>
            <returns>A catalogue section profile with the specified description.</returns>
            <exception cref="!:System.ArgumentException">
When the description string is invalid.
</exception>
            <example>
# [C#](#tab/tabid-1)
<code source="../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ICatalogue.cs" region="Usings" lang="csharp" /><code source="../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ICatalogue.cs" region="Snippet" lang="csharp" /><para>Creates a catalogue section profile from a valid description.</para>
# [Python](#tab/tabid-2)
<code source="../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ICatalogue.py" region="Imports" lang="python" /><code source="../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ICatalogue.py" region="Snippet" lang="python" /><para>Creates a catalogue section profile from a valid description.</para>
***
</example>
            <exception cref="!:System.ArgumentNullException">If description is null</exception>
        </member>
        <member name="T:Oasys.Profiles.ICatalogueProfile">
            <summary>
Defines a catalogue section profile from its unique string identifier.
<para>
See <see href="~/articles/glossary.md#catalogue-profilecatalogue-profile">Glossary</see></para></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.ICatalogueProfile" /> inherits <see cref="T:Oasys.Profiles.IProfile" />.</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IManderStressStrainCurve.Create(System.Double,std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint&gt;,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IManderStressStrainCurve" /> stress-strain curve.
</summary>
            <param name="initialModulus">The initial gradient of the stress-strain curve.</param>
            <param name="peakPoint">The point of maximum stress.</param>
            <param name="failureStrain">The strain beyond which the material fails.</param>
            <exception cref="!:System.ArgumentException">
When the failure strain is smaller than twice the peak strain.
</exception>
            <exception cref="!:System.ArgumentException">
When the initial gradient is not a positive and finite value.
</exception>
            <exception cref="!:System.ArgumentException">
When any of the stress-strain inputs is negative or infinite.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IManderStressStrainCurve.GetPeakPoint">
            <summary>The point of maximum stress.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IManderStressStrainCurve.GetInitialModulus">
            <summary>The initial gradient of the stress-strain curve.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IManderStressStrainCurve">
            <summary>
A type of <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" /> for an unconfined concrete <see cref="!:IMaterial" />.
Refer 'Mander J.B., Priestley M.J.N., and Park R. (1988). â€œTheoretical
Stress-Strain Model for Confined Concreteâ€, ASCE Journal of Structural
Engineering, V. 114, No. 8, pp. 1804-1826' for further details.
<center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 40.9,221 49,200 60.5,172 75.5,140 79.5,132 90,115 100,101 108,90 120,78 130,70 140,65 145,63.5 150,62.5 155,62 160,61.5 170,62 185,65 200,69.5 220,78 240,88.5 260,101.5 300,132" class="curve" /><polyline points="300,132 400,280" class="curve" stroke-dasharray="4" /><text x="170" y="40" class="text">Peak point</text><circle cX="160" cy="61.5" r="15" /><text x="490" y="260" class="text" text-anchor="end">Failure strain</text><circle cX="400" cy="280" r="15" /><line x1="20" y1="280" x2="60" y2="131" stroke-dasharray="4" /><text x="-150" y="125" class="text" transform="rotate(287)" text-anchor="end">Initial modulus</text><text x="394" y="125" class="text" text-anchor="end">2 x Peak strain</text><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
  </style></svg></center></summary>
            <remarks>Mander curve is commonly used for concrete materials.
If the failure strain is less than two times the peak strain,
the curve doesn't reach the zero stress point and it ends at
the failure strain.
</remarks>
        </member>
        <member name="M:Oasys.AdSec.Materials.StressStrainCurves.IManderStressStrainCurve.Create(UnitsNet.Pressure,Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint,Oasys.Units.Strain)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IManderStressStrainCurve" /> stress-strain curve.
</summary>
            <param name="initialModulus">The initial gradient of the stress-strain curve.</param>
            <param name="peakPoint">The point of maximum stress.</param>
            <param name="failureStrain">The strain beyond which the material fails.</param>
            <exception cref="!:System.ArgumentException">
When the failure strain is smaller than twice the peak strain.
</exception>
            <exception cref="!:System.ArgumentException">
When the initial gradient is not a positive and finite value.
</exception>
            <exception cref="!:System.ArgumentException">
When any of the stress-strain inputs is negative or infinite.
</exception>
            <exception cref="!:System.ArgumentNullException">If peakPoint is null</exception>
        </member>
        <member name="P:Oasys.AdSec.Materials.StressStrainCurves.IManderStressStrainCurve.PeakPoint">
            <summary>The point of maximum stress.</summary>
            <exception cref="!:System.ArgumentNullException">If PeakPoint is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.Materials.StressStrainCurves.IManderStressStrainCurve.InitialModulus">
            <summary>The initial gradient of the stress-strain curve.</summary>
        </member>
        <member name="T:Oasys.AdSec.Materials.StressStrainCurves.IManderStressStrainCurve">
            <summary>
A type of <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" /> for an unconfined concrete <see cref="!:IMaterial" />.
Refer 'Mander J.B., Priestley M.J.N., and Park R. (1988). â€œTheoretical
Stress-Strain Model for Confined Concreteâ€, ASCE Journal of Structural
Engineering, V. 114, No. 8, pp. 1804-1826' for further details.
<center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 40.9,221 49,200 60.5,172 75.5,140 79.5,132 90,115 100,101 108,90 120,78 130,70 140,65 145,63.5 150,62.5 155,62 160,61.5 170,62 185,65 200,69.5 220,78 240,88.5 260,101.5 300,132" class="curve" /><polyline points="300,132 400,280" class="curve" stroke-dasharray="4" /><text x="170" y="40" class="text">Peak point</text><circle cX="160" cy="61.5" r="15" /><text x="490" y="260" class="text" text-anchor="end">Failure strain</text><circle cX="400" cy="280" r="15" /><line x1="20" y1="280" x2="60" y2="131" stroke-dasharray="4" /><text x="-150" y="125" class="text" transform="rotate(287)" text-anchor="end">Initial modulus</text><text x="394" y="125" class="text" text-anchor="end">2 x Peak strain</text><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
  </style></svg></center></summary>
            <remarks>Mander curve is commonly used for concrete materials.
If the failure strain is less than two times the peak strain,
the curve doesn't reach the zero stress point and it ends at
the failure strain.
</remarks>
        </member>
        <member name="M:SDK.Oasys.Profiles.ICircleProfile.Create(System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.ICircleProfile" /> profile from its <see cref="!:Diameter" />.
</summary>
            <param name="diameter">Defines the profile's diameter.</param>
            <returns>Circle profile with the specified diameter.</returns>
            <exception cref="!:System.ArgumentException">
When the diameter is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ICircleProfile.SetDiameter(System.Double)">
            <summary>The diameter of the circle.
</summary>
            <exception cref="!:System.ArgumentException">
When the diameter is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ICircleProfile.GetDiameter">
            <summary>The diameter of the circle.
</summary>
            <exception cref="!:System.ArgumentException">
When the diameter is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.ICircleProfile">
            <summary>Defines a circular section profile from <see cref="!:Diameter" />.<br /><center><svg height="350" width="350"><circle class="profile-line" cx="175" cy="175" r="100" fill="#8da0cb" /><line class="profile-line" x1="60" y1="75" x2="60" y2="275" /><line class="profile-line" x1="50" y1="75" x2="140" y2="75" /><line class="profile-line" x1="50" y1="275" x2="140" y2="275" /><text class="profile-label" x="-175" y="50" fill="black" text-anchor="middle" transform="rotate(-90)">Diameter</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="175" y="165" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.ICircleProfile" /> inherits <see cref="T:SDK.Oasys.Profiles.IProfile" />.
<para>The circle is centered at the origin of its local coordinate system.</para></remarks>
            <example>
# [C#](#tab/tabid-1)
<code source="../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ICircle.cs" region="Usings" lang="csharp" /><code source="../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ICircle.cs" region="Snippet" lang="csharp" /><para>Example creating a circular profile.</para>
# [Python](#tab/tabid-2)
<code source="../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ICircle.py" region="Imports" lang="python" /><code source="../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ICircle.py" region="Snippet" lang="python" /><para>Example creating a circular profile.</para>
***
</example>
            <seealso cref="!:Oasys.Profiles.IProfile" />
            <seealso cref="!:Oasys.AdSec.ISection" />
        </member>
        <member name="M:Oasys.Profiles.ICircleProfile.Create(UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.ICircleProfile" /> profile from its <see cref="P:Oasys.Profiles.ICircleProfile.Diameter" />.
</summary>
            <param name="diameter">Defines the profile's diameter.</param>
            <returns>Circle profile with the specified diameter.</returns>
            <exception cref="!:System.ArgumentException">
When the diameter is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.ICircleProfile.Diameter">
            <summary>The diameter of the circle.
</summary>
            <exception cref="!:System.ArgumentException">
When the diameter is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.ICircleProfile">
            <summary>Defines a circular section profile from <see cref="P:Oasys.Profiles.ICircleProfile.Diameter" />.<br /><center><svg height="350" width="350"><circle class="profile-line" cx="175" cy="175" r="100" fill="#8da0cb" /><line class="profile-line" x1="60" y1="75" x2="60" y2="275" /><line class="profile-line" x1="50" y1="75" x2="140" y2="75" /><line class="profile-line" x1="50" y1="275" x2="140" y2="275" /><text class="profile-label" x="-175" y="50" fill="black" text-anchor="middle" transform="rotate(-90)">Diameter</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="175" y="165" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.ICircleProfile" /> inherits <see cref="T:Oasys.Profiles.IProfile" />.
<para>The circle is centered at the origin of its local coordinate system.</para></remarks>
            <example>
# [C#](#tab/tabid-1)
<code source="../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ICircle.cs" region="Usings" lang="csharp" /><code source="../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ICircle.cs" region="Snippet" lang="csharp" /><para>Example creating a circular profile.</para>
# [Python](#tab/tabid-2)
<code source="../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ICircle.py" region="Imports" lang="python" /><code source="../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ICircle.py" region="Snippet" lang="python" /><para>Example creating a circular profile.</para>
***
</example>
            <seealso cref="!:Oasys.Profiles.IProfile" />
            <seealso cref="!:Oasys.AdSec.ISection" />
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.IConcreteCrackCalculationParameters.Create(System.Double,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Materials.IConcreteCrackCalculationParameters" /> from
<see cref="!:ElasticModulus" />,
<see cref="!:CharacteristicCompressiveStrength" /> and
<see cref="!:CharacteristicTensileStrength" />.
<param name="elasticModulus">Elastic modulus.</param><param name="characteristicCompressiveStrength">Characteristic compressive strength.</param><param name="characteristicTensileStrength">Characteristic tensile strength.</param></summary>
            <exception cref="!:System.ArgumentException">
When the elastic modulus is not a positive and finite value.
</exception>
            <exception cref="!:System.ArgumentException">
When the characteristic compressive strength is not a negative and finite value.
</exception>
            <exception cref="!:System.ArgumentException">
When the characteristic tensile strength is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.IConcreteCrackCalculationParameters.GetCharacteristicTensileStrength">
            <summary>Characteristic tensile strength.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.IConcreteCrackCalculationParameters.GetCharacteristicCompressiveStrength">
            <summary>Characteristic compressive strength.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.IConcreteCrackCalculationParameters.GetElasticModulus">
            <summary>Elastic modulus.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.IConcreteCrackCalculationParameters">
            <summary>
The material parameters used in crack calculations to the current design code.
In some instances these may be different to the material's stress-strain curves.
</summary>
            <seealso cref="!:Oasys.AdSec.IServiceabilityResult.CrackingUtilisation" />
            <seealso cref="!:Oasys.AdSec.IServiceabilityResult.Cracks" />
            <seealso cref="!:Oasys.AdSec.IServiceabilityResult.MaximumWidthCrack" />
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.IConcrete.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve&gt;,std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve&gt;,std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.IConcreteCrackCalculationParameters&gt;)">
            <summary>
Creates a new concrete material from its strength (ULS),
serviceability (SLS) stress-strain relationship and
material parameters required for crack calculations.
</summary>
            <param name="strength">The material's stress-strain relationship for strength (ULS) analysis.</param>
            <param name="serviceability">The material's stress-strain relationship for serviceability (SLS) analysis.</param>
            <param name="concreteCrackCalculationParameters">The material parameters required for crack calculations.</param>
            <returns>A new concrete material with the given sterss-strain relationships.</returns>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.IConcrete.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve&gt;,std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve&gt;)">
            <summary>
Creates a new concrete material from its strength (ULS) and
serviceability (SLS) stress-strain relationship.
</summary>
            <param name="strength">The material's stress-strain relationship for strength (ULS) analysis.</param>
            <param name="serviceability">The material's stress-strain relationship for serviceability (SLS) analysis.</param>
            <returns>A new concrete material with the given sterss-strain relationships.</returns>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.IConcrete.GetConcreteCrackCalculationParameters">
            <summary>The material parameters used in crack calculations.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.IConcrete">
            <summary>
A concrete material, defined by its stress-strain relationships for both strength and serviceability analysis.
<para>For pre-defined standard concrete materials, see <see cref="!:Oasys.AdSec.StandardMaterials" /></para></summary>
            <seealso cref="T:SDK.Oasys.AdSec.Materials.IMaterial" />
            <seealso cref="!:StressStrainCurves.ITensionCompressionCurve" />
        </member>
        <member name="M:Oasys.AdSec.Materials.IConcreteCrackCalculationParameters.Create(UnitsNet.Pressure,UnitsNet.Pressure,UnitsNet.Pressure)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Materials.IConcreteCrackCalculationParameters" /> from
<see cref="P:Oasys.AdSec.Materials.IConcreteCrackCalculationParameters.ElasticModulus" />,
<see cref="P:Oasys.AdSec.Materials.IConcreteCrackCalculationParameters.CharacteristicCompressiveStrength" /> and
<see cref="P:Oasys.AdSec.Materials.IConcreteCrackCalculationParameters.CharacteristicTensileStrength" />.
<param name="elasticModulus">Elastic modulus.</param><param name="characteristicCompressiveStrength">Characteristic compressive strength.</param><param name="characteristicTensileStrength">Characteristic tensile strength.</param></summary>
            <exception cref="!:System.ArgumentException">
When the elastic modulus is not a positive and finite value.
</exception>
            <exception cref="!:System.ArgumentException">
When the characteristic compressive strength is not a negative and finite value.
</exception>
            <exception cref="!:System.ArgumentException">
When the characteristic tensile strength is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.AdSec.Materials.IConcreteCrackCalculationParameters.CharacteristicTensileStrength">
            <summary>Characteristic tensile strength.</summary>
        </member>
        <member name="P:Oasys.AdSec.Materials.IConcreteCrackCalculationParameters.CharacteristicCompressiveStrength">
            <summary>Characteristic compressive strength.</summary>
        </member>
        <member name="P:Oasys.AdSec.Materials.IConcreteCrackCalculationParameters.ElasticModulus">
            <summary>Elastic modulus.</summary>
        </member>
        <member name="T:Oasys.AdSec.Materials.IConcreteCrackCalculationParameters">
            <summary>
The material parameters used in crack calculations to the current design code.
In some instances these may be different to the material's stress-strain curves.
</summary>
            <seealso cref="!:Oasys.AdSec.IServiceabilityResult.CrackingUtilisation" />
            <seealso cref="!:Oasys.AdSec.IServiceabilityResult.Cracks" />
            <seealso cref="!:Oasys.AdSec.IServiceabilityResult.MaximumWidthCrack" />
        </member>
        <member name="M:Oasys.AdSec.Materials.IConcrete.Create(Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve,Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve,Oasys.AdSec.Materials.IConcreteCrackCalculationParameters)">
            <summary>
Creates a new concrete material from its strength (ULS),
serviceability (SLS) stress-strain relationship and
material parameters required for crack calculations.
</summary>
            <param name="strength">The material's stress-strain relationship for strength (ULS) analysis.</param>
            <param name="serviceability">The material's stress-strain relationship for serviceability (SLS) analysis.</param>
            <param name="concreteCrackCalculationParameters">The material parameters required for crack calculations.</param>
            <returns>A new concrete material with the given sterss-strain relationships.</returns>
            <exception cref="!:System.ArgumentNullException">If strength is null</exception>
            <exception cref="!:System.ArgumentNullException">If serviceability is null</exception>
            <exception cref="!:System.ArgumentNullException">If concreteCrackCalculationParameters is null</exception>
        </member>
        <member name="M:Oasys.AdSec.Materials.IConcrete.Create(Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve,Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve)">
            <summary>
Creates a new concrete material from its strength (ULS) and
serviceability (SLS) stress-strain relationship.
</summary>
            <param name="strength">The material's stress-strain relationship for strength (ULS) analysis.</param>
            <param name="serviceability">The material's stress-strain relationship for serviceability (SLS) analysis.</param>
            <returns>A new concrete material with the given sterss-strain relationships.</returns>
            <exception cref="!:System.ArgumentNullException">If strength is null</exception>
            <exception cref="!:System.ArgumentNullException">If serviceability is null</exception>
        </member>
        <member name="P:Oasys.AdSec.Materials.IConcrete.ConcreteCrackCalculationParameters">
            <summary>The material parameters used in crack calculations.</summary>
        </member>
        <member name="T:Oasys.AdSec.Materials.IConcrete">
            <summary>
A concrete material, defined by its stress-strain relationships for both strength and serviceability analysis.
<para>For pre-defined standard concrete materials, see <see cref="!:Oasys.AdSec.StandardMaterials" /></para></summary>
            <seealso cref="T:Oasys.AdSec.Materials.IMaterial" />
            <seealso cref="!:StressStrainCurves.ITensionCompressionCurve" />
        </member>
        <member name="M:SDK.Oasys.Profiles.ICruciformSymmetricalProfile.Create(System.Double,std.shared_ptr&lt;SDK.Oasys.Profiles.IFlange&gt;,std.shared_ptr&lt;SDK.Oasys.Profiles.IWebConstant&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.ICruciformSymmetricalProfile" /> profile from its
<see cref="!:Depth" />,
<see cref="!:Flange" /> and
<see cref="!:Web" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="flange">Defines the profile's flange (the y axis leg of the cruciform).</param>
            <param name="web">Defines the profile's web (z axis leg thickness of the cruciform).</param>
            <returns>Cruciform profile with the specified dimensions.</returns>
            <exception cref="!:System.ArgumentException">
When any of the dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ICruciformSymmetricalProfile.SetWeb(std.shared_ptr&lt;SDK.Oasys.Profiles.IWebConstant&gt;)">
            <summary>The web (z axis leg) thickness of the cruciform.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.ICruciformSymmetricalProfile.GetWeb">
            <summary>The web (z axis leg) thickness of the cruciform.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.ICruciformSymmetricalProfile.SetFlange(std.shared_ptr&lt;SDK.Oasys.Profiles.IFlange&gt;)">
            <summary>The flange (y axis leg) of the cruciform.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.ICruciformSymmetricalProfile.GetFlange">
            <summary>The flange (y axis leg) of the cruciform.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.ICruciformSymmetricalProfile.SetDepth(System.Double)">
            <summary>The depth of the profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ICruciformSymmetricalProfile.GetDepth">
            <summary>The depth of the profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.ICruciformSymmetricalProfile">
            <summary>A cruciform section profile.
<center><svg height="350" width="350"><rect x="160" y="50" width="30" height="250" fill="#fc8d62" /><rect x="75" y="150" width="200" height="50" fill="#8da0cb" /><path class="profile-outline" d="M160 50 L190 50 L190 150 L275 150 L275 200 L190 200 L190 300 L160 300 L160 200 L75 200 L75 150 L160 150 Z" /><rect class="profile-line" x="160" y="150" width="30" height="50" fill="#fc8d62" fill-opacity="0.3" stroke-dasharray="4" /><circle cx="240" cy="175" r="4" fill="black" /><line class="profile-line" x1="240" y1="175" x2="240" y2="230" /><text class="profile-label" x="240" y="245" fill="black" text-anchor="middle">Flange</text><circle cx="175" cy="100" r="4" fill="black" /><line class="profile-line" x1="175" y1="100" x2="220" y2="100" /><text class="profile-label" x="230" y="105" fill="black">Web</text><line class="profile-line" x1="55" y1="50" x2="55" y2="300" /><line class="profile-line" x1="45" y1="50" x2="150" y2="50" /><line class="profile-line" x1="45" y1="300" x2="150" y2="300" /><text class="profile-label" x="-175" y="45" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="155" y="175" fill="black" text-anchor="end">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.ICruciformSymmetricalProfile" /> inherits <see cref="T:SDK.Oasys.Profiles.IProfile" />.</remarks>
        </member>
        <member name="M:Oasys.Profiles.ICruciformSymmetricalProfile.Create(UnitsNet.Length,Oasys.Profiles.IFlange,Oasys.Profiles.IWebConstant)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.ICruciformSymmetricalProfile" /> profile from its
<see cref="P:Oasys.Profiles.ICruciformSymmetricalProfile.Depth" />,
<see cref="P:Oasys.Profiles.ICruciformSymmetricalProfile.Flange" /> and
<see cref="P:Oasys.Profiles.ICruciformSymmetricalProfile.Web" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="flange">Defines the profile's flange (the y axis leg of the cruciform).</param>
            <param name="web">Defines the profile's web (z axis leg thickness of the cruciform).</param>
            <returns>Cruciform profile with the specified dimensions.</returns>
            <exception cref="!:System.ArgumentException">
When any of the dimensions is not a positive and finite value.
</exception>
            <exception cref="!:System.ArgumentNullException">If flange is null</exception>
            <exception cref="!:System.ArgumentNullException">If web is null</exception>
        </member>
        <member name="P:Oasys.Profiles.ICruciformSymmetricalProfile.Web">
            <summary>The web (z axis leg) thickness of the cruciform.</summary>
            <exception cref="!:System.ArgumentNullException">If Web is set to null</exception>
        </member>
        <member name="P:Oasys.Profiles.ICruciformSymmetricalProfile.Flange">
            <summary>The flange (y axis leg) of the cruciform.</summary>
            <exception cref="!:System.ArgumentNullException">If Flange is set to null</exception>
        </member>
        <member name="P:Oasys.Profiles.ICruciformSymmetricalProfile.Depth">
            <summary>The depth of the profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.ICruciformSymmetricalProfile">
            <summary>A cruciform section profile.
<center><svg height="350" width="350"><rect x="160" y="50" width="30" height="250" fill="#fc8d62" /><rect x="75" y="150" width="200" height="50" fill="#8da0cb" /><path class="profile-outline" d="M160 50 L190 50 L190 150 L275 150 L275 200 L190 200 L190 300 L160 300 L160 200 L75 200 L75 150 L160 150 Z" /><rect class="profile-line" x="160" y="150" width="30" height="50" fill="#fc8d62" fill-opacity="0.3" stroke-dasharray="4" /><circle cx="240" cy="175" r="4" fill="black" /><line class="profile-line" x1="240" y1="175" x2="240" y2="230" /><text class="profile-label" x="240" y="245" fill="black" text-anchor="middle">Flange</text><circle cx="175" cy="100" r="4" fill="black" /><line class="profile-line" x1="175" y1="100" x2="220" y2="100" /><text class="profile-label" x="230" y="105" fill="black">Web</text><line class="profile-line" x1="55" y1="50" x2="55" y2="300" /><line class="profile-line" x1="45" y1="50" x2="150" y2="50" /><line class="profile-line" x1="45" y1="300" x2="150" y2="300" /><text class="profile-label" x="-175" y="45" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="155" y="175" fill="black" text-anchor="end">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.ICruciformSymmetricalProfile" /> inherits <see cref="T:Oasys.Profiles.IProfile" />.</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.AS3600.Edition_2018">
            <summary>The 2018 edition of AS3600</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.AS3600.Edition_2009">
            <summary>The 2009 edition of AS3600</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.AS3600.Edition_2001">
            <summary>The 2001 edition of AS3600</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.AS3600.Edition_2018">
            <summary>The 2018 edition of AS3600</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.AS3600.Edition_2009">
            <summary>The 2009 edition of AS3600</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.AS3600.Edition_2001">
            <summary>The 2001 edition of AS3600</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.CSA.S6.Edition_2014">
            <summary>The 2014 edition of CSA S6</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.CSA.A23_3.Edition_2014">
            <summary>The 2014 edition of CSA A23 Part 3</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.CSA.A23_3.Edition_2004">
            <summary>The 2004 edition of CSA A23 Part 3</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.CSA.S6.Edition_2014">
            <summary>The 2014 edition of CSA S6</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.CSA.A23_3.Edition_2014">
            <summary>The 2014 edition of CSA A23 Part 3</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.CSA.A23_3.Edition_2004">
            <summary>The 2004 edition of CSA A23 Part 3</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Mesh.ILoadCurve.GetPoints">
            <summary>The points in the curve.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Mesh.ILoadCurve">
            <summary>A curve formed from a ordered list of load points.
<para>See <see href="~/articles/glossary.md#load-curveload-curve">Glossary</see></para></summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Preloads.IPreForce.Create(System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.Preloads.IPreForce" /> preload from <see cref="!:Force" />.
</summary>
            <param name="force">The pre-force per reinforcement bar.<br />
Positive force is tension.
</param>
            <returns>Force preload with the specified force per reinforcement bar.</returns>
            <exception cref="!:System.ArgumentException">
When the force is not a finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Preloads.IPreForce.SetForce(System.Double)">
            <summary>The pre-force per reinforcement bar.<br />
Positive force is tension.
</summary>
            <exception cref="!:System.ArgumentException">
When the force is not a finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Preloads.IPreForce.GetForce">
            <summary>The pre-force per reinforcement bar.<br />
Positive force is tension.
</summary>
            <exception cref="!:System.ArgumentException">
When the force is not a finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.Preloads.IPreForce">
            <summary>A preload of type force per reinforcement bar.</summary>
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.Preloads.IPreForce.Create(UnitsNet.Force)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.Preloads.IPreForce" /> preload from <see cref="P:Oasys.AdSec.Reinforcement.Preloads.IPreForce.Force" />.
</summary>
            <param name="force">The pre-force per reinforcement bar.<br />
Positive force is tension.
</param>
            <returns>Force preload with the specified force per reinforcement bar.</returns>
            <exception cref="!:System.ArgumentException">
When the force is not a finite value.
</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.Preloads.IPreForce.Force">
            <summary>The pre-force per reinforcement bar.<br />
Positive force is tension.
</summary>
            <exception cref="!:System.ArgumentException">
When the force is not a finite value.
</exception>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.Preloads.IPreForce">
            <summary>A preload of type force per reinforcement bar.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IChannelProfile.Create(System.Double,std.shared_ptr&lt;SDK.Oasys.Profiles.IFlange&gt;,std.shared_ptr&lt;SDK.Oasys.Profiles.IWebConstant&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.IChannelProfile" /> profile from its
<see cref="!:Depth" />,
<see cref="!:Flanges" /> and
<see cref="!:Web" /></summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="flanges">Defines the profile's flanges.</param>
            <param name="web">Defines the profile's web which has constant thickness.</param>
            <returns>Channel profile with the specified dimensions.</returns>
            <exception cref="!:System.ArgumentException">
When any of its dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IChannelProfile.SetWeb(std.shared_ptr&lt;SDK.Oasys.Profiles.IWebConstant&gt;)">
            <summary>The web of the channel profile.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IChannelProfile.GetWeb">
            <summary>The web of the channel profile.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IChannelProfile.SetFlanges(std.shared_ptr&lt;SDK.Oasys.Profiles.IFlange&gt;)">
            <summary>The flanges of the channel profile.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IChannelProfile.GetFlanges">
            <summary>The flanges of the channel profile.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IChannelProfile.SetDepth(System.Double)">
            <summary>The depth of the channel profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IChannelProfile.GetDepth">
            <summary>The depth of the channel profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.IChannelProfile">
            <summary>Defines a channel profile.
<center><svg height="350" width="350"><rect x="125" y="250" width="150" height="50" fill="#8da0cb" /><rect x="125" y="50" width="150" height="50" fill="#8da0cb" /><rect x="125" y="100" width="30" height="150" fill="#fc8d62" /><path class="profile-outline" d="M125 50 L275 50 L275 100 L155 100 L155 250 L275 250 L275 300 L125 300 Z" /><line class="profile-line" x1="125" y1="250" x2="155" y2="250" stroke-dasharray="4" /><line class="profile-line" x1="125" y1="100" x2="155" y2="100" stroke-dasharray="4" /><circle cx="250" cy="275" r="4" fill="black" /><circle cx="250" cy="75" r="4" fill="black" /><line class="profile-line" x1="250" y1="275" x2="250" y2="200" /><line class="profile-line" x1="250" y1="75" x2="250" y2="175" /><text class="profile-label" x="250" y="190" fill="black" text-anchor="middle">Flanges</text><circle cx="140" cy="150" r="4" fill="black" /><line class="profile-line" x1="140" y1="150" x2="190" y2="150" /><text class="profile-label" x="200" y="155" fill="black">Web</text><line class="profile-line" x1="100" y1="50" x2="100" y2="175" /><line class="profile-line" x1="90" y1="50" x2="110" y2="50" /><line class="profile-line" x1="90" y1="175" x2="110" y2="175" /><text class="profile-label" x="-115" y="90" fill="black" text-anchor="middle" transform="rotate(-90)">0.5 × Depth</text><line class="profile-line" x1="300" y1="50" x2="300" y2="300" /><line class="profile-line" x1="290" y1="50" x2="310" y2="50" /><line class="profile-line" x1="290" y1="300" x2="310" y2="300" /><text class="profile-label" x="-175" y="320" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><circle class="profile-origin" cx="125" cy="175" r="6" /><text class="profile-label" x="110" y="200" fill="black" text-anchor="end">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.IChannelProfile" /> inherits <see cref="!:Oasys.Profiles.IProfile" />.
<para>The outside corner of the flange and web (min y and min z extent in the local coordinate system)
is the origin of its local coordinate system.
</para></remarks>
        </member>
        <member name="M:Oasys.Profiles.IChannelProfile.Create(UnitsNet.Length,Oasys.Profiles.IFlange,Oasys.Profiles.IWebConstant)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.IChannelProfile" /> profile from its
<see cref="P:Oasys.Profiles.IChannelProfile.Depth" />,
<see cref="P:Oasys.Profiles.IChannelProfile.Flanges" /> and
<see cref="P:Oasys.Profiles.IChannelProfile.Web" /></summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="flanges">Defines the profile's flanges.</param>
            <param name="web">Defines the profile's web which has constant thickness.</param>
            <returns>Channel profile with the specified dimensions.</returns>
            <exception cref="!:System.ArgumentException">
When any of its dimensions is not a positive and finite value.
</exception>
            <exception cref="!:System.ArgumentNullException">If flanges is null</exception>
            <exception cref="!:System.ArgumentNullException">If web is null</exception>
        </member>
        <member name="P:Oasys.Profiles.IChannelProfile.Web">
            <summary>The web of the channel profile.</summary>
            <exception cref="!:System.ArgumentNullException">If Web is set to null</exception>
        </member>
        <member name="P:Oasys.Profiles.IChannelProfile.Flanges">
            <summary>The flanges of the channel profile.</summary>
            <exception cref="!:System.ArgumentNullException">If Flanges is set to null</exception>
        </member>
        <member name="P:Oasys.Profiles.IChannelProfile.Depth">
            <summary>The depth of the channel profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.IChannelProfile">
            <summary>Defines a channel profile.
<center><svg height="350" width="350"><rect x="125" y="250" width="150" height="50" fill="#8da0cb" /><rect x="125" y="50" width="150" height="50" fill="#8da0cb" /><rect x="125" y="100" width="30" height="150" fill="#fc8d62" /><path class="profile-outline" d="M125 50 L275 50 L275 100 L155 100 L155 250 L275 250 L275 300 L125 300 Z" /><line class="profile-line" x1="125" y1="250" x2="155" y2="250" stroke-dasharray="4" /><line class="profile-line" x1="125" y1="100" x2="155" y2="100" stroke-dasharray="4" /><circle cx="250" cy="275" r="4" fill="black" /><circle cx="250" cy="75" r="4" fill="black" /><line class="profile-line" x1="250" y1="275" x2="250" y2="200" /><line class="profile-line" x1="250" y1="75" x2="250" y2="175" /><text class="profile-label" x="250" y="190" fill="black" text-anchor="middle">Flanges</text><circle cx="140" cy="150" r="4" fill="black" /><line class="profile-line" x1="140" y1="150" x2="190" y2="150" /><text class="profile-label" x="200" y="155" fill="black">Web</text><line class="profile-line" x1="100" y1="50" x2="100" y2="175" /><line class="profile-line" x1="90" y1="50" x2="110" y2="50" /><line class="profile-line" x1="90" y1="175" x2="110" y2="175" /><text class="profile-label" x="-115" y="90" fill="black" text-anchor="middle" transform="rotate(-90)">0.5 × Depth</text><line class="profile-line" x1="300" y1="50" x2="300" y2="300" /><line class="profile-line" x1="290" y1="50" x2="310" y2="50" /><line class="profile-line" x1="290" y1="300" x2="310" y2="300" /><text class="profile-label" x="-175" y="320" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><circle class="profile-origin" cx="125" cy="175" r="6" /><text class="profile-label" x="110" y="200" fill="black" text-anchor="end">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.IChannelProfile" /> inherits <see cref="!:Oasys.Profiles.IProfile" />.
<para>The outside corner of the flange and web (min y and min z extent in the local coordinate system)
is the origin of its local coordinate system.
</para></remarks>
        </member>
        <member name="M:SDK.Oasys.Profiles.IGeneralCProfile.Create(System.Double,System.Double,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.IGeneralCProfile" /> profile from its
<see cref="!:Depth" />,
<see cref="!:FlangeWidth" />,
<see cref="!:Lip" /> and
<see cref="!:Thickness" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="flangeWidth">Defines the profile's flange width.</param>
            <param name="lip">Defines the profile's lip.</param>
            <param name="thickness">Defines the profile's thickness.</param>
            <exception cref="!:System.ArgumentException">
When any of the dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IGeneralCProfile.SetThickness(System.Double)">
            <summary>The thickness of the generic c section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the thickness is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IGeneralCProfile.GetThickness">
            <summary>The thickness of the generic c section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the thickness is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IGeneralCProfile.SetLip(System.Double)">
            <summary>The lip of the generic c section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the lip is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IGeneralCProfile.GetLip">
            <summary>The lip of the generic c section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the lip is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IGeneralCProfile.SetFlangeWidth(System.Double)">
            <summary>The flange width of the generic c section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the flange width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IGeneralCProfile.GetFlangeWidth">
            <summary>The flange width of the generic c section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the flange width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IGeneralCProfile.SetDepth(System.Double)">
            <summary>The depth of the generic c section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IGeneralCProfile.GetDepth">
            <summary>The depth of the generic c section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.IGeneralCProfile">
            <summary>A general c section profile.
<center><svg height="350" width="350"><path class="profile-line" d="M125 250 L260 250 L260 230 L275 230 L275 265 L110 265 L110 50 L275 50 L275 85 L260 85 L260 65 L125 65 L125 250 Z" fill="#8da0cb" /><line class="profile-line" x1="110" y1="285" x2="275" y2="285" /><line class="profile-line" x1="110" y1="275" x2="110" y2="295" /><line class="profile-line" x1="275" y1="275" x2="275" y2="295" /><text class="profile-label" x="190" y="305" fill="black" text-anchor="middle">Flange Width</text><line class="profile-line" x1="90" y1="50" x2="90" y2="265" /><line class="profile-line" x1="80" y1="50" x2="100" y2="50" /><line class="profile-line" x1="80" y1="265" x2="100" y2="265" /><text class="profile-label" x="-160" y="75" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><line class="profile-line" x1="295" y1="50" x2="295" y2="85" /><line class="profile-line" x1="285" y1="50" x2="305" y2="50" /><line class="profile-line" x1="285" y1="85" x2="305" y2="85" /><text class="profile-label" x="-68" y="315" fill="black" text-anchor="middle" transform="rotate(-90)">Lip</text><line class="profile-line" x1="192" y1="35" x2="192" y2="65" /><text class="profile-label" x="192" y="30" fill="black" text-anchor="middle">Thickness</text><circle class="profile-origin" cx="110" cy="156" r="6" /><text class="profile-label" x="180" y="150" fill="black" text-anchor="end">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.IGeneralCProfile" /> inherits <see cref="T:SDK.Oasys.Profiles.IProfile" />.</remarks>
        </member>
        <member name="M:Oasys.Profiles.IGeneralCProfile.Create(UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.IGeneralCProfile" /> profile from its
<see cref="P:Oasys.Profiles.IGeneralCProfile.Depth" />,
<see cref="P:Oasys.Profiles.IGeneralCProfile.FlangeWidth" />,
<see cref="P:Oasys.Profiles.IGeneralCProfile.Lip" /> and
<see cref="P:Oasys.Profiles.IGeneralCProfile.Thickness" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="flangeWidth">Defines the profile's flange width.</param>
            <param name="lip">Defines the profile's lip.</param>
            <param name="thickness">Defines the profile's thickness.</param>
            <exception cref="!:System.ArgumentException">
When any of the dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IGeneralCProfile.Thickness">
            <summary>The thickness of the generic c section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the thickness is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IGeneralCProfile.Lip">
            <summary>The lip of the generic c section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the lip is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IGeneralCProfile.FlangeWidth">
            <summary>The flange width of the generic c section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the flange width is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IGeneralCProfile.Depth">
            <summary>The depth of the generic c section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.IGeneralCProfile">
            <summary>A general c section profile.
<center><svg height="350" width="350"><path class="profile-line" d="M125 250 L260 250 L260 230 L275 230 L275 265 L110 265 L110 50 L275 50 L275 85 L260 85 L260 65 L125 65 L125 250 Z" fill="#8da0cb" /><line class="profile-line" x1="110" y1="285" x2="275" y2="285" /><line class="profile-line" x1="110" y1="275" x2="110" y2="295" /><line class="profile-line" x1="275" y1="275" x2="275" y2="295" /><text class="profile-label" x="190" y="305" fill="black" text-anchor="middle">Flange Width</text><line class="profile-line" x1="90" y1="50" x2="90" y2="265" /><line class="profile-line" x1="80" y1="50" x2="100" y2="50" /><line class="profile-line" x1="80" y1="265" x2="100" y2="265" /><text class="profile-label" x="-160" y="75" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><line class="profile-line" x1="295" y1="50" x2="295" y2="85" /><line class="profile-line" x1="285" y1="50" x2="305" y2="50" /><line class="profile-line" x1="285" y1="85" x2="305" y2="85" /><text class="profile-label" x="-68" y="315" fill="black" text-anchor="middle" transform="rotate(-90)">Lip</text><line class="profile-line" x1="192" y1="35" x2="192" y2="65" /><text class="profile-label" x="192" y="30" fill="black" text-anchor="middle">Thickness</text><circle class="profile-origin" cx="110" cy="156" r="6" /><text class="profile-label" x="180" y="150" fill="black" text-anchor="end">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.IGeneralCProfile" /> inherits <see cref="T:Oasys.Profiles.IProfile" />.</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ISingleBars.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.IBarBundle&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.Groups.ISingleBars" /> reinforcement group from its <see cref="!:BarBundle" />.
</summary>
            <param name="barBundle">Defines the bar (or bundle of bars) that will be placed at each position.</param>
            <returns>Reinforcement group with empty list of <see cref="!:Positions" />.
Reinforcement bars are added to the group on adding positions.
</returns>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ISingleBars.SetBarBundle(std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.IBarBundle&gt;)">
            <summary>The bar (or bundle of bars) that will be placed at each position.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ISingleBars.GetBarBundle">
            <summary>The bar (or bundle of bars) that will be placed at each position.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ISingleBars.SetPositions(std.shared_ptr&lt;SDK.Oasys.Collections.IList&gt;)">
            <summary>The positions for the <see cref="!:BarBundle" />s.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ISingleBars.GetPositions">
            <summary>The positions for the <see cref="!:BarBundle" />s.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.Groups.ISingleBars">
            <summary>A reinforcement group contains a singe bar bundle located on the profile at one or more positions.
</summary>
            <seealso cref="T:SDK.Oasys.AdSec.Reinforcement.Groups.ILongitudinalGroup" />
            <example>
# [C#](#tab/tabid-1)
<code source="../../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ISingleBars.cs" region="Usings" lang="csharp" /><code source="../../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ISingleBars.cs" region="Snippet" lang="csharp" /><para>Example creating reinforcement with ISingleBars.</para>
# [Python](#tab/tabid-2)
<code source="../../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ISingleBars.py" region="Imports" lang="python" /><code source="../../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ISingleBars.py" region="Snippet" lang="python" /><para>Example creating reinforcement with ISingleBars.</para>
***
</example>
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.Groups.ISingleBars.Create(Oasys.AdSec.Reinforcement.IBarBundle)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.Groups.ISingleBars" /> reinforcement group from its <see cref="P:Oasys.AdSec.Reinforcement.Groups.ISingleBars.BarBundle" />.
</summary>
            <param name="barBundle">Defines the bar (or bundle of bars) that will be placed at each position.</param>
            <returns>Reinforcement group with empty list of <see cref="P:Oasys.AdSec.Reinforcement.Groups.ISingleBars.Positions" />.
Reinforcement bars are added to the group on adding positions.
</returns>
            <exception cref="!:System.ArgumentNullException">If barBundle is null</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.Groups.ISingleBars.BarBundle">
            <summary>The bar (or bundle of bars) that will be placed at each position.</summary>
            <exception cref="!:System.ArgumentNullException">If BarBundle is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.Groups.ISingleBars.Positions">
            <summary>The positions for the <see cref="P:Oasys.AdSec.Reinforcement.Groups.ISingleBars.BarBundle" />s.</summary>
            <exception cref="!:System.ArgumentNullException">If Positions is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.Groups.ISingleBars">
            <summary>A reinforcement group contains a singe bar bundle located on the profile at one or more positions.
</summary>
            <seealso cref="T:Oasys.AdSec.Reinforcement.Groups.ILongitudinalGroup" />
            <example>
# [C#](#tab/tabid-1)
<code source="../../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ISingleBars.cs" region="Usings" lang="csharp" /><code source="../../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ISingleBars.cs" region="Snippet" lang="csharp" /><para>Example creating reinforcement with ISingleBars.</para>
# [Python](#tab/tabid-2)
<code source="../../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ISingleBars.py" region="Imports" lang="python" /><code source="../../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ISingleBars.py" region="Snippet" lang="python" /><para>Example creating reinforcement with ISingleBars.</para>
***
</example>
        </member>
        <member name="M:SDK.Oasys.Profiles.ITSectionProfile.Create(System.Double,std.shared_ptr&lt;SDK.Oasys.Profiles.IFlange&gt;,std.shared_ptr&lt;SDK.Oasys.Profiles.IWeb&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.ITSectionProfile" /> profile from its
<see cref="!:Depth" />,
<see cref="!:Flange" /> and
<see cref="!:Web" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="flange">Defines the profile's flange thickness.</param>
            <param name="web">Defines the profile's web thickness.</param>
            <returns>Tee section profile with the specified dimensions.</returns>
            <exception cref="!:System.ArgumentException">
When any of its dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ITSectionProfile.SetDepth(System.Double)">
            <summary>The depth of the T section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ITSectionProfile.GetDepth">
            <summary>The depth of the T section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ITSectionProfile.SetWeb(std.shared_ptr&lt;SDK.Oasys.Profiles.IWeb&gt;)">
            <summary>The web of the T section profile.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.ITSectionProfile.GetWeb">
            <summary>The web of the T section profile.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.ITSectionProfile.SetFlange(std.shared_ptr&lt;SDK.Oasys.Profiles.IFlange&gt;)">
            <summary>The flange of the T section profile.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.ITSectionProfile.GetFlange">
            <summary>The flange of the T section profile.</summary>
        </member>
        <member name="T:SDK.Oasys.Profiles.ITSectionProfile">
            <summary>Defines a Tee section profile.<br /><center><svg height="350" width="350"><rect x="75" y="50" width="200" height="50" fill="#8da0cb" /><rect x="160" y="100" width="30" height="200" fill="#fc8d62" /><path class="profile-outline" d="M75 50 L275 50 L275 100 L190 100 L190 300 L160 300 L160 100 L75 100 Z" /><line class="profile-line" x1="160" y1="100" x2="190" y2="100" stroke-dasharray="4" /><circle cx="250" cy="75" r="4" fill="black" /><line class="profile-line" x1="250" y1="75" x2="250" y2="135" /><text class="profile-label" x="250" y="150" fill="black" text-anchor="middle">Flange</text><line class="profile-line" x1="55" y1="50" x2="55" y2="300" /><line class="profile-line" x1="45" y1="50" x2="65" y2="50" /><line class="profile-line" x1="45" y1="300" x2="65" y2="300" /><text class="profile-label" x="-175" y="45" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><circle cx="175" cy="140" r="4" fill="black" /><line class="profile-line" x1="135" y1="140" x2="175" y2="140" /><text class="profile-label" x="130" y="145" fill="black" text-anchor="end">Web</text><circle class="profile-origin" cx="175" cy="50" r="6" /><text class="profile-label" x="180" y="40" fill="black" text-anchor="start">Origin</text><style>
  .profile-label { font: 16px sans-serif; }
  .profile-line {stroke:black;stroke-width:2;}
  .profile-outline {stroke:black;stroke-width:2; fill:none;}
  .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
</style></svg></center></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.ITSectionProfile" /> inherits <see cref="T:SDK.Oasys.Profiles.IProfile" />.
<para>The Tee profile is centered at the origin of its local coordinate system.</para></remarks>
        </member>
        <member name="M:Oasys.Profiles.ITSectionProfile.Create(UnitsNet.Length,Oasys.Profiles.IFlange,Oasys.Profiles.IWeb)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.ITSectionProfile" /> profile from its
<see cref="P:Oasys.Profiles.ITSectionProfile.Depth" />,
<see cref="P:Oasys.Profiles.ITSectionProfile.Flange" /> and
<see cref="P:Oasys.Profiles.ITSectionProfile.Web" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="flange">Defines the profile's flange thickness.</param>
            <param name="web">Defines the profile's web thickness.</param>
            <returns>Tee section profile with the specified dimensions.</returns>
            <exception cref="!:System.ArgumentException">
When any of its dimensions is not a positive and finite value.
</exception>
            <exception cref="!:System.ArgumentNullException">If flange is null</exception>
            <exception cref="!:System.ArgumentNullException">If web is null</exception>
        </member>
        <member name="P:Oasys.Profiles.ITSectionProfile.Depth">
            <summary>The depth of the T section profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.ITSectionProfile.Web">
            <summary>The web of the T section profile.</summary>
            <exception cref="!:System.ArgumentNullException">If Web is set to null</exception>
        </member>
        <member name="P:Oasys.Profiles.ITSectionProfile.Flange">
            <summary>The flange of the T section profile.</summary>
            <exception cref="!:System.ArgumentNullException">If Flange is set to null</exception>
        </member>
        <member name="T:Oasys.Profiles.ITSectionProfile">
            <summary>Defines a Tee section profile.<br /><center><svg height="350" width="350"><rect x="75" y="50" width="200" height="50" fill="#8da0cb" /><rect x="160" y="100" width="30" height="200" fill="#fc8d62" /><path class="profile-outline" d="M75 50 L275 50 L275 100 L190 100 L190 300 L160 300 L160 100 L75 100 Z" /><line class="profile-line" x1="160" y1="100" x2="190" y2="100" stroke-dasharray="4" /><circle cx="250" cy="75" r="4" fill="black" /><line class="profile-line" x1="250" y1="75" x2="250" y2="135" /><text class="profile-label" x="250" y="150" fill="black" text-anchor="middle">Flange</text><line class="profile-line" x1="55" y1="50" x2="55" y2="300" /><line class="profile-line" x1="45" y1="50" x2="65" y2="50" /><line class="profile-line" x1="45" y1="300" x2="65" y2="300" /><text class="profile-label" x="-175" y="45" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><circle cx="175" cy="140" r="4" fill="black" /><line class="profile-line" x1="135" y1="140" x2="175" y2="140" /><text class="profile-label" x="130" y="145" fill="black" text-anchor="end">Web</text><circle class="profile-origin" cx="175" cy="50" r="6" /><text class="profile-label" x="180" y="40" fill="black" text-anchor="start">Origin</text><style>
  .profile-label { font: 16px sans-serif; }
  .profile-line {stroke:black;stroke-width:2;}
  .profile-outline {stroke:black;stroke-width:2; fill:none;}
  .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
</style></svg></center></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.ITSectionProfile" /> inherits <see cref="T:Oasys.Profiles.IProfile" />.
<para>The Tee profile is centered at the origin of its local coordinate system.</para></remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.ISteel.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve&gt;,std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve&gt;)">
            <summary>
Creates a new steel material from its strength (ULS) and
serviceability (SLS) stress-strain relationship.
</summary>
            <param name="strength">The material's stress-strain relationship for strength (ULS) analysis.</param>
            <param name="serviceability">The material's stress-strain relationship for serviceability (SLS) analysis.</param>
            <returns>A new steel material with the given sterss-strain relationships.</returns>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.ISteel">
            <summary>
A steel material, defined by its stress-strain relationships for both strength and serviceability analysis.
<para>For pre-defined standard steel materials, see <see cref="!:Oasys.AdSec.StandardMaterials" /></para></summary>
            <seealso cref="T:SDK.Oasys.AdSec.Materials.IMaterial" />
            <seealso cref="!:StressStrainCurves.ITensionCompressionCurve" />
        </member>
        <member name="M:Oasys.AdSec.Materials.ISteel.Create(Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve,Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve)">
            <summary>
Creates a new steel material from its strength (ULS) and
serviceability (SLS) stress-strain relationship.
</summary>
            <param name="strength">The material's stress-strain relationship for strength (ULS) analysis.</param>
            <param name="serviceability">The material's stress-strain relationship for serviceability (SLS) analysis.</param>
            <returns>A new steel material with the given sterss-strain relationships.</returns>
            <exception cref="!:System.ArgumentNullException">If strength is null</exception>
            <exception cref="!:System.ArgumentNullException">If serviceability is null</exception>
        </member>
        <member name="T:Oasys.AdSec.Materials.ISteel">
            <summary>
A steel material, defined by its stress-strain relationships for both strength and serviceability analysis.
<para>For pre-defined standard steel materials, see <see cref="!:Oasys.AdSec.StandardMaterials" /></para></summary>
            <seealso cref="T:Oasys.AdSec.Materials.IMaterial" />
            <seealso cref="!:StressStrainCurves.ITensionCompressionCurve" />
        </member>
        <member name="M:SDK.Oasys.Profiles.IEllipseProfile.Create(System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.IEllipseProfile" /> profile from its
<see cref="!:IEllipseProfile.Depth" /> and
<see cref="!:IEllipseProfile.Width" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="width">Defines the profile's width.</param>
            <returns>Ellipse profile with the specified dimensions.</returns>
            <exception cref="!:System.ArgumentException">
When any of its dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IEllipseProfile.SetWidth(System.Double)">
            <summary>The width of the ellipse.
</summary>
            <exception cref="!:System.ArgumentException">
When the width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IEllipseProfile.GetWidth">
            <summary>The width of the ellipse.
</summary>
            <exception cref="!:System.ArgumentException">
When the width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IEllipseProfile.SetDepth(System.Double)">
            <summary>The depth of the ellipse.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IEllipseProfile.GetDepth">
            <summary>The depth of the ellipse.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.IEllipseProfile">
            <summary>Defines an elliptical section profile from
<see cref="!:Depth" /> and
<see cref="!:Width" />.<br /><center><svg height="350" width="350"><ellipse class="profile-line" cx="175" cy="175" rx="70" ry="100" fill="#8da0cb" /><line class="profile-line" x1="80" y1="75" x2="80" y2="275" /><line class="profile-line" x1="70" y1="75" x2="140" y2="75" /><line class="profile-line" x1="70" y1="275" x2="140" y2="275" /><text class="profile-label" x="-175" y="70" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><line class="profile-line" x1="105" y1="300" x2="245" y2="300" /><line class="profile-line" x1="105" y1="220" x2="105" y2="310" /><line class="profile-line" x1="245" y1="220" x2="245" y2="310" /><text class="profile-label" x="175" y="320" fill="black" text-anchor="middle">Width</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="175" y="165" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.IEllipseProfile" /> inherits <see cref="T:SDK.Oasys.Profiles.IProfile" />.
<para>The ellipse is centered at the origin of its local coordinate system.</para></remarks>
        </member>
        <member name="M:Oasys.Profiles.IEllipseProfile.Create(UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.IEllipseProfile" /> profile from its
<see cref="!:IEllipseProfile.Depth" /> and
<see cref="!:IEllipseProfile.Width" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="width">Defines the profile's width.</param>
            <returns>Ellipse profile with the specified dimensions.</returns>
            <exception cref="!:System.ArgumentException">
When any of its dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IEllipseProfile.Width">
            <summary>The width of the ellipse.
</summary>
            <exception cref="!:System.ArgumentException">
When the width is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IEllipseProfile.Depth">
            <summary>The depth of the ellipse.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.IEllipseProfile">
            <summary>Defines an elliptical section profile from
<see cref="P:Oasys.Profiles.IEllipseProfile.Depth" /> and
<see cref="P:Oasys.Profiles.IEllipseProfile.Width" />.<br /><center><svg height="350" width="350"><ellipse class="profile-line" cx="175" cy="175" rx="70" ry="100" fill="#8da0cb" /><line class="profile-line" x1="80" y1="75" x2="80" y2="275" /><line class="profile-line" x1="70" y1="75" x2="140" y2="75" /><line class="profile-line" x1="70" y1="275" x2="140" y2="275" /><text class="profile-label" x="-175" y="70" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><line class="profile-line" x1="105" y1="300" x2="245" y2="300" /><line class="profile-line" x1="105" y1="220" x2="105" y2="310" /><line class="profile-line" x1="245" y1="220" x2="245" y2="310" /><text class="profile-label" x="175" y="320" fill="black" text-anchor="middle">Width</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="175" y="165" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.IEllipseProfile" /> inherits <see cref="T:Oasys.Profiles.IProfile" />.
<para>The ellipse is centered at the origin of its local coordinate system.</para></remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.BS5400.Edition_2006">
            <summary>The 2006 edition of BS5400 including Interim Advice Note 70/06</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.BS5400.Edition_1990">
            <summary>The 1990 edition of BS5400</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.BS5400.Edition_2006">
            <summary>The 2006 edition of BS5400 including Interim Advice Note 70/06</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.BS5400.Edition_1990">
            <summary>The 1990 edition of BS5400</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.IFrp.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve&gt;,std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve&gt;)">
            <summary>
Creates a new FRP material from its strength (ULS) and
serviceability (SLS) stress-strain relationship.
</summary>
            <param name="strength">The material's stress-strain relationship for strength (ULS) analysis.</param>
            <param name="serviceability">The material's stress-strain relationship for serviceability (SLS) analysis.</param>
            <returns>A new FRP material with the given sterss-strain relationships.</returns>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.IFrp">
            <summary>
A fibre-reinforced polymer (FRP) material, defined by its stress-strain relationships for both strength and serviceability analysis.
<para>For pre-defined standard FRP materials, see <see cref="!:Oasys.AdSec.StandardMaterials" /></para></summary>
            <seealso cref="T:SDK.Oasys.AdSec.Materials.IMaterial" />
            <seealso cref="!:StressStrainCurves.ITensionCompressionCurve" />
        </member>
        <member name="M:Oasys.AdSec.Materials.IFrp.Create(Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve,Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve)">
            <summary>
Creates a new FRP material from its strength (ULS) and
serviceability (SLS) stress-strain relationship.
</summary>
            <param name="strength">The material's stress-strain relationship for strength (ULS) analysis.</param>
            <param name="serviceability">The material's stress-strain relationship for serviceability (SLS) analysis.</param>
            <returns>A new FRP material with the given sterss-strain relationships.</returns>
            <exception cref="!:System.ArgumentNullException">If strength is null</exception>
            <exception cref="!:System.ArgumentNullException">If serviceability is null</exception>
        </member>
        <member name="T:Oasys.AdSec.Materials.IFrp">
            <summary>
A fibre-reinforced polymer (FRP) material, defined by its stress-strain relationships for both strength and serviceability analysis.
<para>For pre-defined standard FRP materials, see <see cref="!:Oasys.AdSec.StandardMaterials" /></para></summary>
            <seealso cref="T:Oasys.AdSec.Materials.IMaterial" />
            <seealso cref="!:StressStrainCurves.ITensionCompressionCurve" />
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IFibModelCodeStressStrainCurve.Create(System.Double,std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint&gt;,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IFibModelCodeStressStrainCurve" /> stress-strain curve
(schematic stress-strain curve from FIB model code).
</summary>
            <param name="initialModulus">The initial gradient of the stress-strain curve.</param>
            <param name="peakPoint">The point of maximum stress.</param>
            <param name="failureStrain">The strain beyond which the material fails.</param>
            <exception cref="!:System.ArgumentException">
When the peak strain is larger than the failure strain.
</exception>
            <exception cref="!:System.ArgumentException">
When the initial gradient is not a poitive finite value.
</exception>
            <exception cref="!:System.ArgumentException">
When any of the stress-strain inputs is negative or infinite.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IFibModelCodeStressStrainCurve.GetPeakPoint">
            <summary>The point of maximum stress.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IFibModelCodeStressStrainCurve.GetInitialModulus">
            <summary>The initial gradient of the stress-strain curve.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IFibModelCodeStressStrainCurve">
            <summary>
Schematic <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" /> from FIB model code.
Refer <a href="https://www.oasys-software.com/help/adsec/10.0/AdSec%20Theory%20Manual.pdf">AdSec Theory Manual</a>
for further details.
<center><svg width="500" height="300" transform="scaleX(1.33)"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 50,238 80,201 106,167 133,139 160,115 186,96 213,80 239,69 266,63 293,61 319,63 346,69 372,80 400,95" class="curve" /><text x="306" y="41" class="text">Peak point</text><circle cX="293" cy="61" r="15" /><line x1="400" y1="95" x2="400" y2="280" stroke-dasharray="4" /><text x="380" y="260" class="text" text-anchor="end">Failure strain</text><circle cX="400" cy="280" r="15" /><line x1="20" y1="280" x2="114" y2="131" stroke-dasharray="4" /><text x="-110" y="190" class="text" transform="rotate(302)" text-anchor="end">Initial modulus</text><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
  </style></svg></center></summary>
            <remarks>FIB schematic curve is commonly used for concrete materials.</remarks>
        </member>
        <member name="M:Oasys.AdSec.Materials.StressStrainCurves.IFibModelCodeStressStrainCurve.Create(UnitsNet.Pressure,Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint,Oasys.Units.Strain)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IFibModelCodeStressStrainCurve" /> stress-strain curve
(schematic stress-strain curve from FIB model code).
</summary>
            <param name="initialModulus">The initial gradient of the stress-strain curve.</param>
            <param name="peakPoint">The point of maximum stress.</param>
            <param name="failureStrain">The strain beyond which the material fails.</param>
            <exception cref="!:System.ArgumentException">
When the peak strain is larger than the failure strain.
</exception>
            <exception cref="!:System.ArgumentException">
When the initial gradient is not a poitive finite value.
</exception>
            <exception cref="!:System.ArgumentException">
When any of the stress-strain inputs is negative or infinite.
</exception>
            <exception cref="!:System.ArgumentNullException">If peakPoint is null</exception>
        </member>
        <member name="P:Oasys.AdSec.Materials.StressStrainCurves.IFibModelCodeStressStrainCurve.PeakPoint">
            <summary>The point of maximum stress.</summary>
            <exception cref="!:System.ArgumentNullException">If PeakPoint is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.Materials.StressStrainCurves.IFibModelCodeStressStrainCurve.InitialModulus">
            <summary>The initial gradient of the stress-strain curve.</summary>
        </member>
        <member name="T:Oasys.AdSec.Materials.StressStrainCurves.IFibModelCodeStressStrainCurve">
            <summary>
Schematic <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" /> from FIB model code.
Refer <a href="https://www.oasys-software.com/help/adsec/10.0/AdSec%20Theory%20Manual.pdf">AdSec Theory Manual</a>
for further details.
<center><svg width="500" height="300" transform="scaleX(1.33)"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 50,238 80,201 106,167 133,139 160,115 186,96 213,80 239,69 266,63 293,61 319,63 346,69 372,80 400,95" class="curve" /><text x="306" y="41" class="text">Peak point</text><circle cX="293" cy="61" r="15" /><line x1="400" y1="95" x2="400" y2="280" stroke-dasharray="4" /><text x="380" y="260" class="text" text-anchor="end">Failure strain</text><circle cX="400" cy="280" r="15" /><line x1="20" y1="280" x2="114" y2="131" stroke-dasharray="4" /><text x="-110" y="190" class="text" transform="rotate(302)" text-anchor="end">Initial modulus</text><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
  </style></svg></center></summary>
            <remarks>FIB schematic curve is commonly used for concrete materials.</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStrengthResult.GetDeformationUtilisation">
            <summary>
The strength deformation utilisation is the ratio of the applied deformation to the deformation
in the same direction that would cause the section to reach its capacity.
Utilisation &gt; 1 means capacity has been exceeded.
</summary>
            <remarks>
Capacity has been exceeded when the utilisation is greater than 1.
If the applied load is outside the capacity range of the section,
the deformation utilisation will be the
<a href="https://docs.microsoft.com/en-us/dotnet/api/system.double.maxvalue?view=net-5.0">
maximum double value</a>.
</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStrengthResult.GetLoadUtilisation">
            <summary>
The strength load utilisation is the ratio of the applied load to the load
in the same direction that would cause the section to reach its capacity.
Utilisation &gt; 1 means the applied load exceeds the section capacity.
</summary>
            <remarks>
If the applied load is outside the capacity range of the section, the
utilisation will be greater than 1. Whereas, if the applied deformation
exceeds the capacity, the load utilisation will be zero.
</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStrengthResult.GetMomentRanges">
            <summary>
The range of moments (in the direction of the applied moment,
assuming constant axial force) that are within the section's capacity.
</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStrengthResult.GetDeformation">
            <summary>The section deformation under the applied action.
</summary>
            <remarks>If the applied load is outside the capacity range
of the section, the returned deformation will consist
the <a href="https://docs.microsoft.com/en-us/dotnet/api/system.double.maxvalue?view=net-5.0">
maximum double values</a>.
</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStrengthResult.GetLoad">
            <summary>The section load under the applied action.
</summary>
            <remarks>If the applied deformation is outside the capacity range
of the section, the returned load will be zero.
</remarks>
        </member>
        <member name="T:SDK.Oasys.AdSec.IStrengthResult">
            <summary>The result of strength analysis (ULS) calculated by <see cref="!:IStrength" />.
</summary>
            <seealso cref="!:IStrength" />
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.HK.SDM.Edition_2013">
            <summary>The 2013 edition of HKSDM</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.HK.SDM.Edition_2002">
            <summary>The 2002 edition of HKSDM</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.HK.CP.Edition_2013">
            <summary>The 2013 edition of HKCP</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.HK.CP.Edition_2007">
            <summary>The 2007 edition of HKCP</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.HK.CP.Edition_2004">
            <summary>The 2004 edition of HKCP</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.HK.CP.Edition_1987">
            <summary>The 1987 edition of HKCP</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.HK.SDM.Edition_2013">
            <summary>The 2013 edition of HKSDM</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.HK.SDM.Edition_2002">
            <summary>The 2002 edition of HKSDM</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.HK.CP.Edition_2013">
            <summary>The 2013 edition of HKCP</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.HK.CP.Edition_2007">
            <summary>The 2007 edition of HKCP</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.HK.CP.Edition_2004">
            <summary>The 2004 edition of HKCP</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.HK.CP.Edition_1987">
            <summary>The 1987 edition of HKCP</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Layers.ILayerByBarPitch.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.IBarBundle&gt;,System.Double)">
            <summary>
Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.Layers.ILayerByBarPitch" /> from the centre-to-centre
spacing (pitch) and bar (or bundle of bars) to be placed.
</summary>
            <param name="barBundle">Defines the bar (or bundle of bars) that will be placed at each position.</param>
            <param name="pitch">Defines the centre-to-centre spacing of bar bundles in the layer.</param>
            <returns>Reinforcement layer with the specified bar bundle and pitch.</returns>
            <remarks>The pitch defines the centre-to-centre spacing between bundles or single bars in the layer.
The number of bars is calculated based on the available length and the given bar pitch.
The bar pitch is re-calculated to place the bars at equal spacing, with a maximum final pitch of the given value.
</remarks>
            <exception cref="!:System.ArgumentException">
When the pitch is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Layers.ILayerByBarPitch.SetPitch(System.Double)">
            <summary>The pitch is the maximum centre-to-centre spacing of the bundles or single bars.
</summary>
            <remarks>The pitch defines the centre-to-centre spacing between bundles or single bars in the layer.
<para>The number of bars is calculated based on the available length and the given bar pitch.
The bar pitch is re-calculated to place the bars at equal spacing, with a maximum final pitch of the given value.
</para><img src="../images/AdSecPitch.PNG" /></remarks>
            <exception cref="!:System.ArgumentException">
When the pitch/spacing of bars is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Layers.ILayerByBarPitch.GetPitch">
            <summary>The pitch is the maximum centre-to-centre spacing of the bundles or single bars.
</summary>
            <remarks>The pitch defines the centre-to-centre spacing between bundles or single bars in the layer.
<para>The number of bars is calculated based on the available length and the given bar pitch.
The bar pitch is re-calculated to place the bars at equal spacing, with a maximum final pitch of the given value.
</para><img src="../images/AdSecPitch.PNG" /></remarks>
            <exception cref="!:System.ArgumentException">
When the pitch/spacing of bars is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.Layers.ILayerByBarPitch">
            <summary>A reinforcement layer defined by the bar pitch.
The number of bars is calculated based on the available length and the given bar pitch.
The bar pitch is re-calculated to place the bars at equal spacing, with a maximum final pitch of the given value.
Example: If the available length for the bars is 1000mm and the given bar pitch is 300mm,
then the number of spacings that can fit in the available length is calculated as 1000 / 300 i.e. 3.333.
The number of spacings is rounded up (3.333 rounds up to 4) and the bar pitch re-calculated (1000mm / 4), resulting in a final pitch of 250mm.
</summary>
            <remarks>
                <see cref="T:SDK.Oasys.AdSec.Reinforcement.Layers.ILayerByBarPitch" /> implements <see cref="T:SDK.Oasys.AdSec.Reinforcement.Layers.ILayer" />.
<para>It defines a reinforcement layer by the <see cref="!:Pitch" />.</para><img src="../images/ReinforcementGroups.png" /></remarks>
            <seealso cref="T:SDK.Oasys.AdSec.Reinforcement.Layers.ILayer" />
            <seealso cref="!:ILayerByBarCount" />
            <example>
# [C#](#tab/tabid-1)
<code source="../../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ILayerByBarPitch.cs" region="Usings" lang="csharp" /><code source="../../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ILayerByBarPitch.cs" region="Snippet" lang="csharp" /><para>Example creating layer.</para>
# [Python](#tab/tabid-2)
<code source="../../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ILayerByBarPitch.py" region="Imports" lang="python" /><code source="../../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ILayerByBarPitch.py" region="Snippet" lang="python" /><para>Example creating layer.</para>
***
</example>
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.Layers.ILayerByBarPitch.Create(Oasys.AdSec.Reinforcement.IBarBundle,UnitsNet.Length)">
            <summary>
Creates a new <see cref="T:Oasys.AdSec.Reinforcement.Layers.ILayerByBarPitch" /> from the centre-to-centre
spacing (pitch) and bar (or bundle of bars) to be placed.
</summary>
            <param name="barBundle">Defines the bar (or bundle of bars) that will be placed at each position.</param>
            <param name="pitch">Defines the centre-to-centre spacing of bar bundles in the layer.</param>
            <returns>Reinforcement layer with the specified bar bundle and pitch.</returns>
            <remarks>The pitch defines the centre-to-centre spacing between bundles or single bars in the layer.
The number of bars is calculated based on the available length and the given bar pitch.
The bar pitch is re-calculated to place the bars at equal spacing, with a maximum final pitch of the given value.
</remarks>
            <exception cref="!:System.ArgumentException">
When the pitch is not a positive and finite value.
</exception>
            <exception cref="!:System.ArgumentNullException">If barBundle is null</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.Layers.ILayerByBarPitch.Pitch">
            <summary>The pitch is the maximum centre-to-centre spacing of the bundles or single bars.
</summary>
            <remarks>The pitch defines the centre-to-centre spacing between bundles or single bars in the layer.
<para>The number of bars is calculated based on the available length and the given bar pitch.
The bar pitch is re-calculated to place the bars at equal spacing, with a maximum final pitch of the given value.
</para><img src="../images/AdSecPitch.PNG" /></remarks>
            <exception cref="!:System.ArgumentException">
When the pitch/spacing of bars is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.Layers.ILayerByBarPitch">
            <summary>A reinforcement layer defined by the bar pitch.
The number of bars is calculated based on the available length and the given bar pitch.
The bar pitch is re-calculated to place the bars at equal spacing, with a maximum final pitch of the given value.
Example: If the available length for the bars is 1000mm and the given bar pitch is 300mm,
then the number of spacings that can fit in the available length is calculated as 1000 / 300 i.e. 3.333.
The number of spacings is rounded up (3.333 rounds up to 4) and the bar pitch re-calculated (1000mm / 4), resulting in a final pitch of 250mm.
</summary>
            <remarks>
                <see cref="T:Oasys.AdSec.Reinforcement.Layers.ILayerByBarPitch" /> implements <see cref="T:Oasys.AdSec.Reinforcement.Layers.ILayer" />.
<para>It defines a reinforcement layer by the <see cref="P:Oasys.AdSec.Reinforcement.Layers.ILayerByBarPitch.Pitch" />.</para><img src="../images/ReinforcementGroups.png" /></remarks>
            <seealso cref="T:Oasys.AdSec.Reinforcement.Layers.ILayer" />
            <seealso cref="!:ILayerByBarCount" />
            <example>
# [C#](#tab/tabid-1)
<code source="../../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ILayerByBarPitch.cs" region="Usings" lang="csharp" /><code source="../../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ILayerByBarPitch.cs" region="Snippet" lang="csharp" /><para>Example creating layer.</para>
# [Python](#tab/tabid-2)
<code source="../../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ILayerByBarPitch.py" region="Imports" lang="python" /><code source="../../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ILayerByBarPitch.py" region="Snippet" lang="python" /><para>Example creating layer.</para>
***
</example>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStrength.GetMomentMomentInteractionCurve(System.Double)">
            <summary>Calculates a moment-moment interaction curve.<br /><center><img src="../images/MomentMomentCurve.PNG" /></center></summary>
            <param name="axialForce">The axial force.</param>
            <exception cref="!:System.ArgumentException">
When the axial force is not a finite value.
</exception>
            <returns>The force-moment interaction curve, <see cref="!:Oasys.AdSec.Mesh.ILoadCurve" />.</returns>
            <remarks>If the axial force is outside the capacity
range of the section, the returned list will be empty.
</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStrength.GetForceMomentInteractionCurve(System.Double)">
            <summary>Calculates a force-moment interaction curve.<br /><center><img src="../images/ForceMomentCurve.PNG" /></center></summary>
            <param name="momentAngle">The moment angle, which must be in the range -180 degrees to +180 degrees.</param>
            <exception cref="!:System.ArgumentException">
When the magnitude of the angle is greater than 180 degrees.
</exception>
            <returns>The force-moment interaction curve, <see cref="!:Oasys.AdSec.Mesh.ILoadCurve" />.</returns>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStrength.GetFailureSurface">
            <summary>Generates the strength failure surface.<br /><center><img src="../images/FailureSurface.PNG" /></center></summary>
            <returns>The failure surface, <see cref="!:Oasys.AdSec.Mesh.ILoadSurface" />.</returns>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStrength.Check(std.shared_ptr&lt;SDK.Oasys.AdSec.IDeformation&gt;)">
            <summary>Calculates strength results.
</summary>
            <param name="deformation">The deformation for which the strength results are to be calculated.</param>
            <returns>Strength results for the specified deformation.</returns>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStrength.Check(std.shared_ptr&lt;SDK.Oasys.AdSec.ILoad&gt;)">
            <summary>Calculates strength results.
</summary>
            <param name="load">The load for which the strength results are to be calculated.</param>
            <returns>Strength results for the specified load.</returns>
        </member>
        <member name="T:SDK.Oasys.AdSec.IStrength">
            <summary>Performs strength analysis (ULS), for a given <see cref="T:SDK.Oasys.AdSec.ILoad" /> or <see cref="T:SDK.Oasys.AdSec.IDeformation" />.
<para>See <see href="~/articles/glossary.md#strength-resultstrength-result">Glossary</see></para></summary>
            <remarks>
                <para>
                    <see cref="T:SDK.Oasys.AdSec.IStrength" /> can also generate the strength failure surface and
the force-moment and moment-moment interaction curves.</para>
Results are returned in <see cref="T:SDK.Oasys.AdSec.IStrengthResult" />.
</remarks>
            <seealso cref="T:SDK.Oasys.AdSec.IStrengthResult" />
            <seealso cref="T:SDK.Oasys.AdSec.ILoad" />
            <seealso cref="T:SDK.Oasys.AdSec.IDeformation" />
        </member>
        <member name="P:Oasys.AdSec.IStrengthResult.DeformationUtilisation">
            <summary>
The strength deformation utilisation is the ratio of the applied deformation to the deformation
in the same direction that would cause the section to reach its capacity.
Utilisation &gt; 1 means capacity has been exceeded.
</summary>
            <remarks>
Capacity has been exceeded when the utilisation is greater than 1.
If the applied load is outside the capacity range of the section,
the deformation utilisation will be the
<a href="https://docs.microsoft.com/en-us/dotnet/api/system.double.maxvalue?view=net-5.0">
maximum double value</a>.
</remarks>
        </member>
        <member name="P:Oasys.AdSec.IStrengthResult.LoadUtilisation">
            <summary>
The strength load utilisation is the ratio of the applied load to the load
in the same direction that would cause the section to reach its capacity.
Utilisation &gt; 1 means the applied load exceeds the section capacity.
</summary>
            <remarks>
If the applied load is outside the capacity range of the section, the
utilisation will be greater than 1. Whereas, if the applied deformation
exceeds the capacity, the load utilisation will be zero.
</remarks>
        </member>
        <member name="P:Oasys.AdSec.IStrengthResult.MomentRanges">
            <summary>
The range of moments (in the direction of the applied moment,
assuming constant axial force) that are within the section's capacity.
</summary>
            <exception cref="!:System.ArgumentNullException">If MomentRanges is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.IStrengthResult.Deformation">
            <summary>The section deformation under the applied action.
</summary>
            <remarks>If the applied load is outside the capacity range
of the section, the returned deformation will consist
the <a href="https://docs.microsoft.com/en-us/dotnet/api/system.double.maxvalue?view=net-5.0">
maximum double values</a>.
</remarks>
            <exception cref="!:System.ArgumentNullException">If Deformation is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.IStrengthResult.Load">
            <summary>The section load under the applied action.
</summary>
            <remarks>If the applied deformation is outside the capacity range
of the section, the returned load will be zero.
</remarks>
            <exception cref="!:System.ArgumentNullException">If Load is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.IStrengthResult">
            <summary>The result of strength analysis (ULS) calculated by <see cref="T:Oasys.AdSec.IStrength" />.
</summary>
            <seealso cref="T:Oasys.AdSec.IStrength" />
        </member>
        <member name="P:Oasys.AdSec.Mesh.ILoadCurve.Points">
            <summary>The points in the curve.</summary>
            <exception cref="!:System.ArgumentNullException">If Points is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.Mesh.ILoadCurve">
            <summary>A curve formed from a ordered list of load points.
<para>See <see href="~/articles/glossary.md#load-curveload-curve">Glossary</see></para></summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IRectangleHollowProfile.Create(System.Double,std.shared_ptr&lt;SDK.Oasys.Profiles.IFlange&gt;,std.shared_ptr&lt;SDK.Oasys.Profiles.IWebConstant&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.IRectangleHollowProfile" /> profile from its
<see cref="!:Depth" />,
<see cref="!:Flanges" /><see cref="!:Webs" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="flanges">Defines the profile's flanges.</param>
            <param name="webs">Defines the profile's webs.</param>
            <returns>Hollow rectangle profile with the specified dimensions.</returns>
            <exception cref="!:System.ArgumentException">
When any of its dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IRectangleHollowProfile.SetWebs(std.shared_ptr&lt;SDK.Oasys.Profiles.IWebConstant&gt;)">
            <summary>The webs (side walls) of the hollow rectangle.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IRectangleHollowProfile.GetWebs">
            <summary>The webs (side walls) of the hollow rectangle.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IRectangleHollowProfile.SetFlanges(std.shared_ptr&lt;SDK.Oasys.Profiles.IFlange&gt;)">
            <summary>The flanges (top and bottom) of the hollow rectangle.
The flange width defines the profile's total width.
</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IRectangleHollowProfile.GetFlanges">
            <summary>The flanges (top and bottom) of the hollow rectangle.
The flange width defines the profile's total width.
</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IRectangleHollowProfile.SetDepth(System.Double)">
            <summary>The depth of the hollow rectangle.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IRectangleHollowProfile.GetDepth">
            <summary>The depth of the hollow rectangle.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.IRectangleHollowProfile">
            <summary>Defines a hollow rectangular section profile from
<see cref="!:Depth" />,
<see cref="!:Flanges" /> and
<see cref="!:Webs" />.<br /><center><svg height="350" width="350"><rect x="75" y="50" width="200" height="50" fill="#8da0cb" /><rect x="75" y="250" width="200" height="50" fill="#8da0cb" /><rect x="75" y="100" width="30" height="150" fill="#fc8d62" /><rect x="245" y="100" width="30" height="150" fill="#fc8d62" /><rect class="profile-line" x="75" y="50" width="200" height="250" fill="none" /><rect class="profile-line" x="105" y="100" width="140" height="150" fill="none" /><line class="profile-line" x1="75" y1="250" x2="275" y2="250" stroke-dasharray="4" /><line class="profile-line" x1="75" y1="100" x2="275" y2="100" stroke-dasharray="4" /><circle cx="200" cy="275" r="4" fill="black" /><circle cx="200" cy="75" r="4" fill="black" /><line class="profile-line" x1="200" y1="275" x2="200" y2="220" /><line class="profile-line" x1="200" y1="75" x2="200" y2="195" /><text class="profile-label" x="200" y="210" fill="black" text-anchor="middle">Flanges</text><line class="profile-line" x1="55" y1="50" x2="55" y2="300" /><line class="profile-line" x1="45" y1="50" x2="65" y2="50" /><line class="profile-line" x1="45" y1="300" x2="65" y2="300" /><text class="profile-label" x="-175" y="45" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><circle cx="260" cy="140" r="4" fill="black" /><line class="profile-line" x1="175" y1="140" x2="260" y2="140" /><circle cx="90" cy="140" r="4" fill="black" /><line class="profile-line" x1="90" y1="140" x2="125" y2="140" /><text class="profile-label" x="170" y="145" fill="black" text-anchor="end">Webs</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="120" y="185" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.IRectangleHollowProfile" /> inherits <see cref="T:SDK.Oasys.Profiles.IProfile" />.
<para>The hollow rectangle is centered at the origin of its local coordinate system.</para></remarks>
        </member>
        <member name="M:Oasys.Profiles.IRectangleHollowProfile.Create(UnitsNet.Length,Oasys.Profiles.IFlange,Oasys.Profiles.IWebConstant)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.IRectangleHollowProfile" /> profile from its
<see cref="P:Oasys.Profiles.IRectangleHollowProfile.Depth" />,
<see cref="P:Oasys.Profiles.IRectangleHollowProfile.Flanges" /><see cref="P:Oasys.Profiles.IRectangleHollowProfile.Webs" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="flanges">Defines the profile's flanges.</param>
            <param name="webs">Defines the profile's webs.</param>
            <returns>Hollow rectangle profile with the specified dimensions.</returns>
            <exception cref="!:System.ArgumentException">
When any of its dimensions is not a positive and finite value.
</exception>
            <exception cref="!:System.ArgumentNullException">If flanges is null</exception>
            <exception cref="!:System.ArgumentNullException">If webs is null</exception>
        </member>
        <member name="P:Oasys.Profiles.IRectangleHollowProfile.Webs">
            <summary>The webs (side walls) of the hollow rectangle.</summary>
            <exception cref="!:System.ArgumentNullException">If Webs is set to null</exception>
        </member>
        <member name="P:Oasys.Profiles.IRectangleHollowProfile.Flanges">
            <summary>The flanges (top and bottom) of the hollow rectangle.
The flange width defines the profile's total width.
</summary>
            <exception cref="!:System.ArgumentNullException">If Flanges is set to null</exception>
        </member>
        <member name="P:Oasys.Profiles.IRectangleHollowProfile.Depth">
            <summary>The depth of the hollow rectangle.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.IRectangleHollowProfile">
            <summary>Defines a hollow rectangular section profile from
<see cref="P:Oasys.Profiles.IRectangleHollowProfile.Depth" />,
<see cref="P:Oasys.Profiles.IRectangleHollowProfile.Flanges" /> and
<see cref="P:Oasys.Profiles.IRectangleHollowProfile.Webs" />.<br /><center><svg height="350" width="350"><rect x="75" y="50" width="200" height="50" fill="#8da0cb" /><rect x="75" y="250" width="200" height="50" fill="#8da0cb" /><rect x="75" y="100" width="30" height="150" fill="#fc8d62" /><rect x="245" y="100" width="30" height="150" fill="#fc8d62" /><rect class="profile-line" x="75" y="50" width="200" height="250" fill="none" /><rect class="profile-line" x="105" y="100" width="140" height="150" fill="none" /><line class="profile-line" x1="75" y1="250" x2="275" y2="250" stroke-dasharray="4" /><line class="profile-line" x1="75" y1="100" x2="275" y2="100" stroke-dasharray="4" /><circle cx="200" cy="275" r="4" fill="black" /><circle cx="200" cy="75" r="4" fill="black" /><line class="profile-line" x1="200" y1="275" x2="200" y2="220" /><line class="profile-line" x1="200" y1="75" x2="200" y2="195" /><text class="profile-label" x="200" y="210" fill="black" text-anchor="middle">Flanges</text><line class="profile-line" x1="55" y1="50" x2="55" y2="300" /><line class="profile-line" x1="45" y1="50" x2="65" y2="50" /><line class="profile-line" x1="45" y1="300" x2="65" y2="300" /><text class="profile-label" x="-175" y="45" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><circle cx="260" cy="140" r="4" fill="black" /><line class="profile-line" x1="175" y1="140" x2="260" y2="140" /><circle cx="90" cy="140" r="4" fill="black" /><line class="profile-line" x1="90" y1="140" x2="125" y2="140" /><text class="profile-label" x="170" y="145" fill="black" text-anchor="end">Webs</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="120" y="185" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.IRectangleHollowProfile" /> inherits <see cref="T:Oasys.Profiles.IProfile" />.
<para>The hollow rectangle is centered at the origin of its local coordinate system.</para></remarks>
        </member>
        <member name="M:SDK.Oasys.Profiles.IWebTapered.Create(System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.IWebTapered" /> from its
<see cref="!:TopThickness" /> and
<see cref="!:BottomThickness" />.
</summary>
            <param name="topThickness">Defines the web's top thickness.</param>
            <param name="bottomThickness">Defines the web's bottom thickness.</param>
            <returns>Tapered thickness web with the specified dimension.</returns>
            <exception cref="!:System.ArgumentException">
When any of its dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IWebTapered.SetBottomThickness(System.Double)">
            <summary>The bottom thickness.
</summary>
            <exception cref="!:System.ArgumentException">
When the bottom thickness is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IWebTapered.GetBottomThickness">
            <summary>The bottom thickness.
</summary>
            <exception cref="!:System.ArgumentException">
When the bottom thickness is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IWebTapered.SetTopThickness(System.Double)">
            <summary>The top thickness.
</summary>
            <exception cref="!:System.ArgumentException">
When the top thickness is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IWebTapered.GetTopThickness">
            <summary>The top thickness.
</summary>
            <exception cref="!:System.ArgumentException">
When the top thickness is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.IWebTapered">
            <summary>A tapered web used in profiles.
<center><svg height="350" width="350"><path class="profile-line" d="M120 75 L230 75 L200 275 L150 275 Z" fill="#fc8d62" /><line class="profile-line" x1="120" y1="60" x2="230" y2="60" /><line class="profile-line" x1="120" y1="50" x2="120" y2="70" /><line class="profile-line" x1="230" y1="50" x2="230" y2="70" /><text class="profile-label" x="175" y="50" fill="black" text-anchor="middle">Top Thickness</text><line class="profile-line" x1="150" y1="290" x2="200" y2="290" /><line class="profile-line" x1="150" y1="280" x2="150" y2="300" /><line class="profile-line" x1="200" y1="280" x2="200" y2="300" /><text class="profile-label" x="175" y="320" fill="black" text-anchor="middle">Bottom Thickness</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.IWebTapered" /> inherits <see cref="T:SDK.Oasys.Profiles.IWeb" />.
<para>For constant thickness web see <see cref="!:IWebConstant" />.</para></remarks>
        </member>
        <member name="M:Oasys.Profiles.IWebTapered.Create(UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.IWebTapered" /> from its
<see cref="P:Oasys.Profiles.IWebTapered.TopThickness" /> and
<see cref="P:Oasys.Profiles.IWebTapered.BottomThickness" />.
</summary>
            <param name="topThickness">Defines the web's top thickness.</param>
            <param name="bottomThickness">Defines the web's bottom thickness.</param>
            <returns>Tapered thickness web with the specified dimension.</returns>
            <exception cref="!:System.ArgumentException">
When any of its dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IWebTapered.BottomThickness">
            <summary>The bottom thickness.
</summary>
            <exception cref="!:System.ArgumentException">
When the bottom thickness is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IWebTapered.TopThickness">
            <summary>The top thickness.
</summary>
            <exception cref="!:System.ArgumentException">
When the top thickness is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.IWebTapered">
            <summary>A tapered web used in profiles.
<center><svg height="350" width="350"><path class="profile-line" d="M120 75 L230 75 L200 275 L150 275 Z" fill="#fc8d62" /><line class="profile-line" x1="120" y1="60" x2="230" y2="60" /><line class="profile-line" x1="120" y1="50" x2="120" y2="70" /><line class="profile-line" x1="230" y1="50" x2="230" y2="70" /><text class="profile-label" x="175" y="50" fill="black" text-anchor="middle">Top Thickness</text><line class="profile-line" x1="150" y1="290" x2="200" y2="290" /><line class="profile-line" x1="150" y1="280" x2="150" y2="300" /><line class="profile-line" x1="200" y1="280" x2="200" y2="300" /><text class="profile-label" x="175" y="320" fill="black" text-anchor="middle">Bottom Thickness</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.IWebTapered" /> inherits <see cref="T:Oasys.Profiles.IWeb" />.
<para>For constant thickness web see <see cref="!:IWebConstant" />.</para></remarks>
        </member>
        <member name="M:SDK.Oasys.Profiles.ITrapezoidProfile.Create(System.Double,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.ITrapezoidProfile" /> profile from its
<see cref="!:ITrapezoidProfileAbstractInterface.Depth" /><see cref="!:TopWidth" /> and
<see cref="!:BottomWidth" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="topWidth">Defines the profile's top width.</param>
            <param name="bottomWidth">Defines the profile's bottom width.</param>
            <returns>Trapezoid profile with the specified dimensions.</returns>
            <exception cref="!:System.ArgumentException">
When any of its dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ITrapezoidProfile.SetBottomWidth(System.Double)">
            <summary>The bottom width of trapezoidal profile. Bottom is relative to the local z-axis.
</summary>
            <exception cref="!:System.ArgumentException">
When the width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ITrapezoidProfile.GetBottomWidth">
            <summary>The bottom width of trapezoidal profile. Bottom is relative to the local z-axis.
</summary>
            <exception cref="!:System.ArgumentException">
When the width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ITrapezoidProfile.SetTopWidth(System.Double)">
            <summary>The top width of trapezoidal profile. Top is relative to the local z-axis.
</summary>
            <exception cref="!:System.ArgumentException">
When the width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ITrapezoidProfile.GetTopWidth">
            <summary>The top width of trapezoidal profile. Top is relative to the local z-axis.
</summary>
            <exception cref="!:System.ArgumentException">
When the width is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.ITrapezoidProfile">
            <summary>Defines a trapezoidal profile.
<center><svg height="350" width="350"><path class="profile-line" d="M75 75 L275 75 L225 275 L125 275 Z" fill="#8da0cb" /><line class="profile-line" x1="75" y1="60" x2="275" y2="60" /><line class="profile-line" x1="75" y1="50" x2="75" y2="70" /><line class="profile-line" x1="275" y1="50" x2="275" y2="70" /><text class="profile-label" x="175" y="50" fill="black" text-anchor="middle">Top Width</text><line class="profile-line" x1="125" y1="290" x2="225" y2="290" /><line class="profile-line" x1="125" y1="280" x2="125" y2="300" /><line class="profile-line" x1="225" y1="280" x2="225" y2="300" /><text class="profile-label" x="175" y="320" fill="black" text-anchor="middle">Bottom Width</text><line class="profile-line" x1="35" y1="75" x2="35" y2="275" /><line class="profile-line" x1="25" y1="75" x2="70" y2="75" /><line class="profile-line" x1="25" y1="275" x2="105" y2="275" /><text class="profile-label" x="-175" y="25" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><line class="profile-line" x1="60" y1="75" x2="60" y2="175" /><line class="profile-line" x1="50" y1="175" x2="150" y2="175" /><text class="profile-label" x="-125" y="55" fill="black" text-anchor="middle" transform="rotate(-90)">0.5 × Depth</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="175" y="165" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.ITrapezoidProfile" /> inherits <see cref="T:SDK.Oasys.Profiles.ITrapezoidProfileAbstractInterface" /> and <see cref="T:SDK.Oasys.Profiles.IProfile" /> .
<para>The trapezoid is centered at the origin of its local coordinate system.</para></remarks>
        </member>
        <member name="M:Oasys.Profiles.ITrapezoidProfile.Create(UnitsNet.Length,UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.ITrapezoidProfile" /> profile from its
<see cref="!:ITrapezoidProfileAbstractInterface.Depth" /><see cref="P:Oasys.Profiles.ITrapezoidProfile.TopWidth" /> and
<see cref="P:Oasys.Profiles.ITrapezoidProfile.BottomWidth" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="topWidth">Defines the profile's top width.</param>
            <param name="bottomWidth">Defines the profile's bottom width.</param>
            <returns>Trapezoid profile with the specified dimensions.</returns>
            <exception cref="!:System.ArgumentException">
When any of its dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.ITrapezoidProfile.BottomWidth">
            <summary>The bottom width of trapezoidal profile. Bottom is relative to the local z-axis.
</summary>
            <exception cref="!:System.ArgumentException">
When the width is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.ITrapezoidProfile.TopWidth">
            <summary>The top width of trapezoidal profile. Top is relative to the local z-axis.
</summary>
            <exception cref="!:System.ArgumentException">
When the width is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.ITrapezoidProfile">
            <summary>Defines a trapezoidal profile.
<center><svg height="350" width="350"><path class="profile-line" d="M75 75 L275 75 L225 275 L125 275 Z" fill="#8da0cb" /><line class="profile-line" x1="75" y1="60" x2="275" y2="60" /><line class="profile-line" x1="75" y1="50" x2="75" y2="70" /><line class="profile-line" x1="275" y1="50" x2="275" y2="70" /><text class="profile-label" x="175" y="50" fill="black" text-anchor="middle">Top Width</text><line class="profile-line" x1="125" y1="290" x2="225" y2="290" /><line class="profile-line" x1="125" y1="280" x2="125" y2="300" /><line class="profile-line" x1="225" y1="280" x2="225" y2="300" /><text class="profile-label" x="175" y="320" fill="black" text-anchor="middle">Bottom Width</text><line class="profile-line" x1="35" y1="75" x2="35" y2="275" /><line class="profile-line" x1="25" y1="75" x2="70" y2="75" /><line class="profile-line" x1="25" y1="275" x2="105" y2="275" /><text class="profile-label" x="-175" y="25" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><line class="profile-line" x1="60" y1="75" x2="60" y2="175" /><line class="profile-line" x1="50" y1="175" x2="150" y2="175" /><text class="profile-label" x="-125" y="55" fill="black" text-anchor="middle" transform="rotate(-90)">0.5 × Depth</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="175" y="165" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.ITrapezoidProfile" /> inherits <see cref="T:Oasys.Profiles.ITrapezoidProfileAbstractInterface" /> and <see cref="T:Oasys.Profiles.IProfile" /> .
<para>The trapezoid is centered at the origin of its local coordinate system.</para></remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.Mesh.ITriangleFace.GetVertex3">
            <summary>The index of the third vertex.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Mesh.ITriangleFace.GetVertex2">
            <summary>The index of the second vertex.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Mesh.ITriangleFace.GetVertex1">
            <summary>The index of the first vertex.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Mesh.ITriangleFace">
            <summary>A face in a triangulated surface.
<para>See <see href="~/articles/glossary.md#triangle-facetriangle-face">Glossary</see></para></summary>
            <remarks>
Contains three vertex indices. A list of vertices that the indices refer to are
typically provided along with the faces (e.g. in <see cref="!:Oasys.AdSec.Mesh.ILoadSurface" />).
</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.Mesh.ILoadSurface.GetFaces">
            <summary>The faces of the surface, with consistent orientation.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Mesh.ILoadSurface.GetVertices">
            <summary>The vertices of the surface.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Mesh.ILoadSurface">
            <summary>
A triangulated surface in a Load coordinate system.
<para>See <see href="~/articles/glossary.md#load-surfaceload-surface">Glossary</see></para></summary>
            <remarks>
Each vertex is a <see cref="!:Oasys.AdSec.ILoad" />.
Each face is a <see cref="!:Oasys.AdSec.Mesh.ITriangleFace" /> which contains three references to
vertices in <see cref="!:Oasys.AdSec.Mesh.ILoadSurface.Vertices" />.
</remarks>
        </member>
        <member name="P:Oasys.AdSec.Mesh.ITriangleFace.Vertex3">
            <summary>The index of the third vertex.</summary>
        </member>
        <member name="P:Oasys.AdSec.Mesh.ITriangleFace.Vertex2">
            <summary>The index of the second vertex.</summary>
        </member>
        <member name="P:Oasys.AdSec.Mesh.ITriangleFace.Vertex1">
            <summary>The index of the first vertex.</summary>
        </member>
        <member name="T:Oasys.AdSec.Mesh.ITriangleFace">
            <summary>A face in a triangulated surface.
<para>See <see href="~/articles/glossary.md#triangle-facetriangle-face">Glossary</see></para></summary>
            <remarks>
Contains three vertex indices. A list of vertices that the indices refer to are
typically provided along with the faces (e.g. in <see cref="!:Oasys.AdSec.Mesh.ILoadSurface" />).
</remarks>
        </member>
        <member name="P:Oasys.AdSec.Mesh.ILoadSurface.Faces">
            <summary>The faces of the surface, with consistent orientation.</summary>
            <exception cref="!:System.ArgumentNullException">If Faces is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.Mesh.ILoadSurface.Vertices">
            <summary>The vertices of the surface.</summary>
            <exception cref="!:System.ArgumentNullException">If Vertices is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.Mesh.ILoadSurface">
            <summary>
A triangulated surface in a Load coordinate system.
<para>See <see href="~/articles/glossary.md#load-surfaceload-surface">Glossary</see></para></summary>
            <remarks>
Each vertex is a <see cref="!:Oasys.AdSec.ILoad" />.
Each face is a <see cref="!:Oasys.AdSec.Mesh.ITriangleFace" /> which contains three references to
vertices in <see cref="!:Oasys.AdSec.Mesh.ILoadSurface.Vertices" />.
</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Layers.ILayerByBarCount.Create(System.Int32,std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.IBarBundle&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.Layers.ILayerByBarCount" /> from the position
count and bar (or bundle of bars) to be placed at each position.
</summary>
            <param name="count">Defines the number of bars in the layer.</param>
            <param name="barBundle">Defines the bar (or bundle of bars) that will be placed at each position.</param>
            <returns>Reinforcement layer with the specified bar count and bar bundle.</returns>
            <exception cref="!:System.ArgumentException">
When the count is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Layers.ILayerByBarCount.SetCount(System.Int32)">
            <summary>The number of bars in the layer.
</summary>
            <exception cref="!:System.ArgumentException">
When the number of bars is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Layers.ILayerByBarCount.GetCount">
            <summary>The number of bars in the layer.
</summary>
            <exception cref="!:System.ArgumentException">
When the number of bars is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.Layers.ILayerByBarCount">
            <summary>A reinforcement layer defined by the number of bundles or single bars in the layer.
</summary>
            <remarks>
                <see cref="T:SDK.Oasys.AdSec.Reinforcement.Layers.ILayerByBarCount" /> inherits <see cref="T:SDK.Oasys.AdSec.Reinforcement.Layers.ILayer" />.
<para>It defines a reinforcement layer by the number of bundles or single bars.
The bundles or single bars are spaced out evenly over the available space.</para><img src="../images/ReinforcementGroups.png" /></remarks>
            <seealso cref="T:SDK.Oasys.AdSec.Reinforcement.Layers.ILayer" />
            <seealso cref="!:ILayerByBarPitch" />
            <example>
# [C#](#tab/tabid-1)
<code source="../../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ILayerByBarCount.cs" region="Usings" lang="csharp" /><code source="../../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ILayerByBarCount.cs" region="Snippet" lang="csharp" /><para>Example creating layer.</para>
# [Python](#tab/tabid-2)
<code source="../../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ILayerByBarCount.py" region="Imports" lang="python" /><code source="../../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ILayerByBarCount.py" region="Snippet" lang="python" /><para>Example creating layer.</para>
***
</example>
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.Layers.ILayerByBarCount.Create(System.Int32,Oasys.AdSec.Reinforcement.IBarBundle)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.Layers.ILayerByBarCount" /> from the position
count and bar (or bundle of bars) to be placed at each position.
</summary>
            <param name="count">Defines the number of bars in the layer.</param>
            <param name="barBundle">Defines the bar (or bundle of bars) that will be placed at each position.</param>
            <returns>Reinforcement layer with the specified bar count and bar bundle.</returns>
            <exception cref="!:System.ArgumentException">
When the count is not a positive and finite value.
</exception>
            <exception cref="!:System.ArgumentNullException">If barBundle is null</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.Layers.ILayerByBarCount.Count">
            <summary>The number of bars in the layer.
</summary>
            <exception cref="!:System.ArgumentException">
When the number of bars is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.Layers.ILayerByBarCount">
            <summary>A reinforcement layer defined by the number of bundles or single bars in the layer.
</summary>
            <remarks>
                <see cref="T:Oasys.AdSec.Reinforcement.Layers.ILayerByBarCount" /> inherits <see cref="T:Oasys.AdSec.Reinforcement.Layers.ILayer" />.
<para>It defines a reinforcement layer by the number of bundles or single bars.
The bundles or single bars are spaced out evenly over the available space.</para><img src="../images/ReinforcementGroups.png" /></remarks>
            <seealso cref="T:Oasys.AdSec.Reinforcement.Layers.ILayer" />
            <seealso cref="!:ILayerByBarPitch" />
            <example>
# [C#](#tab/tabid-1)
<code source="../../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ILayerByBarCount.cs" region="Usings" lang="csharp" /><code source="../../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ILayerByBarCount.cs" region="Snippet" lang="csharp" /><para>Example creating layer.</para>
# [Python](#tab/tabid-2)
<code source="../../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ILayerByBarCount.py" region="Imports" lang="python" /><code source="../../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ILayerByBarCount.py" region="Snippet" lang="python" /><para>Example creating layer.</para>
***
</example>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.IRC112.Edition_2011">
            <summary>The 2011 edition of IRC112</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.IRC112.Edition_2011">
            <summary>The 2011 edition of IRC112</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamAsymmetricalProfile.Create(System.Double,std.shared_ptr&lt;SDK.Oasys.Profiles.IFlange&gt;,std.shared_ptr&lt;SDK.Oasys.Profiles.IFlange&gt;,std.shared_ptr&lt;SDK.Oasys.Profiles.IWeb&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.IIBeamAsymmetricalProfile" /> profile from its
<see cref="!:IIBeamProfile.Depth" />,
<see cref="!:TopFlange" />,
<see cref="!:BottomFlange" /> and
<see cref="!:Web" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="topFlange">Defines the profile's top flange.</param>
            <param name="bottomFlange">Defines the profile's bottom flange.</param>
            <param name="web">Defines the profile's web.</param>
            <returns>I-beam-asymmetrical profile with the specified dimensions.</returns>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamAsymmetricalProfile.SetWeb(std.shared_ptr&lt;SDK.Oasys.Profiles.IWeb&gt;)">
            <summary>The web of the beam.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamAsymmetricalProfile.GetWeb">
            <summary>The web of the beam.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamAsymmetricalProfile.SetBottomFlange(std.shared_ptr&lt;SDK.Oasys.Profiles.IFlange&gt;)">
            <summary>The bottom flange of the beam. Bottom is relative to the beam local access.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamAsymmetricalProfile.GetBottomFlange">
            <summary>The bottom flange of the beam. Bottom is relative to the beam local access.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamAsymmetricalProfile.SetTopFlange(std.shared_ptr&lt;SDK.Oasys.Profiles.IFlange&gt;)">
            <summary>The top flange of the beam. Top is relative to the beam local access.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamAsymmetricalProfile.GetTopFlange">
            <summary>The top flange of the beam. Top is relative to the beam local access.</summary>
        </member>
        <member name="T:SDK.Oasys.Profiles.IIBeamAsymmetricalProfile">
            <summary>An IBeam asymmetrical profile.
<center><svg height="350" width="350"><rect x="100" y="50" width="150" height="30" fill="#8da0cb" /><rect x="75" y="250" width="200" height="50" fill="#8da0cb" /><rect x="160" y="80" width="30" height="170" fill="#fc8d62" /><path class="profile-outline" d="M100 50 L250 50 L250 80 L190 80 L190 250 L275 250 L275 300 L75 300 L75 250 L160 250 L160 80 L100 80 Z" /><line class="profile-line" x1="160" y1="250" x2="190" y2="250" stroke-dasharray="4" /><line class="profile-line" x1="160" y1="80" x2="190" y2="80" stroke-dasharray="4" /><circle cx="260" cy="275" r="4" fill="black" /><line class="profile-line" x1="260" y1="275" x2="260" y2="230" /><text class="profile-label" x="260" y="220" fill="black" text-anchor="middle">Bottom Flange</text><circle cx="240" cy="65" r="4" fill="black" /><line class="profile-line" x1="240" y1="65" x2="240" y2="100" /><text class="profile-label" x="240" y="120" fill="black" text-anchor="middle">Top Flange</text><line class="profile-line" x1="55" y1="50" x2="55" y2="300" /><line class="profile-line" x1="45" y1="50" x2="90" y2="50" /><line class="profile-line" x1="45" y1="300" x2="65" y2="300" /><text class="profile-label" x="-175" y="45" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><line class="profile-line" x1="80" y1="50" x2="80" y2="175" /><line class="profile-line" x1="70" y1="175" x2="150" y2="175" /><text class="profile-label" x="-110" y="75" fill="black" text-anchor="middle" transform="rotate(-90)">0.5 × Depth</text><circle cx="175" cy="140" r="4" fill="black" /><line class="profile-line" x1="135" y1="140" x2="175" y2="140" /><text class="profile-label" x="130" y="145" fill="black" text-anchor="end">Web</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="195" y="175" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.IIBeamProfile" /> inherits <see cref="T:SDK.Oasys.Profiles.IIBeamProfile" /> and <see cref="T:SDK.Oasys.Profiles.IProfile" />.
<para>The I-beam is centered at the origin of its local coordinate system.</para></remarks>
        </member>
        <member name="M:Oasys.Profiles.IIBeamAsymmetricalProfile.Create(UnitsNet.Length,Oasys.Profiles.IFlange,Oasys.Profiles.IFlange,Oasys.Profiles.IWeb)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.IIBeamAsymmetricalProfile" /> profile from its
<see cref="!:IIBeamProfile.Depth" />,
<see cref="P:Oasys.Profiles.IIBeamAsymmetricalProfile.TopFlange" />,
<see cref="P:Oasys.Profiles.IIBeamAsymmetricalProfile.BottomFlange" /> and
<see cref="P:Oasys.Profiles.IIBeamAsymmetricalProfile.Web" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="topFlange">Defines the profile's top flange.</param>
            <param name="bottomFlange">Defines the profile's bottom flange.</param>
            <param name="web">Defines the profile's web.</param>
            <returns>I-beam-asymmetrical profile with the specified dimensions.</returns>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
            <exception cref="!:System.ArgumentNullException">If topFlange is null</exception>
            <exception cref="!:System.ArgumentNullException">If bottomFlange is null</exception>
            <exception cref="!:System.ArgumentNullException">If web is null</exception>
        </member>
        <member name="P:Oasys.Profiles.IIBeamAsymmetricalProfile.Web">
            <summary>The web of the beam.</summary>
            <exception cref="!:System.ArgumentNullException">If Web is set to null</exception>
        </member>
        <member name="P:Oasys.Profiles.IIBeamAsymmetricalProfile.BottomFlange">
            <summary>The bottom flange of the beam. Bottom is relative to the beam local access.</summary>
            <exception cref="!:System.ArgumentNullException">If BottomFlange is set to null</exception>
        </member>
        <member name="P:Oasys.Profiles.IIBeamAsymmetricalProfile.TopFlange">
            <summary>The top flange of the beam. Top is relative to the beam local access.</summary>
            <exception cref="!:System.ArgumentNullException">If TopFlange is set to null</exception>
        </member>
        <member name="T:Oasys.Profiles.IIBeamAsymmetricalProfile">
            <summary>An IBeam asymmetrical profile.
<center><svg height="350" width="350"><rect x="100" y="50" width="150" height="30" fill="#8da0cb" /><rect x="75" y="250" width="200" height="50" fill="#8da0cb" /><rect x="160" y="80" width="30" height="170" fill="#fc8d62" /><path class="profile-outline" d="M100 50 L250 50 L250 80 L190 80 L190 250 L275 250 L275 300 L75 300 L75 250 L160 250 L160 80 L100 80 Z" /><line class="profile-line" x1="160" y1="250" x2="190" y2="250" stroke-dasharray="4" /><line class="profile-line" x1="160" y1="80" x2="190" y2="80" stroke-dasharray="4" /><circle cx="260" cy="275" r="4" fill="black" /><line class="profile-line" x1="260" y1="275" x2="260" y2="230" /><text class="profile-label" x="260" y="220" fill="black" text-anchor="middle">Bottom Flange</text><circle cx="240" cy="65" r="4" fill="black" /><line class="profile-line" x1="240" y1="65" x2="240" y2="100" /><text class="profile-label" x="240" y="120" fill="black" text-anchor="middle">Top Flange</text><line class="profile-line" x1="55" y1="50" x2="55" y2="300" /><line class="profile-line" x1="45" y1="50" x2="90" y2="50" /><line class="profile-line" x1="45" y1="300" x2="65" y2="300" /><text class="profile-label" x="-175" y="45" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><line class="profile-line" x1="80" y1="50" x2="80" y2="175" /><line class="profile-line" x1="70" y1="175" x2="150" y2="175" /><text class="profile-label" x="-110" y="75" fill="black" text-anchor="middle" transform="rotate(-90)">0.5 × Depth</text><circle cx="175" cy="140" r="4" fill="black" /><line class="profile-line" x1="135" y1="140" x2="175" y2="140" /><text class="profile-label" x="130" y="145" fill="black" text-anchor="end">Web</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="195" y="175" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.IIBeamProfile" /> inherits <see cref="T:Oasys.Profiles.IIBeamProfile" /> and <see cref="T:Oasys.Profiles.IProfile" />.
<para>The I-beam is centered at the origin of its local coordinate system.</para></remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IBarBundle.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.IReinforcement&gt;,System.Double,System.Int32)">
            <summary>
Creates a new multi-bar <see cref="T:SDK.Oasys.AdSec.Reinforcement.IBarBundle" /> from a material,
diameter of each bar and the number of bars in the bundle.
</summary>
            <param name="material">Defines the reinforcement bar's material.</param>
            <param name="diameter">Defines the reinforcement bar's diameter.</param>
            <param name="countPerBundle">Defines the number of bars in the bundle.</param>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IBarBundle.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.IReinforcement&gt;,System.Double)">
            <summary>
Creates a new single-bar <see cref="T:SDK.Oasys.AdSec.Reinforcement.IBarBundle" /> from a material and diameter.
</summary>
            <remarks>The <see cref="!:CountPerBundle" /> will be initialised to one.</remarks>
            <param name="material">Defines the reinforcement bar's material.</param>
            <param name="diameter">Defines the reinforcement bar's diameter.</param>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IBarBundle.SetCountPerBundle(System.Int32)">
            <summary>The number of reinforcement bars per bundle.
</summary>
            <exception cref="!:System.ArgumentException">
When number of bars per bundle is less than one or greater than four.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IBarBundle.GetCountPerBundle">
            <summary>The number of reinforcement bars per bundle.
</summary>
            <exception cref="!:System.ArgumentException">
When number of bars per bundle is less than one or greater than four.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IBarBundle.SetDiameter(System.Double)">
            <summary>The diameter of reinforcement bar.
</summary>
            <exception cref="!:System.ArgumentException">
When the diameter is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IBarBundle.GetDiameter">
            <summary>The diameter of reinforcement bar.
</summary>
            <exception cref="!:System.ArgumentException">
When the diameter is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IBarBundle.SetMaterial(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.IReinforcement&gt;)">
            <summary>The material of reinforcement bar.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.IBarBundle.GetMaterial">
            <summary>The material of reinforcement bar.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.IBarBundle">
            <summary>A bar bundle is defined by bar diameter, material and number of bars in the bundle.
It can have one to four reinforcement bars.
<para>See <see href="~/articles/glossary.md#bar-bundlebar-bundle">Glossary</see></para></summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve.StressAt(System.Double)">
            <summary>The stress at a given strain.
</summary>
            <param name="strain">The strain at which stress is to be calculated.</param>
            <returns> Compressive stress for a negative strain
and tensile stress for a positive strain.
</returns>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve&gt;,std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve" /> from
<see cref="!:Tension" /> and <see cref="!:Compression" /> stress-strain curves.
</summary>
            <param name="tension">The tension stress-strain curve.</param>
            <param name="compression">The compression stress-strain curve.</param>
            <returns>
Stress-strain relationship with the specified tension and compression curves.
</returns>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve.GetCompression">
            <summary>The compression stress-strain curve.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve.GetTension">
            <summary>The tension stress-strain curve.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve">
            <summary>
A stress-strain relationship for a <see cref="T:SDK.Oasys.AdSec.Materials.IMaterial" />.
<para>See <see href="~/articles/glossary.md#tension-compression-curvetension-compression-curve">Glossary</see></para></summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.IReinforcement.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve&gt;,std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve&gt;)">
            <summary>
Creates a new reinforcement material from its strength (ULS) and
serviceability (SLS) stress-strain relationship.
</summary>
            <param name="strength">The material's stress-strain relationship for strength (ULS) analysis.</param>
            <param name="serviceability">The material's stress-strain relationship for serviceability (SLS) analysis.</param>
            <returns>A new reinforcement material with the given sterss-strain relationships.</returns>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.IReinforcement">
            <summary>
A reinforcement material, defined by its stress-strain relationships for both strength and serviceability analysis.
<para>For pre-defined standard reinforcement materials, see <see cref="!:Oasys.AdSec.StandardMaterials" /></para></summary>
            <seealso cref="T:SDK.Oasys.AdSec.Materials.IMaterial" />
            <seealso cref="!:StressStrainCurves.ITensionCompressionCurve" />
        </member>
        <member name="M:Oasys.AdSec.Materials.IReinforcement.Create(Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve,Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve)">
            <summary>
Creates a new reinforcement material from its strength (ULS) and
serviceability (SLS) stress-strain relationship.
</summary>
            <param name="strength">The material's stress-strain relationship for strength (ULS) analysis.</param>
            <param name="serviceability">The material's stress-strain relationship for serviceability (SLS) analysis.</param>
            <returns>A new reinforcement material with the given sterss-strain relationships.</returns>
            <exception cref="!:System.ArgumentNullException">If strength is null</exception>
            <exception cref="!:System.ArgumentNullException">If serviceability is null</exception>
        </member>
        <member name="T:Oasys.AdSec.Materials.IReinforcement">
            <summary>
A reinforcement material, defined by its stress-strain relationships for both strength and serviceability analysis.
<para>For pre-defined standard reinforcement materials, see <see cref="!:Oasys.AdSec.StandardMaterials" /></para></summary>
            <seealso cref="T:Oasys.AdSec.Materials.IMaterial" />
            <seealso cref="!:StressStrainCurves.ITensionCompressionCurve" />
        </member>
        <member name="M:SDK.Oasys.AdSec.IVersion.Api">
            <summary>The version of the API.</summary>
        </member>
        <member name="M:Oasys.AdSec.IVersion.Api">
            <summary>The version of the API.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IWarning.GetRecordTime">
            <summary>Time in UTC at which the observation was recorded.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IWarning.GetDescription">
            <summary>Describes the observation.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.IWarning">
            <summary>A notification with information about any unusual observation.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStiffness.GetZZ">
            <summary>The bending stiffness about the z-axis in the local coordinate system.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStiffness.GetYY">
            <summary>The bending stiffness about the y-axis in the local coordinate system.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IStiffness.GetX">
            <summary>The axial stiffness.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.IStiffness">
            <summary>Defines an axial stiffness, bending stiffness about local y-axis and bending
stiffness about local z-axis.
<para>See <see href="~/articles/glossary.md#stiffnessstiffness">Glossary</see></para></summary>
            <seealso cref="!:IServiceabilityResult.SecantStiffness" />
        </member>
        <member name="M:SDK.Oasys.AdSec.ICrack.GetPosition">
            <summary>The crack position.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ICrack.GetWidth">
            <summary>The crack width.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.ICrack">
            <summary>A crack result. Refer to <see cref="T:SDK.Oasys.AdSec.IServiceabilityResult" /><para>See <see href="~/articles/glossary.md#crackcrack">Glossary</see></para></summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IStadiumProfile.Create(System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.IStadiumProfile" /> profile from its
<see cref="!:Depth" /> and
<see cref="!:Width" />.
</summary>
            <param name="depth"> Defines the profile's overall depth considering the
side length of the rectangle and the radii of the semicircles on the two ends.
</param>
            <param name="width"> Defines the profile's width (diameter of the semicircles).</param>
            <exception cref="!:System.ArgumentException">
When any of the dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IStadiumProfile.SetWidth(System.Double)">
            <summary>The profile's width (diameter of the semicircles).
</summary>
            <exception cref="!:System.ArgumentException">
When the width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IStadiumProfile.GetWidth">
            <summary>The profile's width (diameter of the semicircles).
</summary>
            <exception cref="!:System.ArgumentException">
When the width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IStadiumProfile.SetDepth(System.Double)">
            <summary>The profile's overall depth considering the side length
of the rectangle and the radii of the semicircles on the two ends.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IStadiumProfile.GetDepth">
            <summary>The profile's overall depth considering the side length
of the rectangle and the radii of the semicircles on the two ends.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.IStadiumProfile">
            <summary>
A stadium section profile.
It is a profile consisting of a rectangle whose ends are capped off with semicircles.
<center><svg height="350" width="350"><path class="profile-line" d="M100,100 A75,75 1 0,1 250,100 L250,200 A75,75 1 0,1 100,200z" fill="#8da0cb" /><line class="profile-line" x1="80" y1="25" x2="80" y2="275" /><line class="profile-line" x1="70" y1="25" x2="135" y2="25" /><line class="profile-line" x1="70" y1="275" x2="135" y2="275" /><text class="profile-label" x="-150" y="70" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><line class="profile-line" x1="100" y1="295" x2="250" y2="295" /><line class="profile-line" x1="100" y1="250" x2="100" y2="305" /><line class="profile-line" x1="250" y1="250" x2="250" y2="305" /><text class="profile-label" x="175" y="320" fill="black" text-anchor="middle">Width</text><circle class="profile-origin" cx="175" cy="150" r="6" /><text class="profile-label" x="175" y="140" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.IStadiumProfile" /> inherits <see cref="T:SDK.Oasys.Profiles.IProfile" />.</remarks>
        </member>
        <member name="M:Oasys.Profiles.IStadiumProfile.Create(UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.IStadiumProfile" /> profile from its
<see cref="P:Oasys.Profiles.IStadiumProfile.Depth" /> and
<see cref="P:Oasys.Profiles.IStadiumProfile.Width" />.
</summary>
            <param name="depth"> Defines the profile's overall depth considering the
side length of the rectangle and the radii of the semicircles on the two ends.
</param>
            <param name="width"> Defines the profile's width (diameter of the semicircles).</param>
            <exception cref="!:System.ArgumentException">
When any of the dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IStadiumProfile.Width">
            <summary>The profile's width (diameter of the semicircles).
</summary>
            <exception cref="!:System.ArgumentException">
When the width is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IStadiumProfile.Depth">
            <summary>The profile's overall depth considering the side length
of the rectangle and the radii of the semicircles on the two ends.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.IStadiumProfile">
            <summary>
A stadium section profile.
It is a profile consisting of a rectangle whose ends are capped off with semicircles.
<center><svg height="350" width="350"><path class="profile-line" d="M100,100 A75,75 1 0,1 250,100 L250,200 A75,75 1 0,1 100,200z" fill="#8da0cb" /><line class="profile-line" x1="80" y1="25" x2="80" y2="275" /><line class="profile-line" x1="70" y1="25" x2="135" y2="25" /><line class="profile-line" x1="70" y1="275" x2="135" y2="275" /><text class="profile-label" x="-150" y="70" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><line class="profile-line" x1="100" y1="295" x2="250" y2="295" /><line class="profile-line" x1="100" y1="250" x2="100" y2="305" /><line class="profile-line" x1="250" y1="250" x2="250" y2="305" /><text class="profile-label" x="175" y="320" fill="black" text-anchor="middle">Width</text><circle class="profile-origin" cx="175" cy="150" r="6" /><text class="profile-label" x="175" y="140" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.IStadiumProfile" /> inherits <see cref="T:Oasys.Profiles.IProfile" />.</remarks>
        </member>
        <member name="M:SDK.Oasys.Profiles.IPolygon.Create">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.IPolygon" />.
</summary>
            <returns>Polygon with zero vertices.</returns>
        </member>
        <member name="M:SDK.Oasys.Profiles.IPolygon.SetPoints(std.shared_ptr&lt;SDK.Oasys.Collections.IList&gt;)">
            <summary>The vertices of the polygon.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IPolygon.GetPoints">
            <summary>The vertices of the polygon.</summary>
        </member>
        <member name="T:SDK.Oasys.Profiles.IPolygon">
            <summary>A 2D polygon for defining section profile geometry.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IPerimeterProfile.Create(std.shared_ptr&lt;SDK.Oasys.Profiles.IProfile&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.IPerimeterProfile" /> profile from any other profile.
</summary>
            <param name="profile">The profile to be converted to an equivalent perimeter profile.</param>
            <returns>Perimeter profile equivalent to the given profile.</returns>
        </member>
        <member name="M:SDK.Oasys.Profiles.IPerimeterProfile.Create">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.IPerimeterProfile" /> profile.
</summary>
            <returns>Perimeter profile with empty solid and void polygons.</returns>
        </member>
        <member name="M:SDK.Oasys.Profiles.IPerimeterProfile.SetVoidPolygons(std.shared_ptr&lt;SDK.Oasys.Collections.IList&gt;)">
            <summary>The void polygons within the solid polygon of the perimeter profile.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IPerimeterProfile.GetVoidPolygons">
            <summary>The void polygons within the solid polygon of the perimeter profile.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IPerimeterProfile.SetSolidPolygon(std.shared_ptr&lt;SDK.Oasys.Profiles.IPolygon&gt;)">
            <summary>The solid polygon of the perimeter profile.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IPerimeterProfile.GetSolidPolygon">
            <summary>The solid polygon of the perimeter profile.</summary>
        </member>
        <member name="T:SDK.Oasys.Profiles.IPerimeterProfile">
            <summary>Defines a perimeter section profile from
<see cref="!:SolidPolygon" /> and
<see cref="!:VoidPolygons" />.<br /><center><svg height="350" width="350"><rect class="profile-line" x="75" y="50" width="200" height="200" fill="#8da0cb" /><rect class="profile-line" x="105" y="120" width="60" height="60" fill="white" /><rect class="profile-line" x="185" y="120" width="60" height="60" fill="white" /><circle cx="175" cy="85" r="4" fill="black" /><line class="profile-line" x1="175" y1="85" x2="175" y2="30" /><text class="profile-label" x="175" y="25" fill="black" text-anchor="middle">Solid polygon</text><text class="profile-label" x="70" y="40" fill="black" text-anchor="end">P1</text><text class="profile-label" x="280" y="40" fill="black" text-anchor="start">P2</text><text class="profile-label" x="280" y="265" fill="black" text-anchor="start">P3</text><text class="profile-label" x="70" y="265" fill="black" text-anchor="end">P4</text><text class="profile-label" x="100" y="110" fill="black" text-anchor="middle">p11</text><text class="profile-label" x="158" y="110" fill="black" text-anchor="middle">p12</text><text class="profile-label" x="158" y="200" fill="black" text-anchor="middle">p13</text><text class="profile-label" x="100" y="200" fill="black" text-anchor="middle">p14</text><text class="profile-label" x="192" y="110" fill="black" text-anchor="middle">p21</text><text class="profile-label" x="250" y="110" fill="black" text-anchor="middle">p22</text><text class="profile-label" x="250" y="200" fill="black" text-anchor="middle">p23</text><text class="profile-label" x="192" y="200" fill="black" text-anchor="middle">p24</text><text class="profile-label" x="175" y="285" fill="black" text-anchor="middle">Void polygons</text><circle cx="135" cy="150" r="4" fill="black" /><circle cx="215" cy="150" r="4" fill="black" /><line class="profile-line" x1="135" y1="150" x2="135" y2="270" /><line class="profile-line" x1="215" y1="150" x2="215" y2="270" /><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
  </style></svg></center><para><see cref="T:SDK.Oasys.Profiles.IPerimeterProfile" /> inherits <see cref="T:SDK.Oasys.Profiles.IProfile" />.
</para><para>
See <see href="~/articles/glossary.md#perimeter-profileperimeter-profile">Glossary</see></para></summary>
        </member>
        <member name="M:Oasys.Profiles.IPolygon.Create">
            <summary>Creates a new <see cref="T:Oasys.Profiles.IPolygon" />.
</summary>
            <returns>Polygon with zero vertices.</returns>
        </member>
        <member name="P:Oasys.Profiles.IPolygon.Points">
            <summary>The vertices of the polygon.</summary>
            <exception cref="!:System.ArgumentNullException">If Points is set to null</exception>
        </member>
        <member name="T:Oasys.Profiles.IPolygon">
            <summary>A 2D polygon for defining section profile geometry.</summary>
        </member>
        <member name="M:Oasys.Profiles.IPerimeterProfile.Create(Oasys.Profiles.IProfile)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.IPerimeterProfile" /> profile from any other profile.
</summary>
            <param name="profile">The profile to be converted to an equivalent perimeter profile.</param>
            <returns>Perimeter profile equivalent to the given profile.</returns>
            <exception cref="!:System.ArgumentNullException">If profile is null</exception>
        </member>
        <member name="M:Oasys.Profiles.IPerimeterProfile.Create">
            <summary>Creates a new <see cref="T:Oasys.Profiles.IPerimeterProfile" /> profile.
</summary>
            <returns>Perimeter profile with empty solid and void polygons.</returns>
        </member>
        <member name="P:Oasys.Profiles.IPerimeterProfile.VoidPolygons">
            <summary>The void polygons within the solid polygon of the perimeter profile.</summary>
            <exception cref="!:System.ArgumentNullException">If VoidPolygons is set to null</exception>
        </member>
        <member name="P:Oasys.Profiles.IPerimeterProfile.SolidPolygon">
            <summary>The solid polygon of the perimeter profile.</summary>
            <exception cref="!:System.ArgumentNullException">If SolidPolygon is set to null</exception>
        </member>
        <member name="T:Oasys.Profiles.IPerimeterProfile">
            <summary>Defines a perimeter section profile from
<see cref="P:Oasys.Profiles.IPerimeterProfile.SolidPolygon" /> and
<see cref="P:Oasys.Profiles.IPerimeterProfile.VoidPolygons" />.<br /><center><svg height="350" width="350"><rect class="profile-line" x="75" y="50" width="200" height="200" fill="#8da0cb" /><rect class="profile-line" x="105" y="120" width="60" height="60" fill="white" /><rect class="profile-line" x="185" y="120" width="60" height="60" fill="white" /><circle cx="175" cy="85" r="4" fill="black" /><line class="profile-line" x1="175" y1="85" x2="175" y2="30" /><text class="profile-label" x="175" y="25" fill="black" text-anchor="middle">Solid polygon</text><text class="profile-label" x="70" y="40" fill="black" text-anchor="end">P1</text><text class="profile-label" x="280" y="40" fill="black" text-anchor="start">P2</text><text class="profile-label" x="280" y="265" fill="black" text-anchor="start">P3</text><text class="profile-label" x="70" y="265" fill="black" text-anchor="end">P4</text><text class="profile-label" x="100" y="110" fill="black" text-anchor="middle">p11</text><text class="profile-label" x="158" y="110" fill="black" text-anchor="middle">p12</text><text class="profile-label" x="158" y="200" fill="black" text-anchor="middle">p13</text><text class="profile-label" x="100" y="200" fill="black" text-anchor="middle">p14</text><text class="profile-label" x="192" y="110" fill="black" text-anchor="middle">p21</text><text class="profile-label" x="250" y="110" fill="black" text-anchor="middle">p22</text><text class="profile-label" x="250" y="200" fill="black" text-anchor="middle">p23</text><text class="profile-label" x="192" y="200" fill="black" text-anchor="middle">p24</text><text class="profile-label" x="175" y="285" fill="black" text-anchor="middle">Void polygons</text><circle cx="135" cy="150" r="4" fill="black" /><circle cx="215" cy="150" r="4" fill="black" /><line class="profile-line" x1="135" y1="150" x2="135" y2="270" /><line class="profile-line" x1="215" y1="150" x2="215" y2="270" /><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
  </style></svg></center><para><see cref="T:Oasys.Profiles.IPerimeterProfile" /> inherits <see cref="T:Oasys.Profiles.IProfile" />.
</para><para>
See <see href="~/articles/glossary.md#perimeter-profileperimeter-profile">Glossary</see></para></summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IPoint.Create(System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.IPoint" /> from
<see cref="!:Y" /> and
<see cref="!:Z" />.
</summary>
            <param name="y">The local Y coordinate.</param>
            <param name="z">The local Z coordinate.</param>
            <returns>Point with the specified local Y and Z coordinates.</returns>
            <exception cref="!:System.ArgumentException">
When any value is out of range.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IPoint.SetZ(System.Double)">
            <summary>The local Z coordinate.
</summary>
            <exception cref="!:System.ArgumentException">
When the value is out of range.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IPoint.GetZ">
            <summary>The local Z coordinate.
</summary>
            <exception cref="!:System.ArgumentException">
When the value is out of range.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IPoint.SetY(System.Double)">
            <summary>The local Y coordinate.
</summary>
            <exception cref="!:System.ArgumentException">
When the value is out of range.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IPoint.GetY">
            <summary>The local Y coordinate.
</summary>
            <exception cref="!:System.ArgumentException">
When the value is out of range.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.IPoint">
            <summary>A 2D vertex in the yz-plane.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Layers.ILayer.SetBarBundle(std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.IBarBundle&gt;)">
            <summary>The bar (or bundle of bars) that will be placed at each position.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Layers.ILayer.GetBarBundle">
            <summary>The bar (or bundle of bars) that will be placed at each position.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.Layers.ILayer">
            <summary>A reinforcement layer.
<para>See <see href="~/articles/glossary.md#layerlayer">Glossary</see></para></summary>
            <remarks>Reinforcement layers are used by reinforcement groups,
<see cref="!:Oasys.AdSec.Reinforcement.Groups.IGroup" />.
Layers define the number of bars in each reinforcement bundle, their diameter and material.
<para>ILayer is a base class. </para><para>Use <see cref="!:ILayerByBarCount" /> to define layers by number of bundles or single bars. </para><para>Use <see cref="!:ILayerByBarPitch" /> to define layers by the
<see cref="!:ILayerByBarPitch.Pitch" /> between bundles or single bars.
</para><img src="../images/ReinforcementGroups.png" /></remarks>
            <seealso cref="!:Oasys.AdSec.Reinforcement.Groups.IGroup" />
            <seealso cref="!:ILayerByBarCount" />
            <seealso cref="!:ILayerByBarPitch" />
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.IBarBundle.Create(Oasys.AdSec.Materials.IReinforcement,UnitsNet.Length,System.Int32)">
            <summary>
Creates a new multi-bar <see cref="T:Oasys.AdSec.Reinforcement.IBarBundle" /> from a material,
diameter of each bar and the number of bars in the bundle.
</summary>
            <param name="material">Defines the reinforcement bar's material.</param>
            <param name="diameter">Defines the reinforcement bar's diameter.</param>
            <param name="countPerBundle">Defines the number of bars in the bundle.</param>
            <exception cref="!:System.ArgumentNullException">If material is null</exception>
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.IBarBundle.Create(Oasys.AdSec.Materials.IReinforcement,UnitsNet.Length)">
            <summary>
Creates a new single-bar <see cref="T:Oasys.AdSec.Reinforcement.IBarBundle" /> from a material and diameter.
</summary>
            <remarks>The <see cref="P:Oasys.AdSec.Reinforcement.IBarBundle.CountPerBundle" /> will be initialised to one.</remarks>
            <param name="material">Defines the reinforcement bar's material.</param>
            <param name="diameter">Defines the reinforcement bar's diameter.</param>
            <exception cref="!:System.ArgumentNullException">If material is null</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.IBarBundle.CountPerBundle">
            <summary>The number of reinforcement bars per bundle.
</summary>
            <exception cref="!:System.ArgumentException">
When number of bars per bundle is less than one or greater than four.
</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.IBarBundle.Diameter">
            <summary>The diameter of reinforcement bar.
</summary>
            <exception cref="!:System.ArgumentException">
When the diameter is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.IBarBundle.Material">
            <summary>The material of reinforcement bar.</summary>
            <exception cref="!:System.ArgumentNullException">If Material is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.IBarBundle">
            <summary>A bar bundle is defined by bar diameter, material and number of bars in the bundle.
It can have one to four reinforcement bars.
<para>See <see href="~/articles/glossary.md#bar-bundlebar-bundle">Glossary</see></para></summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ICircleGroup.Create(std.shared_ptr&lt;SDK.Oasys.Profiles.IPoint&gt;,System.Double,System.Double,std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.Layers.ILayer&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.Groups.ICircleGroup" /> reinforcement group from its
<see cref="!:Centre" />,
<see cref="!:Radius" />,
<see cref="!:StartAngle" /> and
<see cref="!:Layer" />.
</summary>
            <param name="centre">Defines the circle's centre.</param>
            <param name="radius">Defines the circle's radius.</param>
            <param name="startAngle">Defines the circle's start angle.<br />
Positive angle is considered anti-clockwise.
</param>
            <param name="layer">Defines the bar (or bar bundles) that will be positioned around the circle.</param>
            <returns>A new circular reinforcement group.</returns>
            <exception cref="!:System.ArgumentException">
When the radius is not a positive and finite value.
</exception>
            <exception cref="!:System.ArgumentException">
When the start angle is not a finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ICircleGroup.SetLayer(std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.Layers.ILayer&gt;)">
            <summary>The layer of reinforcement to be positioned around the circle.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ICircleGroup.GetLayer">
            <summary>The layer of reinforcement to be positioned around the circle.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ICircleGroup.SetStartAngle(System.Double)">
            <summary>The start angle of the circle.<br />
Positive angle is considered anti-clockwise.
</summary>
            <exception cref="!:System.ArgumentException">
When the angle is not a finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ICircleGroup.GetStartAngle">
            <summary>The start angle of the circle.<br />
Positive angle is considered anti-clockwise.
</summary>
            <exception cref="!:System.ArgumentException">
When the angle is not a finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ICircleGroup.SetRadius(System.Double)">
            <summary>The radius of the circle.
</summary>
            <exception cref="!:System.ArgumentException">
When the radius is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ICircleGroup.GetRadius">
            <summary>The radius of the circle.
</summary>
            <exception cref="!:System.ArgumentException">
When the radius is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ICircleGroup.SetCentre(std.shared_ptr&lt;SDK.Oasys.Profiles.IPoint&gt;)">
            <summary>The centre of the circle.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ICircleGroup.GetCentre">
            <summary>The centre of the circle.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.Groups.ICircleGroup">
            <summary>A circular reinforcement group.
</summary>
            <seealso cref="T:SDK.Oasys.AdSec.Reinforcement.Groups.ILongitudinalGroup" />
            <seealso cref="!:Oasys.AdSec.Reinforcement.Layers.ILayer" />
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.Layers.ILayer.BarBundle">
            <summary>The bar (or bundle of bars) that will be placed at each position.</summary>
            <exception cref="!:System.ArgumentNullException">If BarBundle is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.Layers.ILayer">
            <summary>A reinforcement layer.
<para>See <see href="~/articles/glossary.md#layerlayer">Glossary</see></para></summary>
            <remarks>Reinforcement layers are used by reinforcement groups,
<see cref="!:Oasys.AdSec.Reinforcement.Groups.IGroup" />.
Layers define the number of bars in each reinforcement bundle, their diameter and material.
<para>ILayer is a base class. </para><para>Use <see cref="!:ILayerByBarCount" /> to define layers by number of bundles or single bars. </para><para>Use <see cref="!:ILayerByBarPitch" /> to define layers by the
<see cref="!:ILayerByBarPitch.Pitch" /> between bundles or single bars.
</para><img src="../images/ReinforcementGroups.png" /></remarks>
            <seealso cref="!:Oasys.AdSec.Reinforcement.Groups.IGroup" />
            <seealso cref="!:ILayerByBarCount" />
            <seealso cref="!:ILayerByBarPitch" />
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ILongitudinalGroup.SetPreload(std.shared_ptr&lt;SDK.Oasys.AdSec.Reinforcement.Preloads.IPreload&gt;)">
            <summary>The preload for the reinforcement group.
It can be applied to bars as a force, a stress or a strain.
</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.ILongitudinalGroup.GetPreload">
            <summary>The preload for the reinforcement group.
It can be applied to bars as a force, a stress or a strain.
</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.Groups.ILongitudinalGroup">
            <summary>Defines a group of longitudinal reinforcement.
</summary>
            <seealso cref="!:IArcGroup" />
            <seealso cref="!:ICircleGroup" />
            <seealso cref="!:ILineGroup" />
            <seealso cref="!:ISingleBars" />
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.Groups.ICircleGroup.Create(Oasys.Profiles.IPoint,UnitsNet.Length,UnitsNet.Angle,Oasys.AdSec.Reinforcement.Layers.ILayer)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.Groups.ICircleGroup" /> reinforcement group from its
<see cref="P:Oasys.AdSec.Reinforcement.Groups.ICircleGroup.Centre" />,
<see cref="P:Oasys.AdSec.Reinforcement.Groups.ICircleGroup.Radius" />,
<see cref="P:Oasys.AdSec.Reinforcement.Groups.ICircleGroup.StartAngle" /> and
<see cref="P:Oasys.AdSec.Reinforcement.Groups.ICircleGroup.Layer" />.
</summary>
            <param name="centre">Defines the circle's centre.</param>
            <param name="radius">Defines the circle's radius.</param>
            <param name="startAngle">Defines the circle's start angle.<br />
Positive angle is considered anti-clockwise.
</param>
            <param name="layer">Defines the bar (or bar bundles) that will be positioned around the circle.</param>
            <returns>A new circular reinforcement group.</returns>
            <exception cref="!:System.ArgumentException">
When the radius is not a positive and finite value.
</exception>
            <exception cref="!:System.ArgumentException">
When the start angle is not a finite value.
</exception>
            <exception cref="!:System.ArgumentNullException">If centre is null</exception>
            <exception cref="!:System.ArgumentNullException">If layer is null</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.Groups.ICircleGroup.Layer">
            <summary>The layer of reinforcement to be positioned around the circle.</summary>
            <exception cref="!:System.ArgumentNullException">If Layer is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.Groups.ICircleGroup.StartAngle">
            <summary>The start angle of the circle.<br />
Positive angle is considered anti-clockwise.
</summary>
            <exception cref="!:System.ArgumentException">
When the angle is not a finite value.
</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.Groups.ICircleGroup.Radius">
            <summary>The radius of the circle.
</summary>
            <exception cref="!:System.ArgumentException">
When the radius is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.Groups.ICircleGroup.Centre">
            <summary>The centre of the circle.</summary>
            <exception cref="!:System.ArgumentNullException">If Centre is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.Groups.ICircleGroup">
            <summary>A circular reinforcement group.
</summary>
            <seealso cref="T:Oasys.AdSec.Reinforcement.Groups.ILongitudinalGroup" />
            <seealso cref="!:Oasys.AdSec.Reinforcement.Layers.ILayer" />
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.Groups.ILongitudinalGroup.Preload">
            <summary>The preload for the reinforcement group.
It can be applied to bars as a force, a stress or a strain.
</summary>
            <exception cref="!:System.ArgumentNullException">If Preload is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.Groups.ILongitudinalGroup">
            <summary>Defines a group of longitudinal reinforcement.
</summary>
            <seealso cref="!:IArcGroup" />
            <seealso cref="!:ICircleGroup" />
            <seealso cref="!:ILineGroup" />
            <seealso cref="!:ISingleBars" />
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.ACI318.Edition_2014.US">
            <summary>The 2014 (US units) edition of ACI318</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.ACI318.Edition_2014.Metric">
            <summary>The 2014 (metric units) edition of ACI318</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.ACI318.Edition_2011.US">
            <summary>The 2011 (US units) edition of ACI318</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.ACI318.Edition_2011.Metric">
            <summary>The 2011 (metric units) edition of ACI318</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.ACI318.Edition_2008.US">
            <summary>The 2008 (US units) edition of ACI318</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.ACI318.Edition_2008.Metric">
            <summary>The 2008 (metric units) edition of ACI318</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.ACI318.Edition_2005.US">
            <summary>The 2005 (US units) edition of ACI318</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.ACI318.Edition_2005.Metric">
            <summary>The 2005 (metric units) edition of ACI318</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.ACI318.Edition_2002.US">
            <summary>The 2002 (US units) edition of ACI318</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.ACI318.Edition_2002.Metric">
            <summary>The 2002 (metric units) edition of ACI318</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.ACI318.Edition_2014.US">
            <summary>The 2014 (US units) edition of ACI318</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.ACI318.Edition_2014.Metric">
            <summary>The 2014 (metric units) edition of ACI318</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.ACI318.Edition_2011.US">
            <summary>The 2011 (US units) edition of ACI318</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.ACI318.Edition_2011.Metric">
            <summary>The 2011 (metric units) edition of ACI318</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.ACI318.Edition_2008.US">
            <summary>The 2008 (US units) edition of ACI318</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.ACI318.Edition_2008.Metric">
            <summary>The 2008 (metric units) edition of ACI318</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.ACI318.Edition_2005.US">
            <summary>The 2005 (US units) edition of ACI318</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.ACI318.Edition_2005.Metric">
            <summary>The 2005 (metric units) edition of ACI318</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.ACI318.Edition_2002.US">
            <summary>The 2002 (US units) edition of ACI318</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.ACI318.Edition_2002.Metric">
            <summary>The 2002 (metric units) edition of ACI318</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IMomentRange.Contains(System.Double)">
            <summary>Checks if a given moment is within (or on the boundary of) the range.
</summary>
            <param name="moment">The moment to check</param>
        </member>
        <member name="M:SDK.Oasys.AdSec.IMomentRange.GetMax">
            <summary>The end of the range</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IMomentRange.GetMin">
            <summary>The start of the range</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.IMomentRange">
            <summary>A pair of moments representing the start and end of a range.
<para>See <see href="~/articles/glossary.md#moment-rangesmoment-range">Glossary</see></para></summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IPopovicsStressStrainCurve.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint&gt;,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IPopovicsStressStrainCurve" />.
</summary>
            <param name="peakPoint">The point of maximum stress.</param>
            <param name="failureStrain">The strain beyond which the material fails.</param>
            <exception cref="!:System.ArgumentException">
When the peak strain is larger than the failure strain.
</exception>
            <exception cref="!:System.ArgumentException">
When any of the stress-strain inputs is negative or infinite.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IPopovicsStressStrainCurve.GetPeakPoint">
            <summary>The point of maximum stress.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IPopovicsStressStrainCurve">
            <summary>
A type of <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" /> based on the work of Popovics.
It is defined by a series of curves adjusted on the basis of Thorenfeldt base curve.
Refer <a href="https://www.oasys-software.com/help/adsec/10.0/AdSec%20Theory%20Manual.pdf">AdSec Theory Manual</a>
for further details.
<center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 53,238 80,201 107,167 133,139 160,115 186,96 212,80 240,69 266,63 292,61 320,63 345,69 372,80 400,95" class="curve" /><text x="306" y="41" class="text">Peak point</text><circle cX="292" cy="61" r="15" /><line x1="400" y1="95" x2="400" y2="280" stroke-dasharray="4" /><text x="390" y="260" class="text" text-anchor="end">Failure strain</text><circle cX="400" cy="280" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
  </style></svg></center></summary>
            <remarks>Popovics curve is commonly used for concrete materials.</remarks>
        </member>
        <member name="M:Oasys.AdSec.Materials.StressStrainCurves.IPopovicsStressStrainCurve.Create(Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint,Oasys.Units.Strain)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IPopovicsStressStrainCurve" />.
</summary>
            <param name="peakPoint">The point of maximum stress.</param>
            <param name="failureStrain">The strain beyond which the material fails.</param>
            <exception cref="!:System.ArgumentException">
When the peak strain is larger than the failure strain.
</exception>
            <exception cref="!:System.ArgumentException">
When any of the stress-strain inputs is negative or infinite.
</exception>
            <exception cref="!:System.ArgumentNullException">If peakPoint is null</exception>
        </member>
        <member name="P:Oasys.AdSec.Materials.StressStrainCurves.IPopovicsStressStrainCurve.PeakPoint">
            <summary>The point of maximum stress.</summary>
            <exception cref="!:System.ArgumentNullException">If PeakPoint is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.Materials.StressStrainCurves.IPopovicsStressStrainCurve">
            <summary>
A type of <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" /> based on the work of Popovics.
It is defined by a series of curves adjusted on the basis of Thorenfeldt base curve.
Refer <a href="https://www.oasys-software.com/help/adsec/10.0/AdSec%20Theory%20Manual.pdf">AdSec Theory Manual</a>
for further details.
<center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 53,238 80,201 107,167 133,139 160,115 186,96 212,80 240,69 266,63 292,61 320,63 345,69 372,80 400,95" class="curve" /><text x="306" y="41" class="text">Peak point</text><circle cX="292" cy="61" r="15" /><line x1="400" y1="95" x2="400" y2="280" stroke-dasharray="4" /><text x="390" y="260" class="text" text-anchor="end">Failure strain</text><circle cX="400" cy="280" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
  </style></svg></center></summary>
            <remarks>Popovics curve is commonly used for concrete materials.</remarks>
        </member>
        <member name="M:SDK.Oasys.Profiles.IEllipseHollowProfile.Create(System.Double,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.IEllipseHollowProfile" /> profile from its
<see cref="!:Depth" />,
<see cref="!:Width" /> and
<see cref="!:WallThickness" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="width">Defines the profile's width.</param>
            <param name="wallThickness">Defines the profile's wall thickness.</param>.
<returns>Hollow ellipse profile with the specified dimensions.</returns><exception cref="!:System.ArgumentException">
When any of its dimensions is not a positive and finite value.
</exception></member>
        <member name="M:SDK.Oasys.Profiles.IEllipseHollowProfile.SetWallThickness(System.Double)">
            <summary>The wall thickness of the hollow ellipse.
</summary>
            <exception cref="!:System.ArgumentException">
When the wall thickness is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IEllipseHollowProfile.GetWallThickness">
            <summary>The wall thickness of the hollow ellipse.
</summary>
            <exception cref="!:System.ArgumentException">
When the wall thickness is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IEllipseHollowProfile.SetWidth(System.Double)">
            <summary>The width of the hollow ellipse.
</summary>
            <exception cref="!:System.ArgumentException">
When the width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IEllipseHollowProfile.GetWidth">
            <summary>The width of the hollow ellipse.
</summary>
            <exception cref="!:System.ArgumentException">
When the width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IEllipseHollowProfile.SetDepth(System.Double)">
            <summary>The depth of the hollow ellipse.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IEllipseHollowProfile.GetDepth">
            <summary>The depth of the hollow ellipse.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.IEllipseHollowProfile">
            <summary>Defines a hollow elliptical section profile from
<see cref="!:Depth" />,
<see cref="!:Width" /> and
<see cref="!:WallThickness" />.<br /><center><svg height="350" width="350"><ellipse class="profile-line" cx="175" cy="175" rx="70" ry="100" fill="#8da0cb" /><ellipse class="profile-line" cx="175" cy="175" rx="50" ry="80" fill="white" /><line class="profile-line" x1="80" y1="75" x2="80" y2="275" /><line class="profile-line" x1="70" y1="75" x2="140" y2="75" /><line class="profile-line" x1="70" y1="275" x2="140" y2="275" /><text class="profile-label" x="-175" y="70" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><line class="profile-line" x1="105" y1="300" x2="245" y2="300" /><line class="profile-line" x1="105" y1="220" x2="105" y2="310" /><line class="profile-line" x1="245" y1="220" x2="245" y2="310" /><text class="profile-label" x="175" y="320" fill="black" text-anchor="middle">Width</text><line class="profile-line" x1="175" y1="55" x2="175" y2="95" /><text class="profile-label" x="175" y="50" fill="black" text-anchor="middle">Wall Thickness</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="175" y="165" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.IEllipseHollowProfile" /> inherits <see cref="T:SDK.Oasys.Profiles.IProfile" />.
<para>The hollow ellipse is centered at the origin of its local coordinate system.</para></remarks>
        </member>
        <member name="M:Oasys.Profiles.IEllipseHollowProfile.Create(UnitsNet.Length,UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.IEllipseHollowProfile" /> profile from its
<see cref="P:Oasys.Profiles.IEllipseHollowProfile.Depth" />,
<see cref="P:Oasys.Profiles.IEllipseHollowProfile.Width" /> and
<see cref="P:Oasys.Profiles.IEllipseHollowProfile.WallThickness" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="width">Defines the profile's width.</param>
            <param name="wallThickness">Defines the profile's wall thickness.</param>.
<returns>Hollow ellipse profile with the specified dimensions.</returns><exception cref="!:System.ArgumentException">
When any of its dimensions is not a positive and finite value.
</exception></member>
        <member name="P:Oasys.Profiles.IEllipseHollowProfile.WallThickness">
            <summary>The wall thickness of the hollow ellipse.
</summary>
            <exception cref="!:System.ArgumentException">
When the wall thickness is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IEllipseHollowProfile.Width">
            <summary>The width of the hollow ellipse.
</summary>
            <exception cref="!:System.ArgumentException">
When the width is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IEllipseHollowProfile.Depth">
            <summary>The depth of the hollow ellipse.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.IEllipseHollowProfile">
            <summary>Defines a hollow elliptical section profile from
<see cref="P:Oasys.Profiles.IEllipseHollowProfile.Depth" />,
<see cref="P:Oasys.Profiles.IEllipseHollowProfile.Width" /> and
<see cref="P:Oasys.Profiles.IEllipseHollowProfile.WallThickness" />.<br /><center><svg height="350" width="350"><ellipse class="profile-line" cx="175" cy="175" rx="70" ry="100" fill="#8da0cb" /><ellipse class="profile-line" cx="175" cy="175" rx="50" ry="80" fill="white" /><line class="profile-line" x1="80" y1="75" x2="80" y2="275" /><line class="profile-line" x1="70" y1="75" x2="140" y2="75" /><line class="profile-line" x1="70" y1="275" x2="140" y2="275" /><text class="profile-label" x="-175" y="70" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><line class="profile-line" x1="105" y1="300" x2="245" y2="300" /><line class="profile-line" x1="105" y1="220" x2="105" y2="310" /><line class="profile-line" x1="245" y1="220" x2="245" y2="310" /><text class="profile-label" x="175" y="320" fill="black" text-anchor="middle">Width</text><line class="profile-line" x1="175" y1="55" x2="175" y2="95" /><text class="profile-label" x="175" y="50" fill="black" text-anchor="middle">Wall Thickness</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="175" y="165" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.IEllipseHollowProfile" /> inherits <see cref="T:Oasys.Profiles.IProfile" />.
<para>The hollow ellipse is centered at the origin of its local coordinate system.</para></remarks>
        </member>
        <member name="M:SDK.Oasys.Profiles.IRectoEllipseProfile.Create(System.Double,System.Double,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.IRectoEllipseProfile" /> profile from its
<see cref="!:Depth" />,
<see cref="!:DepthFlat" />,
<see cref="!:Width" /> and
<see cref="!:WidthFlat" />.
</summary>
            <param name="depth">Defines the overall depth of the profile.</param>
            <param name="depthFlat">Defines the flat length of the profile's overall depth.</param>
            <param name="width">Defines the overall width of the profile.</param>
            <param name="widthFlat">Defines the flat length of the profile's overall width.</param>
            <exception cref="!:System.ArgumentException">
When any of the dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IRectoEllipseProfile.SetWidthFlat(System.Double)">
            <summary>The flat length of the profile's overall width.
</summary>
            <exception cref="!:System.ArgumentException">
When the length is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IRectoEllipseProfile.GetWidthFlat">
            <summary>The flat length of the profile's overall width.
</summary>
            <exception cref="!:System.ArgumentException">
When the length is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IRectoEllipseProfile.SetWidth(System.Double)">
            <summary>The overall width of the recto-ellipse profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IRectoEllipseProfile.GetWidth">
            <summary>The overall width of the recto-ellipse profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IRectoEllipseProfile.SetDepthFlat(System.Double)">
            <summary>The flat length of the profile's overall depth.
</summary>
            <exception cref="!:System.ArgumentException">
When the length is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IRectoEllipseProfile.GetDepthFlat">
            <summary>The flat length of the profile's overall depth.
</summary>
            <exception cref="!:System.ArgumentException">
When the length is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IRectoEllipseProfile.SetDepth(System.Double)">
            <summary>The overall depth of the recto-ellipse profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IRectoEllipseProfile.GetDepth">
            <summary>The overall depth of the recto-ellipse profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.IRectoEllipseProfile">
            <summary>
A rectangular section profile with elliptical corners.
<center><svg height="350" width="350"><path class="profile-line" d="M100,100 A25,25 1 0,1 125,75 L225,75 A25,25 1 0,1 250,100 L250,250 A25,25 1 0,1 225,275 L125,275 A25,25 1 0,1 100,250z" fill="#8da0cb" /><line class="profile-line" x1="80" y1="75" x2="80" y2="275" /><line class="profile-line" x1="70" y1="75" x2="105" y2="75" /><line class="profile-line" x1="70" y1="275" x2="105" y2="275" /><text class="profile-label" x="-175" y="70" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><line class="profile-line" x1="100" y1="295" x2="250" y2="295" /><line class="profile-line" x1="100" y1="270" x2="100" y2="305" /><line class="profile-line" x1="250" y1="270" x2="250" y2="305" /><text class="profile-label" x="175" y="320" fill="black" text-anchor="middle">Width</text><line class="profile-line" x1="270" y1="100" x2="270" y2="250" /><line class="profile-line" x1="260" y1="100" x2="280" y2="100" /><line class="profile-line" x1="260" y1="250" x2="280" y2="250" /><text class="profile-label" x="-175" y="295" fill="black" text-anchor="middle" transform="rotate(-90)">Depth Flat</text><line class="profile-line" x1="125" y1="55" x2="225" y2="55" /><line class="profile-line" x1="125" y1="45" x2="125" y2="65" /><line class="profile-line" x1="225" y1="45" x2="225" y2="65" /><text class="profile-label" x="175" y="45" fill="black" text-anchor="middle">Width Flat</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="175" y="165" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.IRectoEllipseProfile" /> inherits <see cref="T:SDK.Oasys.Profiles.IProfile" />.</remarks>
        </member>
        <member name="M:Oasys.Profiles.IRectoEllipseProfile.Create(UnitsNet.Length,UnitsNet.Length,UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.IRectoEllipseProfile" /> profile from its
<see cref="P:Oasys.Profiles.IRectoEllipseProfile.Depth" />,
<see cref="P:Oasys.Profiles.IRectoEllipseProfile.DepthFlat" />,
<see cref="P:Oasys.Profiles.IRectoEllipseProfile.Width" /> and
<see cref="P:Oasys.Profiles.IRectoEllipseProfile.WidthFlat" />.
</summary>
            <param name="depth">Defines the overall depth of the profile.</param>
            <param name="depthFlat">Defines the flat length of the profile's overall depth.</param>
            <param name="width">Defines the overall width of the profile.</param>
            <param name="widthFlat">Defines the flat length of the profile's overall width.</param>
            <exception cref="!:System.ArgumentException">
When any of the dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IRectoEllipseProfile.WidthFlat">
            <summary>The flat length of the profile's overall width.
</summary>
            <exception cref="!:System.ArgumentException">
When the length is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IRectoEllipseProfile.Width">
            <summary>The overall width of the recto-ellipse profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the width is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IRectoEllipseProfile.DepthFlat">
            <summary>The flat length of the profile's overall depth.
</summary>
            <exception cref="!:System.ArgumentException">
When the length is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IRectoEllipseProfile.Depth">
            <summary>The overall depth of the recto-ellipse profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.IRectoEllipseProfile">
            <summary>
A rectangular section profile with elliptical corners.
<center><svg height="350" width="350"><path class="profile-line" d="M100,100 A25,25 1 0,1 125,75 L225,75 A25,25 1 0,1 250,100 L250,250 A25,25 1 0,1 225,275 L125,275 A25,25 1 0,1 100,250z" fill="#8da0cb" /><line class="profile-line" x1="80" y1="75" x2="80" y2="275" /><line class="profile-line" x1="70" y1="75" x2="105" y2="75" /><line class="profile-line" x1="70" y1="275" x2="105" y2="275" /><text class="profile-label" x="-175" y="70" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><line class="profile-line" x1="100" y1="295" x2="250" y2="295" /><line class="profile-line" x1="100" y1="270" x2="100" y2="305" /><line class="profile-line" x1="250" y1="270" x2="250" y2="305" /><text class="profile-label" x="175" y="320" fill="black" text-anchor="middle">Width</text><line class="profile-line" x1="270" y1="100" x2="270" y2="250" /><line class="profile-line" x1="260" y1="100" x2="280" y2="100" /><line class="profile-line" x1="260" y1="250" x2="280" y2="250" /><text class="profile-label" x="-175" y="295" fill="black" text-anchor="middle" transform="rotate(-90)">Depth Flat</text><line class="profile-line" x1="125" y1="55" x2="225" y2="55" /><line class="profile-line" x1="125" y1="45" x2="125" y2="65" /><line class="profile-line" x1="225" y1="45" x2="225" y2="65" /><text class="profile-label" x="175" y="45" fill="black" text-anchor="middle">Width Flat</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="175" y="165" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.IRectoEllipseProfile" /> inherits <see cref="T:Oasys.Profiles.IProfile" />.</remarks>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamSymmetricalProfile.Create(System.Double,std.shared_ptr&lt;SDK.Oasys.Profiles.IFlange&gt;,std.shared_ptr&lt;SDK.Oasys.Profiles.IWebConstant&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.IIBeamSymmetricalProfile" /> profile from its
<see cref="!:IIBeamProfile.Depth" />,
<see cref="!:Flanges" /> and
<see cref="!:Web" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="flanges">Defines both the profile's flanges.</param>
            <param name="web">Defines the profile's web.</param>
            <returns>I-beam-symmetrical profile with the specified dimensions.</returns>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamSymmetricalProfile.SetWeb(std.shared_ptr&lt;SDK.Oasys.Profiles.IWebConstant&gt;)">
            <summary>The web of the beam.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamSymmetricalProfile.GetWeb">
            <summary>The web of the beam.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamSymmetricalProfile.SetFlanges(std.shared_ptr&lt;SDK.Oasys.Profiles.IFlange&gt;)">
            <summary>Both flanges of the beam.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamSymmetricalProfile.GetFlanges">
            <summary>Both flanges of the beam.</summary>
        </member>
        <member name="T:SDK.Oasys.Profiles.IIBeamSymmetricalProfile">
            <summary>An IBeam symmetrical profile. This profile is symmetrical about its local z axis.
<center><svg height="350" width="350"><rect x="75" y="50" width="200" height="50" fill="#8da0cb" /><rect x="75" y="250" width="200" height="50" fill="#8da0cb" /><rect x="160" y="100" width="30" height="150" fill="#fc8d62" /><path class="profile-outline" d="M75 50 L275 50 L275 100 L190 100 L190 250 L275 250 L275 300 L75 300 L75 250 L160 250 L160 100 L75 100 Z" /><line class="profile-line" x1="160" y1="250" x2="190" y2="250" stroke-dasharray="4" /><line class="profile-line" x1="160" y1="100" x2="190" y2="100" stroke-dasharray="4" /><circle cx="250" cy="275" r="4" fill="black" /><circle cx="250" cy="75" r="4" fill="black" /><line class="profile-line" x1="250" y1="275" x2="250" y2="200" /><line class="profile-line" x1="250" y1="75" x2="250" y2="175" /><text class="profile-label" x="250" y="190" fill="black" text-anchor="middle">Flanges</text><line class="profile-line" x1="55" y1="50" x2="55" y2="300" /><line class="profile-line" x1="45" y1="50" x2="65" y2="50" /><line class="profile-line" x1="45" y1="300" x2="65" y2="300" /><text class="profile-label" x="-175" y="45" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><circle cx="175" cy="140" r="4" fill="black" /><line class="profile-line" x1="135" y1="140" x2="175" y2="140" /><text class="profile-label" x="130" y="145" fill="black" text-anchor="end">Web</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="110" y="185" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.IIBeamSymmetricalProfile" /> inherits <see cref="T:SDK.Oasys.Profiles.IIBeamProfile" /> and <see cref="T:SDK.Oasys.Profiles.IProfile" />.
<para>The I-beam is centered at the origin of its local coordinate system.</para></remarks>
        </member>
        <member name="M:Oasys.Profiles.IIBeamSymmetricalProfile.Create(UnitsNet.Length,Oasys.Profiles.IFlange,Oasys.Profiles.IWebConstant)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.IIBeamSymmetricalProfile" /> profile from its
<see cref="!:IIBeamProfile.Depth" />,
<see cref="P:Oasys.Profiles.IIBeamSymmetricalProfile.Flanges" /> and
<see cref="P:Oasys.Profiles.IIBeamSymmetricalProfile.Web" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="flanges">Defines both the profile's flanges.</param>
            <param name="web">Defines the profile's web.</param>
            <returns>I-beam-symmetrical profile with the specified dimensions.</returns>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
            <exception cref="!:System.ArgumentNullException">If flanges is null</exception>
            <exception cref="!:System.ArgumentNullException">If web is null</exception>
        </member>
        <member name="P:Oasys.Profiles.IIBeamSymmetricalProfile.Web">
            <summary>The web of the beam.</summary>
            <exception cref="!:System.ArgumentNullException">If Web is set to null</exception>
        </member>
        <member name="P:Oasys.Profiles.IIBeamSymmetricalProfile.Flanges">
            <summary>Both flanges of the beam.</summary>
            <exception cref="!:System.ArgumentNullException">If Flanges is set to null</exception>
        </member>
        <member name="T:Oasys.Profiles.IIBeamSymmetricalProfile">
            <summary>An IBeam symmetrical profile. This profile is symmetrical about its local z axis.
<center><svg height="350" width="350"><rect x="75" y="50" width="200" height="50" fill="#8da0cb" /><rect x="75" y="250" width="200" height="50" fill="#8da0cb" /><rect x="160" y="100" width="30" height="150" fill="#fc8d62" /><path class="profile-outline" d="M75 50 L275 50 L275 100 L190 100 L190 250 L275 250 L275 300 L75 300 L75 250 L160 250 L160 100 L75 100 Z" /><line class="profile-line" x1="160" y1="250" x2="190" y2="250" stroke-dasharray="4" /><line class="profile-line" x1="160" y1="100" x2="190" y2="100" stroke-dasharray="4" /><circle cx="250" cy="275" r="4" fill="black" /><circle cx="250" cy="75" r="4" fill="black" /><line class="profile-line" x1="250" y1="275" x2="250" y2="200" /><line class="profile-line" x1="250" y1="75" x2="250" y2="175" /><text class="profile-label" x="250" y="190" fill="black" text-anchor="middle">Flanges</text><line class="profile-line" x1="55" y1="50" x2="55" y2="300" /><line class="profile-line" x1="45" y1="50" x2="65" y2="50" /><line class="profile-line" x1="45" y1="300" x2="65" y2="300" /><text class="profile-label" x="-175" y="45" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><circle cx="175" cy="140" r="4" fill="black" /><line class="profile-line" x1="135" y1="140" x2="175" y2="140" /><text class="profile-label" x="130" y="145" fill="black" text-anchor="end">Web</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="110" y="185" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.IIBeamSymmetricalProfile" /> inherits <see cref="T:Oasys.Profiles.IIBeamProfile" /> and <see cref="T:Oasys.Profiles.IProfile" />.
<para>The I-beam is centered at the origin of its local coordinate system.</para></remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.ILinearStressStrainCurve.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.ILinearStressStrainCurve" />.
</summary>
            <param name="failurePoint">The point at which the material fails.</param>
            <exception cref="!:System.ArgumentException">
When any of the stress-strain inputs is negative or infinite.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.ILinearStressStrainCurve.GetFailurePoint">
            <summary>The point at which the material fails.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.ILinearStressStrainCurve">
            <summary>
A type of <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" /> in which the stress
is directly proportional to the strain. The material provides no strength
beyond the failure point.
<center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 400,100" class="curve" /><text x="380" y="80" class="text" text-anchor="end">Failure point</text><circle cX="400" cy="100" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
  </style></svg></center></summary>
        </member>
        <member name="M:Oasys.AdSec.Materials.StressStrainCurves.ILinearStressStrainCurve.Create(Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.ILinearStressStrainCurve" />.
</summary>
            <param name="failurePoint">The point at which the material fails.</param>
            <exception cref="!:System.ArgumentException">
When any of the stress-strain inputs is negative or infinite.
</exception>
            <exception cref="!:System.ArgumentNullException">If failurePoint is null</exception>
        </member>
        <member name="P:Oasys.AdSec.Materials.StressStrainCurves.ILinearStressStrainCurve.FailurePoint">
            <summary>The point at which the material fails.</summary>
            <exception cref="!:System.ArgumentNullException">If FailurePoint is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.Materials.StressStrainCurves.ILinearStressStrainCurve">
            <summary>
A type of <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" /> in which the stress
is directly proportional to the strain. The material provides no strength
beyond the failure point.
<center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 400,100" class="curve" /><text x="380" y="80" class="text" text-anchor="end">Failure point</text><circle cX="400" cy="100" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
  </style></svg></center></summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IRectangleProfile.Create(System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.IRectangleProfile" /> profile from its
<see cref="!:ITrapezoidProfileAbstractInterface.Depth" /> and
<see cref="!:Width" /></summary>
            <param name="depth">Defines the profile's depth</param>
            <param name="width">Defines the profile's width</param>
            <returns>Rectangular profile with the specified width.</returns>
            <exception cref="!:System.ArgumentException">
When any of its dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IRectangleProfile.SetWidth(System.Double)">
            <summary>Width of the rectangle, in y-axis direction.
</summary>
            <exception cref="!:System.ArgumentException">
When the width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IRectangleProfile.GetWidth">
            <summary>Width of the rectangle, in y-axis direction.
</summary>
            <exception cref="!:System.ArgumentException">
When the width is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.IRectangleProfile">
            <summary>Defines a rectangular section profile.
<center><svg height="350" width="350"><rect class="profile-line" x="100" y="75" width="150" height="200" fill="#8da0cb" /><line class="profile-line" x1="80" y1="75" x2="80" y2="275" /><line class="profile-line" x1="70" y1="75" x2="90" y2="75" /><line class="profile-line" x1="70" y1="275" x2="90" y2="275" /><text class="profile-label" x="-175" y="70" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><line class="profile-line" x1="100" y1="295" x2="250" y2="295" /><line class="profile-line" x1="100" y1="285" x2="100" y2="305" /><line class="profile-line" x1="250" y1="285" x2="250" y2="305" /><text class="profile-label" x="175" y="320" fill="black" text-anchor="middle">Width</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="175" y="165" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.IRectangleProfile" /> inherits <see cref="T:SDK.Oasys.Profiles.ITrapezoidProfileAbstractInterface" /> and <see cref="T:SDK.Oasys.Profiles.IProfile" />.
<para>The rectangle is centered at the origin of its local coordinate system.</para></remarks>
            <example>
# [C#](#tab/tabid-1)
<code source="../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/IRectangle.cs" region="Usings" lang="csharp" /><code source="../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/IRectangle.cs" region="Snippet" lang="csharp" /><para>Example creating a rectangular profile.</para>
# [Python](#tab/tabid-2)
<code source="../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/IRectangle.py" region="Imports" lang="python" /><code source="../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/IRectangle.py" region="Snippet" lang="python" /><para>Example creating a rectangular profile.</para>
***
</example>
        </member>
        <member name="M:SDK.Oasys.Profiles.ITrapezoidProfileAbstractInterface.SetDepth(System.Double)">
            <summary>The depth in z-axis direction of trapezoidal profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ITrapezoidProfileAbstractInterface.GetDepth">
            <summary>The depth in z-axis direction of trapezoidal profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ITrapezoidProfileAbstractInterface.GetBottomWidth">
            <summary>The bottom width of trapezoidal profile.
</summary>
            <exception cref="!:System.ArgumentException">
When bottom width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.ITrapezoidProfileAbstractInterface.GetTopWidth">
            <summary>The top width of trapezoidal profile.
</summary>
            <exception cref="!:System.ArgumentException">
When top width is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.ITrapezoidProfileAbstractInterface">
            <summary>Defines trapezoid profile.
</summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.ITrapezoidProfileAbstractInterface" /> inherits <see cref="T:SDK.Oasys.Profiles.IProfile" />.
<see cref="T:SDK.Oasys.Profiles.ITrapezoidProfileAbstractInterface" /> is a base class for: <see cref="!:IRectangleProfile" /> and <see cref="!:ITrapezoidProfile" /><para>The trapizoid is centered at the origin of its local coordinate system.</para></remarks>
        </member>
        <member name="M:Oasys.Profiles.IRectangleProfile.Create(UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.IRectangleProfile" /> profile from its
<see cref="!:ITrapezoidProfileAbstractInterface.Depth" /> and
<see cref="P:Oasys.Profiles.IRectangleProfile.Width" /></summary>
            <param name="depth">Defines the profile's depth</param>
            <param name="width">Defines the profile's width</param>
            <returns>Rectangular profile with the specified width.</returns>
            <exception cref="!:System.ArgumentException">
When any of its dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IRectangleProfile.Width">
            <summary>Width of the rectangle, in y-axis direction.
</summary>
            <exception cref="!:System.ArgumentException">
When the width is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.IRectangleProfile">
            <summary>Defines a rectangular section profile.
<center><svg height="350" width="350"><rect class="profile-line" x="100" y="75" width="150" height="200" fill="#8da0cb" /><line class="profile-line" x1="80" y1="75" x2="80" y2="275" /><line class="profile-line" x1="70" y1="75" x2="90" y2="75" /><line class="profile-line" x1="70" y1="275" x2="90" y2="275" /><text class="profile-label" x="-175" y="70" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><line class="profile-line" x1="100" y1="295" x2="250" y2="295" /><line class="profile-line" x1="100" y1="285" x2="100" y2="305" /><line class="profile-line" x1="250" y1="285" x2="250" y2="305" /><text class="profile-label" x="175" y="320" fill="black" text-anchor="middle">Width</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="175" y="165" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.IRectangleProfile" /> inherits <see cref="T:Oasys.Profiles.ITrapezoidProfileAbstractInterface" /> and <see cref="T:Oasys.Profiles.IProfile" />.
<para>The rectangle is centered at the origin of its local coordinate system.</para></remarks>
            <example>
# [C#](#tab/tabid-1)
<code source="../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/IRectangle.cs" region="Usings" lang="csharp" /><code source="../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/IRectangle.cs" region="Snippet" lang="csharp" /><para>Example creating a rectangular profile.</para>
# [Python](#tab/tabid-2)
<code source="../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/IRectangle.py" region="Imports" lang="python" /><code source="../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/IRectangle.py" region="Snippet" lang="python" /><para>Example creating a rectangular profile.</para>
***
</example>
        </member>
        <member name="P:Oasys.Profiles.ITrapezoidProfileAbstractInterface.Depth">
            <summary>The depth in z-axis direction of trapezoidal profile.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.ITrapezoidProfileAbstractInterface.BottomWidth">
            <summary>The bottom width of trapezoidal profile.
</summary>
            <exception cref="!:System.ArgumentException">
When bottom width is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.ITrapezoidProfileAbstractInterface.TopWidth">
            <summary>The top width of trapezoidal profile.
</summary>
            <exception cref="!:System.ArgumentException">
When top width is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.ITrapezoidProfileAbstractInterface">
            <summary>Defines trapezoid profile.
</summary>
            <remarks>
                <see cref="T:Oasys.Profiles.ITrapezoidProfileAbstractInterface" /> inherits <see cref="T:Oasys.Profiles.IProfile" />.
<see cref="T:Oasys.Profiles.ITrapezoidProfileAbstractInterface" /> is a base class for: <see cref="!:IRectangleProfile" /> and <see cref="!:ITrapezoidProfile" /><para>The trapizoid is centered at the origin of its local coordinate system.</para></remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.IRS.Edition_1997">
            <summary>The 1997 edition of IRS Bridge</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.IRS.Edition_1997">
            <summary>The 1997 edition of IRS Bridge</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.AS5100.Edition_2017">
            <summary>The 2017 edition of AS5100</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.AS5100.Edition_2017">
            <summary>The 2017 edition of AS5100</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IParkStressStrainCurve.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IParkStressStrainCurve" />.
</summary>
            <param name="yieldPoint">The point up to which the stress-strain relationship is elastic.</param>
            <exception cref="!:System.ArgumentException">
When any of the stress-strain inputs is negative or infinite.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IParkStressStrainCurve.GetYieldPoint">
            <summary>The point up to which the stress-strain relationship is elastic.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IParkStressStrainCurve">
            <summary>
A type of <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" /> with a linear stress-strain
relationship up to the yield point. The gradient of the curve is zero
up to some point beyond the yield, and then the curve rises to reach the peak
point. The point up to which the gradient of the curve is zero is calculated
as:
<para>
stress = yield stress,<br />
strain = yield strain * factor,<br />
factor = 1, for yield stress &gt; 120ksi,<br />
= [-4 * (yield stress in ksi - 60) / 60 + 5], for yield stress between 60ksi and 120ksi,<br />
= [-9 * (yield stress in ksi - 40) / 20 + 14], for yield stress between 40ksi and 60ksi,<br />
= 14, for yield stress less than 40ksi.
</para>
Refer <a href="https://www.oasys-software.com/help/adsec/10.0/AdSec%20Theory%20Manual.pdf">AdSec Theory Manual</a>
for further details.
<center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 60,130 100,130 120,120 140,111 160,104 180,98 200,93 230,87 280,81 320,79 380,78 400,78" class="curve" /><text x="125" y="100" class="text" text-anchor="end">Yield point</text><circle cX="60" cy="130" r="15" /><text x="385" y="58" class="text" text-anchor="end">Failure point</text><circle cX="400" cy="78" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
  </style></svg></center></summary>
        </member>
        <member name="M:Oasys.AdSec.Materials.StressStrainCurves.IParkStressStrainCurve.Create(Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IParkStressStrainCurve" />.
</summary>
            <param name="yieldPoint">The point up to which the stress-strain relationship is elastic.</param>
            <exception cref="!:System.ArgumentException">
When any of the stress-strain inputs is negative or infinite.
</exception>
            <exception cref="!:System.ArgumentNullException">If yieldPoint is null</exception>
        </member>
        <member name="P:Oasys.AdSec.Materials.StressStrainCurves.IParkStressStrainCurve.YieldPoint">
            <summary>The point up to which the stress-strain relationship is elastic.</summary>
            <exception cref="!:System.ArgumentNullException">If YieldPoint is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.Materials.StressStrainCurves.IParkStressStrainCurve">
            <summary>
A type of <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" /> with a linear stress-strain
relationship up to the yield point. The gradient of the curve is zero
up to some point beyond the yield, and then the curve rises to reach the peak
point. The point up to which the gradient of the curve is zero is calculated
as:
<para>
stress = yield stress,<br />
strain = yield strain * factor,<br />
factor = 1, for yield stress &gt; 120ksi,<br />
= [-4 * (yield stress in ksi - 60) / 60 + 5], for yield stress between 60ksi and 120ksi,<br />
= [-9 * (yield stress in ksi - 40) / 20 + 14], for yield stress between 40ksi and 60ksi,<br />
= 14, for yield stress less than 40ksi.
</para>
Refer <a href="https://www.oasys-software.com/help/adsec/10.0/AdSec%20Theory%20Manual.pdf">AdSec Theory Manual</a>
for further details.
<center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 60,130 100,130 120,120 140,111 160,104 180,98 200,93 230,87 280,81 320,79 380,78 400,78" class="curve" /><text x="125" y="100" class="text" text-anchor="end">Yield point</text><circle cX="60" cy="130" r="15" /><text x="385" y="58" class="text" text-anchor="end">Failure point</text><circle cX="400" cy="78" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
  </style></svg></center></summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IServiceabilityResult.GetWarnings">
            <summary>Warnings observed after the analysis.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IServiceabilityResult.GetCracks">
            <summary>Crack results are calculated at bar positions or section surfaces depending
on the <see cref="!:Oasys.AdSec.DesignCode.IDesignCode">Design Code</see> specifications.
</summary>
            <remarks>If the applied action is outside the capacity range
of the section, the returned list will be empty. See
<see cref="!:MaximumWidthCrack" /> for the crack result
corresponding to the maximum crack width.
</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.IServiceabilityResult.GetMaximumWidthCrack">
            <summary>The crack result from <see cref="!:Cracks" /> that corresponds to the maximum crack width.
</summary>
            <remarks>If the applied action is outside the capacity range
of the section, the returned maximum width crack result will
be <a href="https://docs.microsoft.com/en-us/dotnet/api/system.double.maxvalue?view=net-5.0">
maximum double value</a>.
</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.IServiceabilityResult.GetCrackingUtilisation">
            <summary>The ratio of the applied load (moment and axial) to the load (moment and axial)
in the same direction that would cause the section to crack. Ratio &gt; 1 means section is cracked.
</summary>
            <remarks>
The section is cracked when the cracking utilisation ratio is
greater than 1. If the applied load is outside the capacity
range of the section, the cracking utilisation will be
<a href="https://docs.microsoft.com/en-us/dotnet/api/system.double.maxvalue?view=net-5.0">
maximum double value</a>.
</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.IServiceabilityResult.GetSecantStiffness">
            <summary>The secant stiffness under the applied action.
<center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="10" class="text" transform="rotate(270)">Load</text><line x1="0" y1="280" x2="380" y2="280" /><text x="160" y="300" class="text">Deformation</text><polyline points="20,280 40,238 60,201 80,167 100,139 120,115 140,96 160,80 180,69 200,63 220,61 240,62 250,63 280,69 300,75" class="curve" /><line x1="20" y1="280" x2="200" y2="63" stroke-dasharray="4" /><line x1="50" y1="98" x2="350" y2="25" stroke-dasharray="4" /><text x="-10" y="220" class="text" transform="rotate(310)" text-anchor="end">Secant stiffness</text><text x="220" y="88" class="text" transform="rotate(347)" text-anchor="end">Tangent stiffness</text><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
  </style></svg></center></summary>
            <remarks>If the applied action is outside the capacity range
of the section, the secant stiffness will be zero.
</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.IServiceabilityResult.GetUncrackedMomentRanges">
            <summary>
The range of moments (in the direction of the applied moment,
assuming constant axial force) over which the section remains uncracked.
</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IServiceabilityResult.GetDeformation">
            <summary>The section deformation under the applied action.
</summary>
            <remarks>If the applied load is outside the capacity range
of the section, the returned deformation will consist
<a href="https://docs.microsoft.com/en-us/dotnet/api/system.double.maxvalue?view=net-5.0">
maximum double values</a>.
</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.IServiceabilityResult.GetLoad">
            <summary>The section load under the applied action.
</summary>
            <remarks>If the applied deformation is outside the capacity
range of the section, the returned load will be zero.
</remarks>
        </member>
        <member name="T:SDK.Oasys.AdSec.IServiceabilityResult">
            <summary>The result of serviceability analysis (SLS) calculated by <see cref="T:SDK.Oasys.AdSec.IServiceability" />.
</summary>
            <seealso cref="T:SDK.Oasys.AdSec.IServiceability" />
        </member>
        <member name="P:Oasys.AdSec.IStiffness.ZZ">
            <summary>The bending stiffness about the z-axis in the local coordinate system.</summary>
        </member>
        <member name="P:Oasys.AdSec.IStiffness.YY">
            <summary>The bending stiffness about the y-axis in the local coordinate system.</summary>
        </member>
        <member name="P:Oasys.AdSec.IStiffness.X">
            <summary>The axial stiffness.</summary>
        </member>
        <member name="T:Oasys.AdSec.IStiffness">
            <summary>Defines an axial stiffness, bending stiffness about local y-axis and bending
stiffness about local z-axis.
<para>See <see href="~/articles/glossary.md#stiffnessstiffness">Glossary</see></para></summary>
            <seealso cref="!:IServiceabilityResult.SecantStiffness" />
        </member>
        <member name="M:Oasys.AdSec.IMomentRange.Contains(Oasys.Units.Moment)">
            <summary>Checks if a given moment is within (or on the boundary of) the range.
</summary>
            <param name="moment">The moment to check</param>
        </member>
        <member name="P:Oasys.AdSec.IMomentRange.Max">
            <summary>The end of the range</summary>
        </member>
        <member name="P:Oasys.AdSec.IMomentRange.Min">
            <summary>The start of the range</summary>
        </member>
        <member name="T:Oasys.AdSec.IMomentRange">
            <summary>A pair of moments representing the start and end of a range.
<para>See <see href="~/articles/glossary.md#moment-rangesmoment-range">Glossary</see></para></summary>
        </member>
        <member name="P:Oasys.AdSec.ICrack.Position">
            <summary>The crack position.</summary>
            <exception cref="!:System.ArgumentNullException">If Position is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.ICrack.Width">
            <summary>The crack width.</summary>
        </member>
        <member name="T:Oasys.AdSec.ICrack">
            <summary>A crack result. Refer to <see cref="T:Oasys.AdSec.IServiceabilityResult" /><para>See <see href="~/articles/glossary.md#crackcrack">Glossary</see></para></summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ILoad.Create(System.Double,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.ILoad" /> from its
<see cref="!:X" />,
<see cref="!:YY" /> and
<see cref="!:ZZ" /> components.
</summary>
            <param name="x">The axial force.<br />
Positive x is tension.
</param>
            <param name="yy">The moment about local y-axis.<br />
Positive yy is anti-clockwise moment about local y-axis.
</param>
            <param name="zz">The moment about local z-axis.<br />
Positive zz is anti-clockwise moment about local z-axis.
</param>
            <returns>Load with the specified axial force and moments about local y and z axes.</returns>
            <exception cref="!:System.ArgumentException">
When any of its inputs is not a finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.ILoad.SetZZ(System.Double)">
            <summary>The moment about the local z-axis. It follows the
<a href="https://en.wikipedia.org/wiki/Right-hand_rule">right hand grip rule</a>
about the axis. Positive value is anti-clockwise about the local z-axis.
</summary>
            <exception cref="!:System.ArgumentException">
When value is out of range.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.ILoad.GetZZ">
            <summary>The moment about the local z-axis. It follows the
<a href="https://en.wikipedia.org/wiki/Right-hand_rule">right hand grip rule</a>
about the axis. Positive value is anti-clockwise about the local z-axis.
</summary>
            <exception cref="!:System.ArgumentException">
When value is out of range.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.ILoad.SetYY(System.Double)">
            <summary>The moment about the local y-axis. It follows the
<a href="https://en.wikipedia.org/wiki/Right-hand_rule">right hand grip rule</a>
about the axis. Positive value is anti-clockwise about the local y-axis.
</summary>
            <exception cref="!:System.ArgumentException">
When value is out of range.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.ILoad.GetYY">
            <summary>The moment about the local y-axis. It follows the
<a href="https://en.wikipedia.org/wiki/Right-hand_rule">right hand grip rule</a>
about the axis. Positive value is anti-clockwise about the local y-axis.
</summary>
            <exception cref="!:System.ArgumentException">
When value is out of range.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.ILoad.SetX(System.Double)">
            <summary>The axial force.
Tension is represented by a positive value, compression by a negative value.
</summary>
            <exception cref="!:System.ArgumentException">
When value is out of range.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.ILoad.GetX">
            <summary>The axial force.
Tension is represented by a positive value, compression by a negative value.
</summary>
            <exception cref="!:System.ArgumentException">
When value is out of range.
</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.ILoad">
            <summary>Defines an axial force and bending about the local y-axis and z-axis.
<para>See <see href="~/articles/glossary.md#loadload">Glossary</see></para></summary>
            <remarks>
                <see cref="T:SDK.Oasys.AdSec.ILoad" /> can be used as an input type for calculating
<see cref="!:IStrength" /> (ULS) and <see cref="T:SDK.Oasys.AdSec.IServiceability" /> (SLS) results.
</remarks>
            <seealso cref="!:IStrength" />
            <seealso cref="T:SDK.Oasys.AdSec.IServiceability" />
        </member>
        <member name="M:SDK.Oasys.AdSec.IDeformation.Create(System.Double,System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.IDeformation" /> from its
<see cref="!:X" />,
<see cref="!:YY" /> and
<see cref="!:ZZ" /> components.
</summary>
            <param name="x">The axial strain.<br />
Positive x indicates tension.
</param>
            <param name="yy">The curvature about local y-axis.<br />
Positive yy is anti-clockwise curvature about local y-axis.
</param>
            <param name="zz">The curvature about local z-axis.<br />
Positive zz is anti-clockwise curvature about local z-axis.
</param>
            <returns>Deformation with the specified axial strain and curvature about local y and z axes.</returns>
            <exception cref="!:System.ArgumentException">
When any of its inputs is not a finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.IDeformation.SetZZ(System.Double)">
            <summary>The curvature about local z-axis. It follows the
<a href="https://en.wikipedia.org/wiki/Right-hand_rule">right hand grip rule</a>
about the axis. Positive ZZ is anti-clockwise curvature about local z-axis.
</summary>
            <remarks>ZZ curvature is caused by <see cref="!:ILoad.ZZ" /> bending moment.</remarks>
            <exception cref="!:System.ArgumentException">
When the curvature is not a finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.IDeformation.GetZZ">
            <summary>The curvature about local z-axis. It follows the
<a href="https://en.wikipedia.org/wiki/Right-hand_rule">right hand grip rule</a>
about the axis. Positive ZZ is anti-clockwise curvature about local z-axis.
</summary>
            <remarks>ZZ curvature is caused by <see cref="!:ILoad.ZZ" /> bending moment.</remarks>
            <exception cref="!:System.ArgumentException">
When the curvature is not a finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.IDeformation.SetYY(System.Double)">
            <summary>The curvature about local y-axis. It follows the
<a href="https://en.wikipedia.org/wiki/Right-hand_rule">right hand grip rule</a>
about the axis. Positive YY is anti-clockwise curvature about local y-axis.
</summary>
            <remarks>YY curvature is caused by <see cref="!:ILoad.YY" /> bending moment.</remarks>
            <exception cref="!:System.ArgumentException">
When the curvature is not a finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.IDeformation.GetYY">
            <summary>The curvature about local y-axis. It follows the
<a href="https://en.wikipedia.org/wiki/Right-hand_rule">right hand grip rule</a>
about the axis. Positive YY is anti-clockwise curvature about local y-axis.
</summary>
            <remarks>YY curvature is caused by <see cref="!:ILoad.YY" /> bending moment.</remarks>
            <exception cref="!:System.ArgumentException">
When the curvature is not a finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.IDeformation.SetX(System.Double)">
            <summary>The axial strain. Positive X indicates tension.
</summary>
            <exception cref="!:System.ArgumentException">
When the axial strain is not a finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.IDeformation.GetX">
            <summary>The axial strain. Positive X indicates tension.
</summary>
            <exception cref="!:System.ArgumentException">
When the axial strain is not a finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.IDeformation">
            <summary>A deformation.
<para>See <see href="~/articles/glossary.md#deformationdeformation">Glossary</see></para></summary>
            <remarks>IDeformation can be used as an input type for calculating
ULS (<see cref="!:IStrength" />) and SLS (<see cref="T:SDK.Oasys.AdSec.IServiceability" />) results.
</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.IServiceability.Check(std.shared_ptr&lt;SDK.Oasys.AdSec.IDeformation&gt;)">
            <summary>Calculates serviceability results.
</summary>
            <param name="deformation">The deformation for which
the serviceability results are to be calculated.
</param>
            <returns>Serviceability results for the specified deformation.</returns>
        </member>
        <member name="M:SDK.Oasys.AdSec.IServiceability.Check(std.shared_ptr&lt;SDK.Oasys.AdSec.ILoad&gt;)">
            <summary>Calculates serviceability results.
</summary>
            <param name="load">The load for which the serviceability results are to be calculated.</param>
            <returns>Serviceability results for the specified load.</returns>
        </member>
        <member name="T:SDK.Oasys.AdSec.IServiceability">
            <summary>Performs serviceability analysis (SLS), for a given <see cref="T:SDK.Oasys.AdSec.ILoad" /> or <see cref="T:SDK.Oasys.AdSec.IDeformation" />.
<para>See <see href="~/articles/glossary.md#serviceability-resultserviceability-result">Glossary</see></para></summary>
            <remarks>Results are returned in <see cref="T:SDK.Oasys.AdSec.IServiceabilityResult" />.</remarks>
            <seealso cref="T:SDK.Oasys.AdSec.IServiceabilityResult" />
            <seealso cref="T:SDK.Oasys.AdSec.ILoad" />
            <seealso cref="T:SDK.Oasys.AdSec.IDeformation" />
        </member>
        <member name="P:Oasys.AdSec.IServiceabilityResult.Warnings">
            <summary>Warnings observed after the analysis.</summary>
            <exception cref="!:System.ArgumentNullException">If Warnings is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.IServiceabilityResult.Cracks">
            <summary>Crack results are calculated at bar positions or section surfaces depending
on the <see cref="!:Oasys.AdSec.DesignCode.IDesignCode">Design Code</see> specifications.
</summary>
            <remarks>If the applied action is outside the capacity range
of the section, the returned list will be empty. See
<see cref="P:Oasys.AdSec.IServiceabilityResult.MaximumWidthCrack" /> for the crack result
corresponding to the maximum crack width.
</remarks>
            <exception cref="!:System.ArgumentNullException">If Cracks is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.IServiceabilityResult.MaximumWidthCrack">
            <summary>The crack result from <see cref="P:Oasys.AdSec.IServiceabilityResult.Cracks" /> that corresponds to the maximum crack width.
</summary>
            <remarks>If the applied action is outside the capacity range
of the section, the returned maximum width crack result will
be <a href="https://docs.microsoft.com/en-us/dotnet/api/system.double.maxvalue?view=net-5.0">
maximum double value</a>.
</remarks>
            <exception cref="!:System.ArgumentNullException">If MaximumWidthCrack is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.IServiceabilityResult.CrackingUtilisation">
            <summary>The ratio of the applied load (moment and axial) to the load (moment and axial)
in the same direction that would cause the section to crack. Ratio &gt; 1 means section is cracked.
</summary>
            <remarks>
The section is cracked when the cracking utilisation ratio is
greater than 1. If the applied load is outside the capacity
range of the section, the cracking utilisation will be
<a href="https://docs.microsoft.com/en-us/dotnet/api/system.double.maxvalue?view=net-5.0">
maximum double value</a>.
</remarks>
        </member>
        <member name="P:Oasys.AdSec.IServiceabilityResult.SecantStiffness">
            <summary>The secant stiffness under the applied action.
<center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="10" class="text" transform="rotate(270)">Load</text><line x1="0" y1="280" x2="380" y2="280" /><text x="160" y="300" class="text">Deformation</text><polyline points="20,280 40,238 60,201 80,167 100,139 120,115 140,96 160,80 180,69 200,63 220,61 240,62 250,63 280,69 300,75" class="curve" /><line x1="20" y1="280" x2="200" y2="63" stroke-dasharray="4" /><line x1="50" y1="98" x2="350" y2="25" stroke-dasharray="4" /><text x="-10" y="220" class="text" transform="rotate(310)" text-anchor="end">Secant stiffness</text><text x="220" y="88" class="text" transform="rotate(347)" text-anchor="end">Tangent stiffness</text><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
  </style></svg></center></summary>
            <remarks>If the applied action is outside the capacity range
of the section, the secant stiffness will be zero.
</remarks>
            <exception cref="!:System.ArgumentNullException">If SecantStiffness is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.IServiceabilityResult.UncrackedMomentRanges">
            <summary>
The range of moments (in the direction of the applied moment,
assuming constant axial force) over which the section remains uncracked.
</summary>
            <exception cref="!:System.ArgumentNullException">If UncrackedMomentRanges is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.IServiceabilityResult.Deformation">
            <summary>The section deformation under the applied action.
</summary>
            <remarks>If the applied load is outside the capacity range
of the section, the returned deformation will consist
<a href="https://docs.microsoft.com/en-us/dotnet/api/system.double.maxvalue?view=net-5.0">
maximum double values</a>.
</remarks>
            <exception cref="!:System.ArgumentNullException">If Deformation is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.IServiceabilityResult.Load">
            <summary>The section load under the applied action.
</summary>
            <remarks>If the applied deformation is outside the capacity
range of the section, the returned load will be zero.
</remarks>
            <exception cref="!:System.ArgumentNullException">If Load is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.IServiceabilityResult">
            <summary>The result of serviceability analysis (SLS) calculated by <see cref="T:Oasys.AdSec.IServiceability" />.
</summary>
            <seealso cref="T:Oasys.AdSec.IServiceability" />
        </member>
        <member name="M:Oasys.AdSec.ILoad.Create(UnitsNet.Force,Oasys.Units.Moment,Oasys.Units.Moment)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.ILoad" /> from its
<see cref="P:Oasys.AdSec.ILoad.X" />,
<see cref="P:Oasys.AdSec.ILoad.YY" /> and
<see cref="P:Oasys.AdSec.ILoad.ZZ" /> components.
</summary>
            <param name="x">The axial force.<br />
Positive x is tension.
</param>
            <param name="yy">The moment about local y-axis.<br />
Positive yy is anti-clockwise moment about local y-axis.
</param>
            <param name="zz">The moment about local z-axis.<br />
Positive zz is anti-clockwise moment about local z-axis.
</param>
            <returns>Load with the specified axial force and moments about local y and z axes.</returns>
            <exception cref="!:System.ArgumentException">
When any of its inputs is not a finite value.
</exception>
        </member>
        <member name="P:Oasys.AdSec.ILoad.ZZ">
            <summary>The moment about the local z-axis. It follows the
<a href="https://en.wikipedia.org/wiki/Right-hand_rule">right hand grip rule</a>
about the axis. Positive value is anti-clockwise about the local z-axis.
</summary>
            <exception cref="!:System.ArgumentException">
When value is out of range.
</exception>
        </member>
        <member name="P:Oasys.AdSec.ILoad.YY">
            <summary>The moment about the local y-axis. It follows the
<a href="https://en.wikipedia.org/wiki/Right-hand_rule">right hand grip rule</a>
about the axis. Positive value is anti-clockwise about the local y-axis.
</summary>
            <exception cref="!:System.ArgumentException">
When value is out of range.
</exception>
        </member>
        <member name="P:Oasys.AdSec.ILoad.X">
            <summary>The axial force.
Tension is represented by a positive value, compression by a negative value.
</summary>
            <exception cref="!:System.ArgumentException">
When value is out of range.
</exception>
        </member>
        <member name="T:Oasys.AdSec.ILoad">
            <summary>Defines an axial force and bending about the local y-axis and z-axis.
<para>See <see href="~/articles/glossary.md#loadload">Glossary</see></para></summary>
            <remarks>
                <see cref="T:Oasys.AdSec.ILoad" /> can be used as an input type for calculating
<see cref="!:IStrength" /> (ULS) and <see cref="T:Oasys.AdSec.IServiceability" /> (SLS) results.
</remarks>
            <seealso cref="!:IStrength" />
            <seealso cref="T:Oasys.AdSec.IServiceability" />
        </member>
        <member name="M:Oasys.AdSec.IDeformation.Create(Oasys.Units.Strain,Oasys.Units.Curvature,Oasys.Units.Curvature)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.IDeformation" /> from its
<see cref="P:Oasys.AdSec.IDeformation.X" />,
<see cref="P:Oasys.AdSec.IDeformation.YY" /> and
<see cref="P:Oasys.AdSec.IDeformation.ZZ" /> components.
</summary>
            <param name="x">The axial strain.<br />
Positive x indicates tension.
</param>
            <param name="yy">The curvature about local y-axis.<br />
Positive yy is anti-clockwise curvature about local y-axis.
</param>
            <param name="zz">The curvature about local z-axis.<br />
Positive zz is anti-clockwise curvature about local z-axis.
</param>
            <returns>Deformation with the specified axial strain and curvature about local y and z axes.</returns>
            <exception cref="!:System.ArgumentException">
When any of its inputs is not a finite value.
</exception>
        </member>
        <member name="P:Oasys.AdSec.IDeformation.ZZ">
            <summary>The curvature about local z-axis. It follows the
<a href="https://en.wikipedia.org/wiki/Right-hand_rule">right hand grip rule</a>
about the axis. Positive ZZ is anti-clockwise curvature about local z-axis.
</summary>
            <remarks>ZZ curvature is caused by <see cref="!:ILoad.ZZ" /> bending moment.</remarks>
            <exception cref="!:System.ArgumentException">
When the curvature is not a finite value.
</exception>
        </member>
        <member name="P:Oasys.AdSec.IDeformation.YY">
            <summary>The curvature about local y-axis. It follows the
<a href="https://en.wikipedia.org/wiki/Right-hand_rule">right hand grip rule</a>
about the axis. Positive YY is anti-clockwise curvature about local y-axis.
</summary>
            <remarks>YY curvature is caused by <see cref="!:ILoad.YY" /> bending moment.</remarks>
            <exception cref="!:System.ArgumentException">
When the curvature is not a finite value.
</exception>
        </member>
        <member name="P:Oasys.AdSec.IDeformation.X">
            <summary>The axial strain. Positive X indicates tension.
</summary>
            <exception cref="!:System.ArgumentException">
When the axial strain is not a finite value.
</exception>
        </member>
        <member name="T:Oasys.AdSec.IDeformation">
            <summary>A deformation.
<para>See <see href="~/articles/glossary.md#deformationdeformation">Glossary</see></para></summary>
            <remarks>IDeformation can be used as an input type for calculating
ULS (<see cref="!:IStrength" />) and SLS (<see cref="T:Oasys.AdSec.IServiceability" />) results.
</remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IParabolaRectangleStressStrainCurve.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint&gt;,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IParabolaRectangleStressStrainCurve" />.
</summary>
            <param name="yieldPoint">
The point up to which the stress-strain relationship is parabolic, and beyond which
there is no change in stress with change in strain.
</param>
            <param name="failureStrain">The strain beyond which the material fails.</param>
            <remarks>
The initial gradient of the curve is set such that the parabola has
zero gradient at the yield point.
</remarks>
            <exception cref="!:System.ArgumentException">
When the yield strain is larger than the failure strain.
</exception>
            <exception cref="!:System.ArgumentException">
When any of the stress-strain inputs is negative or infinite.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IParabolaRectangleStressStrainCurve.GetYieldPoint">
            <summary>The point up to which the stress-strain relationship is parabolic,
and beyond which there is no change in stress with change in strain.
</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IParabolaRectangleStressStrainCurve">
            <summary>
A type of <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" /> which is initially parabolic.
The stress is constant beyond the yield point. The material provides no strength beyond
the failure point.
<center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 30,261 40,242 50,225 60,209 70,194 80,180 90,167 100,156 110,145 120,136 130,127 140,120 150,114 160,109 170,105 180,102 190,101 200,100 400,100" class="curve" /><text x="210" y="80" class="text">Yield point</text><circle cX="200" cy="100" r="15" /><line x1="400" y1="100" x2="400" y2="280" stroke-dasharray="4" /><text x="380" y="260" class="text" text-anchor="end">Failure strain</text><circle cX="400" cy="280" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
  </style></svg></center></summary>
            <remarks>Parabola-rectangle curve is commonly used for concrete materials.</remarks>
        </member>
        <member name="M:Oasys.AdSec.Materials.StressStrainCurves.IParabolaRectangleStressStrainCurve.Create(Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint,Oasys.Units.Strain)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IParabolaRectangleStressStrainCurve" />.
</summary>
            <param name="yieldPoint">
The point up to which the stress-strain relationship is parabolic, and beyond which
there is no change in stress with change in strain.
</param>
            <param name="failureStrain">The strain beyond which the material fails.</param>
            <remarks>
The initial gradient of the curve is set such that the parabola has
zero gradient at the yield point.
</remarks>
            <exception cref="!:System.ArgumentException">
When the yield strain is larger than the failure strain.
</exception>
            <exception cref="!:System.ArgumentException">
When any of the stress-strain inputs is negative or infinite.
</exception>
            <exception cref="!:System.ArgumentNullException">If yieldPoint is null</exception>
        </member>
        <member name="P:Oasys.AdSec.Materials.StressStrainCurves.IParabolaRectangleStressStrainCurve.YieldPoint">
            <summary>The point up to which the stress-strain relationship is parabolic,
and beyond which there is no change in stress with change in strain.
</summary>
            <exception cref="!:System.ArgumentNullException">If YieldPoint is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.Materials.StressStrainCurves.IParabolaRectangleStressStrainCurve">
            <summary>
A type of <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" /> which is initially parabolic.
The stress is constant beyond the yield point. The material provides no strength beyond
the failure point.
<center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 30,261 40,242 50,225 60,209 70,194 80,180 90,167 100,156 110,145 120,136 130,127 140,120 150,114 160,109 170,105 180,102 190,101 200,100 400,100" class="curve" /><text x="210" y="80" class="text">Yield point</text><circle cX="200" cy="100" r="15" /><line x1="400" y1="100" x2="400" y2="280" stroke-dasharray="4" /><text x="380" y="260" class="text" text-anchor="end">Failure strain</text><circle cX="400" cy="280" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
  </style></svg></center></summary>
            <remarks>Parabola-rectangle curve is commonly used for concrete materials.</remarks>
        </member>
        <member name="M:SDK.Oasys.Profiles.IWebConstant.Create(System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.IWebConstant" /> from its <see cref="!:Thickness" />.
</summary>
            <param name="thickness">Defines the web's thickness.</param>
            <returns>Constant thickness web with the specified dimension.</returns>
            <exception cref="!:System.ArgumentException">
When thickness is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IWebConstant.SetThickness(System.Double)">
            <summary>The web thickness.
</summary>
            <exception cref="!:System.ArgumentException">
When the thickness is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IWebConstant.GetThickness">
            <summary>The web thickness.
</summary>
            <exception cref="!:System.ArgumentException">
When the thickness is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.IWebConstant">
            <summary>A constant web used in profiles. A constant web has the same thickness along its depth.
<center><svg height="350" width="350"><rect class="profile-line" x="150" y="75" width="50" height="200" fill="#fc8d62" /><line class="profile-line" x1="150" y1="290" x2="200" y2="290" /><line class="profile-line" x1="150" y1="280" x2="150" y2="300" /><line class="profile-line" x1="200" y1="280" x2="200" y2="300" /><text class="profile-label" x="175" y="320" fill="black" text-anchor="middle">Thickness</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.IWebConstant" /> inherits <see cref="T:SDK.Oasys.Profiles.IWeb" />.
<para>For tapered thickness web see <see cref="!:IWebTapered" />.</para></remarks>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamCellularProfile.Create(System.Double,std.shared_ptr&lt;SDK.Oasys.Profiles.IFlange&gt;,std.shared_ptr&lt;SDK.Oasys.Profiles.IWebConstant&gt;,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.IIBeamCellularProfile" /> profile from its
<see cref="!:IIBeamProfile.Depth" />,
<see cref="!:Flanges" />,
<see cref="!:Web" /> and
<see cref="!:WebOpening" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="flanges">Defines the profile's flanges.</param>
            <param name="web">Defines the profile's web.</param>
            <param name="webOpening">Defines the size of the web opening.</param>
            <exception cref="!:System.ArgumentException">
When any of the dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamCellularProfile.SetWebOpening(System.Double)">
            <summary>The size of the web opening.
</summary>
            <exception cref="!:System.ArgumentException">
When the size is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamCellularProfile.GetWebOpening">
            <summary>The size of the web opening.
</summary>
            <exception cref="!:System.ArgumentException">
When the size is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamCellularProfile.SetWeb(std.shared_ptr&lt;SDK.Oasys.Profiles.IWebConstant&gt;)">
            <summary>The web of the beam.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamCellularProfile.GetWeb">
            <summary>The web of the beam.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamCellularProfile.SetFlanges(std.shared_ptr&lt;SDK.Oasys.Profiles.IFlange&gt;)">
            <summary>The flange of the cellular I-beam section profile.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamCellularProfile.GetFlanges">
            <summary>The flange of the cellular I-beam section profile.</summary>
        </member>
        <member name="T:SDK.Oasys.Profiles.IIBeamCellularProfile">
            <summary>
A cellular I-beam section profile.
It is an I-beam section profile with an opening at the centre of the web.
<center><svg height="350" width="350"><rect x="75" y="50" width="200" height="50" fill="#8da0cb" /><rect x="75" y="250" width="200" height="50" fill="#8da0cb" /><rect x="160" y="100" width="30" height="40" fill="#fc8d62" /><rect x="160" y="210" width="30" height="40" fill="#fc8d62" /><path class="profile-outline" d="M75 50 L275 50 L275 100 L190 100 L190 140 L160 140 L160 100 L75 100 Z" /><path class="profile-outline" d="M190 210 L190 250 L275 250 L275 300 L75 300 L75 250 L160 250 L160 210 Z" /><line class="profile-line" x1="160" y1="250" x2="190" y2="250" stroke-dasharray="4" /><line class="profile-line" x1="160" y1="100" x2="190" y2="100" stroke-dasharray="4" /><line class="profile-line" x1="160" y1="140" x2="160" y2="210" stroke-dasharray="4" /><line class="profile-line" x1="190" y1="140" x2="190" y2="210" stroke-dasharray="4" /><circle cx="250" cy="275" r="4" fill="black" /><circle cx="250" cy="75" r="4" fill="black" /><line class="profile-line" x1="250" y1="275" x2="250" y2="220" /><line class="profile-line" x1="250" y1="75" x2="250" y2="195" /><text class="profile-label" x="250" y="210" fill="black" text-anchor="middle">Flanges</text><line class="profile-line" x1="55" y1="50" x2="55" y2="300" /><line class="profile-line" x1="45" y1="50" x2="65" y2="50" /><line class="profile-line" x1="45" y1="300" x2="65" y2="300" /><text class="profile-label" x="-175" y="45" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><line class="profile-line" x1="140" y1="140" x2="140" y2="210" /><line class="profile-line" x1="130" y1="140" x2="150" y2="140" /><line class="profile-line" x1="130" y1="210" x2="150" y2="210" /><text class="profile-label" x="-175" y="120" fill="black" text-anchor="middle" transform="rotate(-90)">Web Opening</text><circle cx="175" cy="235" r="4" fill="black" /><line class="profile-line" x1="105" y1="235" x2="175" y2="235" /><text class="profile-label" x="100" y="240" fill="black" text-anchor="end">Web</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="195" y="175" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.IIBeamCellularProfile" /> inherits <see cref="T:SDK.Oasys.Profiles.IProfile" />.
<para>The I-beam is centered at the origin of its local coordinate system.</para></remarks>
        </member>
        <member name="M:Oasys.Profiles.IWebConstant.Create(UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.IWebConstant" /> from its <see cref="P:Oasys.Profiles.IWebConstant.Thickness" />.
</summary>
            <param name="thickness">Defines the web's thickness.</param>
            <returns>Constant thickness web with the specified dimension.</returns>
            <exception cref="!:System.ArgumentException">
When thickness is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IWebConstant.Thickness">
            <summary>The web thickness.
</summary>
            <exception cref="!:System.ArgumentException">
When the thickness is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.IWebConstant">
            <summary>A constant web used in profiles. A constant web has the same thickness along its depth.
<center><svg height="350" width="350"><rect class="profile-line" x="150" y="75" width="50" height="200" fill="#fc8d62" /><line class="profile-line" x1="150" y1="290" x2="200" y2="290" /><line class="profile-line" x1="150" y1="280" x2="150" y2="300" /><line class="profile-line" x1="200" y1="280" x2="200" y2="300" /><text class="profile-label" x="175" y="320" fill="black" text-anchor="middle">Thickness</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.IWebConstant" /> inherits <see cref="T:Oasys.Profiles.IWeb" />.
<para>For tapered thickness web see <see cref="!:IWebTapered" />.</para></remarks>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamProfile.GetBottomFlange">
            <summary>The bottom flange of the beam. Bottom is relative to the beam local access.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamProfile.GetTopFlange">
            <summary>The top flange of the beam. Top is relative to the beam local access.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamProfile.SetDepth(System.Double)">
            <summary>The depth of the beam.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IIBeamProfile.GetDepth">
            <summary>The depth of the beam.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.IIBeamProfile">
            <summary>An IBeam section profile.
</summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.IIBeamProfile" /> inherits <see cref="T:SDK.Oasys.Profiles.IProfile" />.
<see cref="T:SDK.Oasys.Profiles.IIBeamProfile" /> is a base class for:
<see cref="!:IIBeamAsymmetricalProfile" /> and <see cref="!:IIBeamSymmetricalProfile" />.
<para>The I-beam is centered at the origin of its local coordinate system.</para></remarks>
        </member>
        <member name="M:Oasys.Profiles.IIBeamCellularProfile.Create(UnitsNet.Length,Oasys.Profiles.IFlange,Oasys.Profiles.IWebConstant,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.IIBeamCellularProfile" /> profile from its
<see cref="!:IIBeamProfile.Depth" />,
<see cref="P:Oasys.Profiles.IIBeamCellularProfile.Flanges" />,
<see cref="P:Oasys.Profiles.IIBeamCellularProfile.Web" /> and
<see cref="P:Oasys.Profiles.IIBeamCellularProfile.WebOpening" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="flanges">Defines the profile's flanges.</param>
            <param name="web">Defines the profile's web.</param>
            <param name="webOpening">Defines the size of the web opening.</param>
            <exception cref="!:System.ArgumentException">
When any of the dimensions is not a positive and finite value.
</exception>
            <exception cref="!:System.ArgumentNullException">If flanges is null</exception>
            <exception cref="!:System.ArgumentNullException">If web is null</exception>
        </member>
        <member name="P:Oasys.Profiles.IIBeamCellularProfile.WebOpening">
            <summary>The size of the web opening.
</summary>
            <exception cref="!:System.ArgumentException">
When the size is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IIBeamCellularProfile.Web">
            <summary>The web of the beam.</summary>
            <exception cref="!:System.ArgumentNullException">If Web is set to null</exception>
        </member>
        <member name="P:Oasys.Profiles.IIBeamCellularProfile.Flanges">
            <summary>The flange of the cellular I-beam section profile.</summary>
            <exception cref="!:System.ArgumentNullException">If Flanges is set to null</exception>
        </member>
        <member name="T:Oasys.Profiles.IIBeamCellularProfile">
            <summary>
A cellular I-beam section profile.
It is an I-beam section profile with an opening at the centre of the web.
<center><svg height="350" width="350"><rect x="75" y="50" width="200" height="50" fill="#8da0cb" /><rect x="75" y="250" width="200" height="50" fill="#8da0cb" /><rect x="160" y="100" width="30" height="40" fill="#fc8d62" /><rect x="160" y="210" width="30" height="40" fill="#fc8d62" /><path class="profile-outline" d="M75 50 L275 50 L275 100 L190 100 L190 140 L160 140 L160 100 L75 100 Z" /><path class="profile-outline" d="M190 210 L190 250 L275 250 L275 300 L75 300 L75 250 L160 250 L160 210 Z" /><line class="profile-line" x1="160" y1="250" x2="190" y2="250" stroke-dasharray="4" /><line class="profile-line" x1="160" y1="100" x2="190" y2="100" stroke-dasharray="4" /><line class="profile-line" x1="160" y1="140" x2="160" y2="210" stroke-dasharray="4" /><line class="profile-line" x1="190" y1="140" x2="190" y2="210" stroke-dasharray="4" /><circle cx="250" cy="275" r="4" fill="black" /><circle cx="250" cy="75" r="4" fill="black" /><line class="profile-line" x1="250" y1="275" x2="250" y2="220" /><line class="profile-line" x1="250" y1="75" x2="250" y2="195" /><text class="profile-label" x="250" y="210" fill="black" text-anchor="middle">Flanges</text><line class="profile-line" x1="55" y1="50" x2="55" y2="300" /><line class="profile-line" x1="45" y1="50" x2="65" y2="50" /><line class="profile-line" x1="45" y1="300" x2="65" y2="300" /><text class="profile-label" x="-175" y="45" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><line class="profile-line" x1="140" y1="140" x2="140" y2="210" /><line class="profile-line" x1="130" y1="140" x2="150" y2="140" /><line class="profile-line" x1="130" y1="210" x2="150" y2="210" /><text class="profile-label" x="-175" y="120" fill="black" text-anchor="middle" transform="rotate(-90)">Web Opening</text><circle cx="175" cy="235" r="4" fill="black" /><line class="profile-line" x1="105" y1="235" x2="175" y2="235" /><text class="profile-label" x="100" y="240" fill="black" text-anchor="end">Web</text><circle class="profile-origin" cx="175" cy="175" r="6" /><text class="profile-label" x="195" y="175" fill="black" text-anchor="start">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.IIBeamCellularProfile" /> inherits <see cref="T:Oasys.Profiles.IProfile" />.
<para>The I-beam is centered at the origin of its local coordinate system.</para></remarks>
        </member>
        <member name="P:Oasys.Profiles.IIBeamProfile.BottomFlange">
            <summary>The bottom flange of the beam. Bottom is relative to the beam local access.</summary>
            <exception cref="!:System.ArgumentNullException">If BottomFlange is set to null</exception>
        </member>
        <member name="P:Oasys.Profiles.IIBeamProfile.TopFlange">
            <summary>The top flange of the beam. Top is relative to the beam local access.</summary>
            <exception cref="!:System.ArgumentNullException">If TopFlange is set to null</exception>
        </member>
        <member name="P:Oasys.Profiles.IIBeamProfile.Depth">
            <summary>The depth of the beam.
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.IIBeamProfile">
            <summary>An IBeam section profile.
</summary>
            <remarks>
                <see cref="T:Oasys.Profiles.IIBeamProfile" /> inherits <see cref="T:Oasys.Profiles.IProfile" />.
<see cref="T:Oasys.Profiles.IIBeamProfile" /> is a base class for:
<see cref="!:IIBeamAsymmetricalProfile" /> and <see cref="!:IIBeamSymmetricalProfile" />.
<para>The I-beam is centered at the origin of its local coordinate system.</para></remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint.Create(System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint" />.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint">
            <summary>
 A stress-strain point.
 It can be used as an input type to define a <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" />.
</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IBilinearStressStrainCurve.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint&gt;,std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IBilinearStressStrainCurve" />
with a constant gradient between the yield and the failure points.
</summary>
            <param name="yieldPoint">
The point up to which the stress-strain relationship is elastic, and
beyond which the curve has a constant gradient.
</param>
            <param name="failurePoint">The point at which the material fails.</param>
            <exception cref="!:System.ArgumentException">
When the yield strain is larger than the failure strain.
</exception>
            <exception cref="!:System.ArgumentException">
When the yield stress is larger than the failure stress.
</exception>
            <exception cref="!:System.ArgumentException">
When any of the stress-strain inputs is negative or infinite.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IBilinearStressStrainCurve.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint&gt;,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IBilinearStressStrainCurve" />
with a zero gradient between the yield and the failure points.
</summary>
            <param name="yieldPoint">
The point up to which the stress-strain relationship is elastic, and
beyond which there is no change in stress with change in strain.
</param>
            <param name="failureStrain">The strain at which the material fails.</param>
            <exception cref="!:System.ArgumentException">
When the yield strain is larger than the failure strain.
</exception>
            <exception cref="!:System.ArgumentException">
When any of the stress-strain inputs is negative or infinite.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IBilinearStressStrainCurve.GetFailurePoint">
            <summary>The point at which the material fails.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IBilinearStressStrainCurve.GetYieldPoint">
            <summary>The point up to which the stress-strain relationship is elastic.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IBilinearStressStrainCurve">
            <summary>
A type of <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" /> in which the stress is
directly proportional to the strain until the yield point. The
curve has a constant gradient between the yield and the failure points.
<center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 100,100 400,100" class="curve" /><text x="110" y="80" class="text">Yield point</text><circle cX="100" cy="100" r="15" /><line x1="400" y1="100" x2="400" y2="280" stroke-dasharray="4" /><text x="380" y="260" class="text" text-anchor="end">Failure strain</text><circle cX="400" cy="280" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
  </style></svg><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 100,100 400,60" class="curve" /><text x="110" y="80" class="text">Yield point</text><circle cX="100" cy="100" r="15" /><text x="490" y="40" class="text" text-anchor="end">Failure point</text><circle cX="400" cy="60" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
  </style></svg></center></summary>
        </member>
        <member name="M:Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint.Create(UnitsNet.Pressure,Oasys.Units.Strain)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint" />.</summary>
        </member>
        <member name="T:Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint">
            <summary>
 A stress-strain point.
 It can be used as an input type to define a <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" />.
</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve.StressAt(System.Double)">
            <summary>The stress at a given strain.</summary>
            <param name="strain">The strain at which stress is to be calculated.</param>
            <returns>Stress at given strain.</returns>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve.GetFailureStrain">
            <summary>The strain at which the material fails.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve">
            <summary>A stress-strain curve.
It can be used to define the tension or the compression
part of an <see cref="!:ITensionCompressionCurve" />.
<para>See <see href="~/articles/glossary.md#stress-strain-curvestress-strain-curve">Glossary</see></para></summary>
            <remarks>
                <see cref="T:SDK.Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" /> is a base class for other stress-strain curve types,
e.g. <see cref="!:ILinearStressStrainCurve" /> and <see cref="!:IRectangularStressStrainCurve" />.
The stress-strain inputs must have positive and finite values. The nature of the
stress-strain curve is considered to be tensile or compressive based on the
parameter of <see cref="!:ITensionCompressionCurve.Create(IStressStrainCurve, IStressStrainCurve)" />
to which it has been assigned.
</remarks>
        </member>
        <member name="M:Oasys.AdSec.Materials.StressStrainCurves.IBilinearStressStrainCurve.Create(Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint,Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IBilinearStressStrainCurve" />
with a constant gradient between the yield and the failure points.
</summary>
            <param name="yieldPoint">
The point up to which the stress-strain relationship is elastic, and
beyond which the curve has a constant gradient.
</param>
            <param name="failurePoint">The point at which the material fails.</param>
            <exception cref="!:System.ArgumentException">
When the yield strain is larger than the failure strain.
</exception>
            <exception cref="!:System.ArgumentException">
When the yield stress is larger than the failure stress.
</exception>
            <exception cref="!:System.ArgumentException">
When any of the stress-strain inputs is negative or infinite.
</exception>
            <exception cref="!:System.ArgumentNullException">If yieldPoint is null</exception>
            <exception cref="!:System.ArgumentNullException">If failurePoint is null</exception>
        </member>
        <member name="M:Oasys.AdSec.Materials.StressStrainCurves.IBilinearStressStrainCurve.Create(Oasys.AdSec.Materials.StressStrainCurves.IStressStrainPoint,Oasys.Units.Strain)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IBilinearStressStrainCurve" />
with a zero gradient between the yield and the failure points.
</summary>
            <param name="yieldPoint">
The point up to which the stress-strain relationship is elastic, and
beyond which there is no change in stress with change in strain.
</param>
            <param name="failureStrain">The strain at which the material fails.</param>
            <exception cref="!:System.ArgumentException">
When the yield strain is larger than the failure strain.
</exception>
            <exception cref="!:System.ArgumentException">
When any of the stress-strain inputs is negative or infinite.
</exception>
            <exception cref="!:System.ArgumentNullException">If yieldPoint is null</exception>
        </member>
        <member name="P:Oasys.AdSec.Materials.StressStrainCurves.IBilinearStressStrainCurve.FailurePoint">
            <summary>The point at which the material fails.</summary>
            <exception cref="!:System.ArgumentNullException">If FailurePoint is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.Materials.StressStrainCurves.IBilinearStressStrainCurve.YieldPoint">
            <summary>The point up to which the stress-strain relationship is elastic.</summary>
            <exception cref="!:System.ArgumentNullException">If YieldPoint is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.Materials.StressStrainCurves.IBilinearStressStrainCurve">
            <summary>
A type of <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" /> in which the stress is
directly proportional to the strain until the yield point. The
curve has a constant gradient between the yield and the failure points.
<center><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 100,100 400,100" class="curve" /><text x="110" y="80" class="text">Yield point</text><circle cX="100" cy="100" r="15" /><line x1="400" y1="100" x2="400" y2="280" stroke-dasharray="4" /><text x="380" y="260" class="text" text-anchor="end">Failure strain</text><circle cX="400" cy="280" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
  </style></svg><svg width="500" height="300"><line x1="20" y1="300" x2="20" y2="20" /><text x="-160" y="15" class="text" transform="rotate(270)">Stress</text><line x1="0" y1="280" x2="480" y2="280" /><text x="200" y="300" class="text">Strain</text><polyline points="20,280 100,100 400,60" class="curve" /><text x="110" y="80" class="text">Yield point</text><circle cX="100" cy="100" r="15" /><text x="490" y="40" class="text" text-anchor="end">Failure point</text><circle cX="400" cy="60" r="15" /><style>
    .text { font: 14px sans-serif; }
    .curve {stroke:#41a2e0; stroke-width:3; fill:none;}
    line {stroke:#666;}
    circle {stroke:black; stroke-width:1; fill:none;}
  </style></svg></center></summary>
        </member>
        <member name="M:Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve.StressAt(Oasys.Units.Strain)">
            <summary>The stress at a given strain.</summary>
            <param name="strain">The strain at which stress is to be calculated.</param>
            <returns>Stress at given strain.</returns>
        </member>
        <member name="P:Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve.FailureStrain">
            <summary>The strain at which the material fails.</summary>
        </member>
        <member name="T:Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve">
            <summary>A stress-strain curve.
It can be used to define the tension or the compression
part of an <see cref="!:ITensionCompressionCurve" />.
<para>See <see href="~/articles/glossary.md#stress-strain-curvestress-strain-curve">Glossary</see></para></summary>
            <remarks>
                <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve" /> is a base class for other stress-strain curve types,
e.g. <see cref="!:ILinearStressStrainCurve" /> and <see cref="!:IRectangularStressStrainCurve" />.
The stress-strain inputs must have positive and finite values. The nature of the
stress-strain curve is considered to be tensile or compressive based on the
parameter of <see cref="!:ITensionCompressionCurve.Create(IStressStrainCurve, IStressStrainCurve)" />
to which it has been assigned.
</remarks>
        </member>
        <member name="M:SDK.Oasys.Profiles.IWeb.GetBottomThickness">
            <summary>The bottom thickness. Bottom is relative to the profiles local z-axis.
</summary>
            <exception cref="!:System.ArgumentException">
When the bottom thickness is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IWeb.GetTopThickness">
            <summary>The top thickness. Top is relative to the profiles local z-axis.
</summary>
            <exception cref="!:System.ArgumentException">
When the top thickness is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.IWeb">
            <summary>Defines a profile web. Thickness only is defined. Depth is defined by the profile.
</summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.IWeb" /> is a base class for:
<see cref="!:IWebConstant" /> and <see cref="!:IWebTapered" />.
</remarks>
        </member>
        <member name="M:SDK.Oasys.Profiles.IFlange.Create(System.Double,System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.IFlange" /> from its
<see cref="!:Width" /> and
<see cref="!:Thickness" />.
</summary>
            <param name="width">Defines the flange width.</param>
            <param name="thickness">Defines the flange thickness.</param>
            <returns>Flange with the specified dimensions.</returns>
            <exception cref="!:System.ArgumentException">
When any of its dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IFlange.SetThickness(System.Double)">
            <summary>The flange thickness.
</summary>
            <exception cref="!:System.ArgumentException">
When the flange thickness is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IFlange.GetThickness">
            <summary>The flange thickness.
</summary>
            <exception cref="!:System.ArgumentException">
When the flange thickness is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IFlange.SetWidth(System.Double)">
            <summary>The flange width.
</summary>
            <exception cref="!:System.ArgumentException">
When the flange width is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IFlange.GetWidth">
            <summary>The flange width.
</summary>
            <exception cref="!:System.ArgumentException">
When the flange width is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.IFlange">
            <summary>A flange used in profiles.
<center><svg height="350" width="350"><rect class="profile-line" x="75" y="150" width="200" height="50" fill="#8da0cb" /><line class="profile-line" x1="55" y1="150" x2="55" y2="200" /><line class="profile-line" x1="45" y1="150" x2="65" y2="150" /><line class="profile-line" x1="45" y1="200" x2="65" y2="200" /><text class="profile-label" x="-175" y="35" fill="black" text-anchor="middle" transform="rotate(-90)">Thickness</text><line class="profile-line" x1="75" y1="230" x2="275" y2="230" /><line class="profile-line" x1="75" y1="220" x2="75" y2="240" /><line class="profile-line" x1="275" y1="220" x2="275" y2="240" /><text class="profile-label" x="175" y="250" fill="black" text-anchor="middle">Width</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IAngleProfile.Create(System.Double,std.shared_ptr&lt;SDK.Oasys.Profiles.IFlange&gt;,std.shared_ptr&lt;SDK.Oasys.Profiles.IWeb&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.Profiles.IAngleProfile" /> profile from its
<see cref="!:Depth" />,
<see cref="!:Flange" /> and
<see cref="!:Web" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="flange">Defines the profile's flange.</param>
            <param name="web">Defines the profile's web.</param>
            <returns>Angle profile with the specified dimensions.</returns>
            <exception cref="!:System.ArgumentException">
When any of its dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IAngleProfile.SetWeb(std.shared_ptr&lt;SDK.Oasys.Profiles.IWeb&gt;)">
            <summary>The web of the angle profile.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IAngleProfile.GetWeb">
            <summary>The web of the angle profile.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IAngleProfile.SetFlange(std.shared_ptr&lt;SDK.Oasys.Profiles.IFlange&gt;)">
            <summary>The flange of the angle profile (leg in the local y axis).</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IAngleProfile.GetFlange">
            <summary>The flange of the angle profile (leg in the local y axis).</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IAngleProfile.SetDepth(System.Double)">
            <summary>The depth of the angle profile (leg in the local z axis).
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IAngleProfile.GetDepth">
            <summary>The depth of the angle profile (leg in the local z axis).
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.IAngleProfile">
            <summary>Defines an angle profile.
<center><svg height="350" width="350"><rect x="125" y="250" width="150" height="50" fill="#8da0cb" /><rect x="125" y="50" width="30" height="200" fill="#fc8d62" /><path class="profile-outline" d="M125 50 L155 50 L155 250 L275 250 L275 300 L125 300 Z" /><line class="profile-line" x1="125" y1="250" x2="155" y2="250" stroke-dasharray="4" /><circle cx="220" cy="275" r="4" fill="black" /><line class="profile-line" x1="220" y1="275" x2="220" y2="200" /><text class="profile-label" x="220" y="190" fill="black" text-anchor="middle">Flange</text><circle cx="140" cy="100" r="4" fill="black" /><line class="profile-line" x1="140" y1="100" x2="220" y2="100" /><text class="profile-label" x="230" y="105" fill="black">Web</text><line class="profile-line" x1="100" y1="50" x2="100" y2="300" /><line class="profile-line" x1="90" y1="50" x2="110" y2="50" /><line class="profile-line" x1="90" y1="300" x2="110" y2="300" /><text class="profile-label" x="-175" y="90" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><circle class="profile-origin" cx="125" cy="300" r="6" /><text class="profile-label" x="130" y="325" fill="black">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.IAngleProfile" /> inherits <see cref="T:SDK.Oasys.Profiles.IProfile" />.
<para>The outside corner of the flange and web (min y and min z extent in the local coordinate system)
is the origin of its local coordinate system.
</para></remarks>
        </member>
        <member name="P:Oasys.Profiles.IWeb.BottomThickness">
            <summary>The bottom thickness. Bottom is relative to the profiles local z-axis.
</summary>
            <exception cref="!:System.ArgumentException">
When the bottom thickness is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IWeb.TopThickness">
            <summary>The top thickness. Top is relative to the profiles local z-axis.
</summary>
            <exception cref="!:System.ArgumentException">
When the top thickness is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.IWeb">
            <summary>Defines a profile web. Thickness only is defined. Depth is defined by the profile.
</summary>
            <remarks>
                <see cref="T:Oasys.Profiles.IWeb" /> is a base class for:
<see cref="!:IWebConstant" /> and <see cref="!:IWebTapered" />.
</remarks>
        </member>
        <member name="M:Oasys.Profiles.IFlange.Create(UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.IFlange" /> from its
<see cref="P:Oasys.Profiles.IFlange.Width" /> and
<see cref="P:Oasys.Profiles.IFlange.Thickness" />.
</summary>
            <param name="width">Defines the flange width.</param>
            <param name="thickness">Defines the flange thickness.</param>
            <returns>Flange with the specified dimensions.</returns>
            <exception cref="!:System.ArgumentException">
When any of its dimensions is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IFlange.Thickness">
            <summary>The flange thickness.
</summary>
            <exception cref="!:System.ArgumentException">
When the flange thickness is not a positive and finite value.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IFlange.Width">
            <summary>The flange width.
</summary>
            <exception cref="!:System.ArgumentException">
When the flange width is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.IFlange">
            <summary>A flange used in profiles.
<center><svg height="350" width="350"><rect class="profile-line" x="75" y="150" width="200" height="50" fill="#8da0cb" /><line class="profile-line" x1="55" y1="150" x2="55" y2="200" /><line class="profile-line" x1="45" y1="150" x2="65" y2="150" /><line class="profile-line" x1="45" y1="200" x2="65" y2="200" /><text class="profile-label" x="-175" y="35" fill="black" text-anchor="middle" transform="rotate(-90)">Thickness</text><line class="profile-line" x1="75" y1="230" x2="275" y2="230" /><line class="profile-line" x1="75" y1="220" x2="75" y2="240" /><line class="profile-line" x1="275" y1="220" x2="275" y2="240" /><text class="profile-label" x="175" y="250" fill="black" text-anchor="middle">Width</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
        </member>
        <member name="M:Oasys.Profiles.IAngleProfile.Create(UnitsNet.Length,Oasys.Profiles.IFlange,Oasys.Profiles.IWeb)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.IAngleProfile" /> profile from its
<see cref="P:Oasys.Profiles.IAngleProfile.Depth" />,
<see cref="P:Oasys.Profiles.IAngleProfile.Flange" /> and
<see cref="P:Oasys.Profiles.IAngleProfile.Web" />.
</summary>
            <param name="depth">Defines the profile's depth.</param>
            <param name="flange">Defines the profile's flange.</param>
            <param name="web">Defines the profile's web.</param>
            <returns>Angle profile with the specified dimensions.</returns>
            <exception cref="!:System.ArgumentException">
When any of its dimensions is not a positive and finite value.
</exception>
            <exception cref="!:System.ArgumentNullException">If flange is null</exception>
            <exception cref="!:System.ArgumentNullException">If web is null</exception>
        </member>
        <member name="P:Oasys.Profiles.IAngleProfile.Web">
            <summary>The web of the angle profile.</summary>
            <exception cref="!:System.ArgumentNullException">If Web is set to null</exception>
        </member>
        <member name="P:Oasys.Profiles.IAngleProfile.Flange">
            <summary>The flange of the angle profile (leg in the local y axis).</summary>
            <exception cref="!:System.ArgumentNullException">If Flange is set to null</exception>
        </member>
        <member name="P:Oasys.Profiles.IAngleProfile.Depth">
            <summary>The depth of the angle profile (leg in the local z axis).
</summary>
            <exception cref="!:System.ArgumentException">
When the depth is not a positive and finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.IAngleProfile">
            <summary>Defines an angle profile.
<center><svg height="350" width="350"><rect x="125" y="250" width="150" height="50" fill="#8da0cb" /><rect x="125" y="50" width="30" height="200" fill="#fc8d62" /><path class="profile-outline" d="M125 50 L155 50 L155 250 L275 250 L275 300 L125 300 Z" /><line class="profile-line" x1="125" y1="250" x2="155" y2="250" stroke-dasharray="4" /><circle cx="220" cy="275" r="4" fill="black" /><line class="profile-line" x1="220" y1="275" x2="220" y2="200" /><text class="profile-label" x="220" y="190" fill="black" text-anchor="middle">Flange</text><circle cx="140" cy="100" r="4" fill="black" /><line class="profile-line" x1="140" y1="100" x2="220" y2="100" /><text class="profile-label" x="230" y="105" fill="black">Web</text><line class="profile-line" x1="100" y1="50" x2="100" y2="300" /><line class="profile-line" x1="90" y1="50" x2="110" y2="50" /><line class="profile-line" x1="90" y1="300" x2="110" y2="300" /><text class="profile-label" x="-175" y="90" fill="black" text-anchor="middle" transform="rotate(-90)">Depth</text><circle class="profile-origin" cx="125" cy="300" r="6" /><text class="profile-label" x="130" y="325" fill="black">Origin</text><style>
    .profile-label { font: 16px sans-serif; }
    .profile-line {stroke:black;stroke-width:2;}
    .profile-outline {stroke:black;stroke-width:2; fill:none;}
    .profile-origin {stroke:#597a23;stroke-width:2; fill:#a6d854;}
  </style></svg></center></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.IAngleProfile" /> inherits <see cref="T:Oasys.Profiles.IProfile" />.
<para>The outside corner of the flange and web (min y and min z extent in the local coordinate system)
is the origin of its local coordinate system.
</para></remarks>
        </member>
        <member name="M:SDK.Oasys.AdSec.ISolution.GetWarnings">
            <summary>Warnings observed during the analysis.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ISolution.GetServiceability">
            <summary>Serviceability allows to check serviceability results.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ISolution.GetStrength">
            <summary>Strength allows to check strength results.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.ISolution">
            <summary>Solution for a section.
<para>See <see href="~/articles/glossary.md#results">Glossary</see></para></summary>
            <remarks>ISolution allows to calculate strength and serviceability results.
</remarks>
            <seealso cref="T:SDK.Oasys.AdSec.IStrength" />
            <seealso cref="T:SDK.Oasys.AdSec.IServiceability" />
        </member>
        <member name="M:Oasys.AdSec.IStrength.GetMomentMomentInteractionCurve(UnitsNet.Force)">
            <summary>Calculates a moment-moment interaction curve.<br /><center><img src="../images/MomentMomentCurve.PNG" /></center></summary>
            <param name="axialForce">The axial force.</param>
            <exception cref="!:System.ArgumentException">
When the axial force is not a finite value.
</exception>
            <returns>The force-moment interaction curve, <see cref="!:Oasys.AdSec.Mesh.ILoadCurve" />.</returns>
            <remarks>If the axial force is outside the capacity
range of the section, the returned list will be empty.
</remarks>
        </member>
        <member name="M:Oasys.AdSec.IStrength.GetForceMomentInteractionCurve(UnitsNet.Angle)">
            <summary>Calculates a force-moment interaction curve.<br /><center><img src="../images/ForceMomentCurve.PNG" /></center></summary>
            <param name="momentAngle">The moment angle, which must be in the range -180 degrees to +180 degrees.</param>
            <exception cref="!:System.ArgumentException">
When the magnitude of the angle is greater than 180 degrees.
</exception>
            <returns>The force-moment interaction curve, <see cref="!:Oasys.AdSec.Mesh.ILoadCurve" />.</returns>
        </member>
        <member name="M:Oasys.AdSec.IStrength.GetFailureSurface">
            <summary>Generates the strength failure surface.<br /><center><img src="../images/FailureSurface.PNG" /></center></summary>
            <returns>The failure surface, <see cref="!:Oasys.AdSec.Mesh.ILoadSurface" />.</returns>
        </member>
        <member name="M:Oasys.AdSec.IStrength.Check(Oasys.AdSec.IDeformation)">
            <summary>Calculates strength results.
</summary>
            <param name="deformation">The deformation for which the strength results are to be calculated.</param>
            <returns>Strength results for the specified deformation.</returns>
            <exception cref="!:System.ArgumentNullException">If deformation is null</exception>
        </member>
        <member name="M:Oasys.AdSec.IStrength.Check(Oasys.AdSec.ILoad)">
            <summary>Calculates strength results.
</summary>
            <param name="load">The load for which the strength results are to be calculated.</param>
            <returns>Strength results for the specified load.</returns>
            <exception cref="!:System.ArgumentNullException">If load is null</exception>
        </member>
        <member name="T:Oasys.AdSec.IStrength">
            <summary>Performs strength analysis (ULS), for a given <see cref="T:Oasys.AdSec.ILoad" /> or <see cref="T:Oasys.AdSec.IDeformation" />.
<para>See <see href="~/articles/glossary.md#strength-resultstrength-result">Glossary</see></para></summary>
            <remarks>
                <para>
                    <see cref="T:Oasys.AdSec.IStrength" /> can also generate the strength failure surface and
the force-moment and moment-moment interaction curves.</para>
Results are returned in <see cref="T:Oasys.AdSec.IStrengthResult" />.
</remarks>
            <seealso cref="T:Oasys.AdSec.IStrengthResult" />
            <seealso cref="T:Oasys.AdSec.ILoad" />
            <seealso cref="T:Oasys.AdSec.IDeformation" />
        </member>
        <member name="M:Oasys.AdSec.IServiceability.Check(Oasys.AdSec.IDeformation)">
            <summary>Calculates serviceability results.
</summary>
            <param name="deformation">The deformation for which
the serviceability results are to be calculated.
</param>
            <returns>Serviceability results for the specified deformation.</returns>
            <exception cref="!:System.ArgumentNullException">If deformation is null</exception>
        </member>
        <member name="M:Oasys.AdSec.IServiceability.Check(Oasys.AdSec.ILoad)">
            <summary>Calculates serviceability results.
</summary>
            <param name="load">The load for which the serviceability results are to be calculated.</param>
            <returns>Serviceability results for the specified load.</returns>
            <exception cref="!:System.ArgumentNullException">If load is null</exception>
        </member>
        <member name="T:Oasys.AdSec.IServiceability">
            <summary>Performs serviceability analysis (SLS), for a given <see cref="T:Oasys.AdSec.ILoad" /> or <see cref="T:Oasys.AdSec.IDeformation" />.
<para>See <see href="~/articles/glossary.md#serviceability-resultserviceability-result">Glossary</see></para></summary>
            <remarks>Results are returned in <see cref="T:Oasys.AdSec.IServiceabilityResult" />.</remarks>
            <seealso cref="T:Oasys.AdSec.IServiceabilityResult" />
            <seealso cref="T:Oasys.AdSec.ILoad" />
            <seealso cref="T:Oasys.AdSec.IDeformation" />
        </member>
        <member name="M:SDK.Oasys.AdSec.IAdSec.Analyse(std.shared_ptr&lt;SDK.Oasys.AdSec.ISection&gt;)">
            <summary>Analyses a <see cref="T:SDK.Oasys.AdSec.ISection" /> for a <see cref="T:SDK.Oasys.AdSec.ISolution" />.
<para>See <see href="~/articles/glossary.md#results">Glossary</see></para></summary>
            <param name="section">The section to be analysed.</param>
            <returns>Solution for the specified section.</returns>
        </member>
        <member name="M:SDK.Oasys.AdSec.IAdSec.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.DesignCode.IDesignCode&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.IAdSec" /> application instance.
</summary>
            <param name="designCode">The design code to be considered for analysis.</param>
            <returns>AdSec application instance with the specified design code.</returns>
            <exception cref="!:Oasys.Exceptions.LicenceException">
When the licence is expired.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.IAdSec.SetDesignCode(std.shared_ptr&lt;SDK.Oasys.AdSec.DesignCode.IDesignCode&gt;)">
            <summary>The design code to be considered for analysis.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.IAdSec.GetDesignCode">
            <summary>The design code to be considered for analysis.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.IAdSec">
            <summary>An AdSec application instance. It allows to set a <see cref="!:Oasys.AdSec.DesignCode.IDesignCode" />.
The design code is used to analyse a <see cref="T:SDK.Oasys.AdSec.ISection" />.
</summary>
        </member>
        <member name="P:Oasys.AdSec.ISolution.Warnings">
            <summary>Warnings observed during the analysis.</summary>
            <exception cref="!:System.ArgumentNullException">If Warnings is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.ISolution.Serviceability">
            <summary>Serviceability allows to check serviceability results.</summary>
            <exception cref="!:System.ArgumentNullException">If Serviceability is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.ISolution.Strength">
            <summary>Strength allows to check strength results.</summary>
            <exception cref="!:System.ArgumentNullException">If Strength is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.ISolution">
            <summary>Solution for a section.
<para>See <see href="~/articles/glossary.md#results">Glossary</see></para></summary>
            <remarks>ISolution allows to calculate strength and serviceability results.
</remarks>
            <seealso cref="T:Oasys.AdSec.IStrength" />
            <seealso cref="T:Oasys.AdSec.IServiceability" />
        </member>
        <member name="M:Oasys.AdSec.IAdSec.Analyse(Oasys.AdSec.ISection)">
            <summary>Analyses a <see cref="T:Oasys.AdSec.ISection" /> for a <see cref="T:Oasys.AdSec.ISolution" />.
<para>See <see href="~/articles/glossary.md#results">Glossary</see></para></summary>
            <param name="section">The section to be analysed.</param>
            <returns>Solution for the specified section.</returns>
            <exception cref="!:System.ArgumentNullException">If section is null</exception>
        </member>
        <member name="M:Oasys.AdSec.IAdSec.Create(Oasys.AdSec.DesignCode.IDesignCode)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.IAdSec" /> application instance.
</summary>
            <param name="designCode">The design code to be considered for analysis.</param>
            <returns>AdSec application instance with the specified design code.</returns>
            <exception cref="!:Oasys.Exceptions.LicenceException">
When the licence is expired.
</exception>
            <exception cref="!:System.ArgumentNullException">If designCode is null</exception>
        </member>
        <member name="P:Oasys.AdSec.IAdSec.DesignCode">
            <summary>The design code to be considered for analysis.</summary>
            <exception cref="!:System.ArgumentNullException">If DesignCode is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.IAdSec">
            <summary>An AdSec application instance. It allows to set a <see cref="!:Oasys.AdSec.DesignCode.IDesignCode" />.
The design code is used to analyse a <see cref="T:Oasys.AdSec.ISection" />.
</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.DesignCode.IDesignCode">
            <summary>A design code</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.BS8110.Edition_2005">
            <summary>The 2005 edition of BS8110</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.BS8110.Edition_1997">
            <summary>The 1997 edition of BS8110</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.DesignCode.BS8110.Edition_1985">
            <summary>The 1985 edition of BS8110</summary>
        </member>
        <member name="T:Oasys.AdSec.DesignCode.IDesignCode">
            <summary>A design code</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.BS8110.Edition_2005">
            <summary>The 2005 edition of BS8110</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.BS8110.Edition_1997">
            <summary>The 1997 edition of BS8110</summary>
        </member>
        <member name="F:Oasys.AdSec.DesignCode.BS8110.Edition_1985">
            <summary>The 1985 edition of BS8110</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Preloads.IPreStrain.Create(System.Double)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.Reinforcement.Preloads.IPreStrain" /> preload from <see cref="!:Strain" />.
</summary>
            <param name="strain">The pre-strain in the reinforcement bars.<br />
Positive strain indicates tension.
</param>
            <returns>Strain preload with the specified strain.</returns>
            <exception cref="!:System.ArgumentException">
When the strain is not a finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Preloads.IPreStrain.SetStrain(System.Double)">
            <summary>The pre-strain in reinforcement bar.<br />
Positive strain indicates tension.
</summary>
            <exception cref="!:System.ArgumentException">
When the strain is not a finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Preloads.IPreStrain.GetStrain">
            <summary>The pre-strain in reinforcement bar.<br />
Positive strain indicates tension.
</summary>
            <exception cref="!:System.ArgumentException">
When the strain is not a finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.Preloads.IPreStrain">
            <summary>A preload of type strain.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.Preloads.IPreload">
            <summary>A preload can be applied to bars as a force, a stress or a strain.
<para>See <see href="~/articles/glossary.md#preloadpreload">Glossary</see></para></summary>
            <seealso cref="!:IPreForce" />
            <seealso cref="!:IPreStress" />
            <seealso cref="!:IPreStrain" />
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.Preloads.IPreStrain.Create(Oasys.Units.Strain)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Reinforcement.Preloads.IPreStrain" /> preload from <see cref="P:Oasys.AdSec.Reinforcement.Preloads.IPreStrain.Strain" />.
</summary>
            <param name="strain">The pre-strain in the reinforcement bars.<br />
Positive strain indicates tension.
</param>
            <returns>Strain preload with the specified strain.</returns>
            <exception cref="!:System.ArgumentException">
When the strain is not a finite value.
</exception>
        </member>
        <member name="P:Oasys.AdSec.Reinforcement.Preloads.IPreStrain.Strain">
            <summary>The pre-strain in reinforcement bar.<br />
Positive strain indicates tension.
</summary>
            <exception cref="!:System.ArgumentException">
When the strain is not a finite value.
</exception>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.Preloads.IPreStrain">
            <summary>A preload of type strain.</summary>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.Preloads.IPreload">
            <summary>A preload can be applied to bars as a force, a stress or a strain.
<para>See <see href="~/articles/glossary.md#preloadpreload">Glossary</see></para></summary>
            <seealso cref="!:IPreForce" />
            <seealso cref="!:IPreStress" />
            <seealso cref="!:IPreStrain" />
        </member>
        <member name="M:SDK.Oasys.AdSec.ISubComponent.Create(std.shared_ptr&lt;SDK.Oasys.AdSec.ISection&gt;,std.shared_ptr&lt;SDK.Oasys.Profiles.IPoint&gt;)">
            <summary>
Creates a new sub-component from its section definition and
offset relative to the containing section.
</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ISubComponent.GetSection">
            <summary>
The section definition for the sub-component.
</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ISubComponent.GetOffset">
            <summary>
Offset is applied between origins of containing section and sub-component.
The offset of the profile is in the containing section's Profile Coordinate System.
Any rotation applied to the containing section's profile will be applied to its sub-components.
Sub-components can also have an additional rotation for their profiles.
</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.ISubComponent">
            <summary>A sub-component defines a section with an offset
relative to its containing section. Sub-components can be added to <see cref="!:ISection.SubComponents" />.
<para>See <see href="~/articles/glossary.md#sub-componentsub-component">Glossary</see></para></summary>
            <remarks>A sub-component's section can have its own sub-components recursively.
</remarks>
        </member>
        <member name="M:Oasys.Profiles.IPoint.Create(UnitsNet.Length,UnitsNet.Length)">
            <summary>Creates a new <see cref="T:Oasys.Profiles.IPoint" /> from
<see cref="P:Oasys.Profiles.IPoint.Y" /> and
<see cref="P:Oasys.Profiles.IPoint.Z" />.
</summary>
            <param name="y">The local Y coordinate.</param>
            <param name="z">The local Z coordinate.</param>
            <returns>Point with the specified local Y and Z coordinates.</returns>
            <exception cref="!:System.ArgumentException">
When any value is out of range.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IPoint.Z">
            <summary>The local Z coordinate.
</summary>
            <exception cref="!:System.ArgumentException">
When the value is out of range.
</exception>
        </member>
        <member name="P:Oasys.Profiles.IPoint.Y">
            <summary>The local Y coordinate.
</summary>
            <exception cref="!:System.ArgumentException">
When the value is out of range.
</exception>
        </member>
        <member name="T:Oasys.Profiles.IPoint">
            <summary>A 2D vertex in the yz-plane.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IProfile.Validate">
            <summary>Checks that the definition of the profile is consistent.
A profile must be valid for its containing section to be analysed.
</summary>
            <returns>Warnings observed from the profile definition.</returns>
            <exception cref="!:Oasys.Exceptions.ValidationException">
When the profile is not valid.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IProfile.Description">
            <summary>Converts the profile's geometry into a string description.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IProfile.Area">
            <summary>Calculates the profile's area.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IProfile.SetIsReflectedZ(System.Boolean)">
            <summary>Reflects the profile over the z-axis in the local coordinate system.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IProfile.GetIsReflectedZ">
            <summary>Reflects the profile over the z-axis in the local coordinate system.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IProfile.SetIsReflectedY(System.Boolean)">
            <summary>Reflects the profile over the y-axis in the local coordinate system.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IProfile.GetIsReflectedY">
            <summary>Reflects the profile over the y-axis in the local coordinate system.</summary>
        </member>
        <member name="M:SDK.Oasys.Profiles.IProfile.SetRotation(System.Double)">
            <summary>The angle at which the profile is rotated.
Positive rotation is anti-clockwise around the x-axis in the local coordinate system.
</summary>
            <exception cref="!:System.ArgumentException">
When the angle is not a finite value.
</exception>
        </member>
        <member name="M:SDK.Oasys.Profiles.IProfile.GetRotation">
            <summary>The angle at which the profile is rotated.
Positive rotation is anti-clockwise around the x-axis in the local coordinate system.
</summary>
            <exception cref="!:System.ArgumentException">
When the angle is not a finite value.
</exception>
        </member>
        <member name="T:SDK.Oasys.Profiles.IProfile">
            <summary>Defines a cross-section's shape, size and orientation.
<para>See <see href="~/articles/glossary.md#profileprofile">Glossary</see></para></summary>
            <remarks>
                <see cref="T:SDK.Oasys.Profiles.IProfile" /> is a base class for other profiles with specific shapes,
e.g. <see cref="!:Oasys.Profiles.ICircleProfile" /> and <see cref="!:Oasys.Profiles.IRectangleProfile" />.
</remarks>
            <example>
# [C#](#tab/tabid-1)
<code source="../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ISection.cs" region="Usings" lang="csharp" /><code source="../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ISection.cs" region="Snippet" lang="csharp" /><para>Example creating a section with a rotated profile.</para>
# [Python](#tab/tabid-2)
<code source="../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ISection.py" region="Imports" lang="python" /><code source="../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ISection.py" region="Snippet" lang="python" /><para>Example creating a section with a rotated profile.</para>
***
</example>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.IMaterial.GetServiceability">
            <summary>The material's stress-strain relationship for serviceability (SLS) analysis.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Materials.IMaterial.GetStrength">
            <summary>The material's stress-strain relationship for strength (ULS) analysis.</summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.Materials.IMaterial">
            <summary>
A base class for all material types.
<para>See <see href="~/articles/glossary.md#materialmaterial">Glossary</see></para></summary>
            <seealso cref="!:IConcrete" />
            <seealso cref="!:IReinforcement" />
            <seealso cref="!:ISteel" />
            <seealso cref="!:IFrp" />
            <seealso cref="!:StressStrainCurves.ITensionCompressionCurve" />
        </member>
        <member name="M:Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve.StressAt(Oasys.Units.Strain)">
            <summary>The stress at a given strain.
</summary>
            <param name="strain">The strain at which stress is to be calculated.</param>
            <returns> Compressive stress for a negative strain
and tensile stress for a positive strain.
</returns>
        </member>
        <member name="M:Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve.Create(Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve,Oasys.AdSec.Materials.StressStrainCurves.IStressStrainCurve)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve" /> from
<see cref="P:Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve.Tension" /> and <see cref="P:Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve.Compression" /> stress-strain curves.
</summary>
            <param name="tension">The tension stress-strain curve.</param>
            <param name="compression">The compression stress-strain curve.</param>
            <returns>
Stress-strain relationship with the specified tension and compression curves.
</returns>
            <exception cref="!:System.ArgumentNullException">If tension is null</exception>
            <exception cref="!:System.ArgumentNullException">If compression is null</exception>
        </member>
        <member name="P:Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve.Compression">
            <summary>The compression stress-strain curve.</summary>
            <exception cref="!:System.ArgumentNullException">If Compression is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve.Tension">
            <summary>The tension stress-strain curve.</summary>
            <exception cref="!:System.ArgumentNullException">If Tension is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.Materials.StressStrainCurves.ITensionCompressionCurve">
            <summary>
A stress-strain relationship for a <see cref="T:Oasys.AdSec.Materials.IMaterial" />.
<para>See <see href="~/articles/glossary.md#tension-compression-curvetension-compression-curve">Glossary</see></para></summary>
        </member>
        <member name="M:SDK.Oasys.Collections.IList.Create(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>Creates an empty list</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.Reinforcement.Groups.IGroup.Validate">
            <summary>Checks that the definition of the group is consistent.
A group must be valid for its containing section to be analysed.
</summary>
            <returns>Warnings observed from the reinforcement group definition.</returns>
            <exception cref="!:Oasys.Exceptions.ValidationException">
When the group is not valid.
</exception>
        </member>
        <member name="T:SDK.Oasys.AdSec.Reinforcement.Groups.IGroup">
            <summary>Defines a group of reinforcement.
<para>See <see href="~/articles/glossary.md#groupgroup">Glossary</see></para></summary>
            <remarks>An abstract base class of all reinforcement group types.</remarks>
            <seealso cref="!:ILongitudinalGroup" />
        </member>
        <member name="P:Oasys.AdSec.IWarning.RecordTime">
            <summary>Time in UTC at which the observation was recorded.</summary>
        </member>
        <member name="P:Oasys.AdSec.IWarning.Description">
            <summary>Describes the observation.</summary>
            <exception cref="!:System.ArgumentNullException">If Description is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.IWarning">
            <summary>A notification with information about any unusual observation.</summary>
        </member>
        <member name="M:Oasys.Exceptions.ExceptionUtils.ConvertException(std.exception*)">
            <summary>Converts a C++ STL exception into a suitable .NET exception.</summary>
            <summary>Converts a C++ STL exception into a suitable .NET exception.</summary>
        </member>
        <member name="T:Oasys.Exceptions.RuntimeError">
            <summary>std::runtime_error and some other standard exceptions
that cannot be mapped to a more suitable exception are converted
to this type.

Do not throw this exception deliberately. Use a more specific
exception instead.
</summary>
        </member>
        <member name="T:Oasys.Exceptions.LogicError">
            <summary>Any std::logic_error that cannot be mapped to a more
specific error is converted to this type.

Do not throw this exception deliberately. Use a more specific
exception instead.
</summary>
        </member>
        <member name="T:Oasys.Exceptions.ApiException">
            <summary>The API throws this exception when there isn't a more specific
<see cref="T:Oasys.Exceptions.OasysException" /> available.</summary>
        </member>
        <member name="T:Oasys.Exceptions.ValidationException">
            <summary>This exception is thrown when a method cannot continue
because the data it depends on is incomplete or inconsistent.

Functions should not throw this exception just because an argument
is not acceptable. They should throw an <see cref="!:ArgumentException" />
instead.</summary>
        </member>
        <member name="T:Oasys.Exceptions.LicenceException">
            <summary>Indicates that users software licence is invalid or
cannot be used for some reason.</summary>
        </member>
        <member name="T:Oasys.Exceptions.OasysException">
            <summary>This is the base class for all application exceptions
that are thrown by the API. Do not throw OasysException itself;
throw one of its more specific subclasses instead.</summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ISection.Create(std.shared_ptr&lt;SDK.Oasys.Profiles.IProfile&gt;,std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.IMaterial&gt;)">
            <summary>Creates a new <see cref="T:SDK.Oasys.AdSec.ISection" />.
</summary>
            <param name="profile">Defines the section's shape, size and orientation.</param>
            <param name="material">Defines the section's material.</param>.
<returns>Section with the specified profile and material.</returns></member>
        <member name="M:SDK.Oasys.AdSec.ISection.SetSubComponents(std.shared_ptr&lt;SDK.Oasys.Collections.IList&gt;)">
            <summary>The sub-components contained within the section
<para>See <see href="~/articles/glossary.md#sub-componentsub-component">Glossary</see></para></summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ISection.GetSubComponents">
            <summary>The sub-components contained within the section
<para>See <see href="~/articles/glossary.md#sub-componentsub-component">Glossary</see></para></summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ISection.SetReinforcementGroups(std.shared_ptr&lt;SDK.Oasys.Collections.IList&gt;)">
            <summary>The groups of reinforcement in the section (applicable for only concrete material).
<para>See <see href="~/articles/glossary.md#reinforcementreinforcement">Glossary</see></para></summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ISection.GetReinforcementGroups">
            <summary>The groups of reinforcement in the section (applicable for only concrete material).
<para>See <see href="~/articles/glossary.md#reinforcementreinforcement">Glossary</see></para></summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ISection.SetMaterial(std.shared_ptr&lt;SDK.Oasys.AdSec.Materials.IMaterial&gt;)">
            <summary>The material used for the <see cref="!:Profile" />.
<para>See <see href="~/articles/glossary.md#materialmaterial">Glossary</see></para></summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ISection.GetMaterial">
            <summary>The material used for the <see cref="!:Profile" />.
<para>See <see href="~/articles/glossary.md#materialmaterial">Glossary</see></para></summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ISection.SetProfile(std.shared_ptr&lt;SDK.Oasys.Profiles.IProfile&gt;)">
            <summary>The profile that describes the section's shape, size and orientation.
<para>See <see href="~/articles/glossary.md#profileprofile">Glossary</see></para></summary>
        </member>
        <member name="M:SDK.Oasys.AdSec.ISection.GetProfile">
            <summary>The profile that describes the section's shape, size and orientation.
<para>See <see href="~/articles/glossary.md#profileprofile">Glossary</see></para></summary>
        </member>
        <member name="T:SDK.Oasys.AdSec.ISection">
            <summary>Represents a cross-section through a structural member of the specified material which
can contain reinforcement. A section has a profile that describes its shape, size and orientation.
<para>See <see href="~/articles/glossary.md#sectionsection">Glossary</see></para></summary>
        </member>
        <member name="M:Oasys.AdSec.ISubComponent.Create(Oasys.AdSec.ISection,Oasys.Profiles.IPoint)">
            <summary>
Creates a new sub-component from its section definition and
offset relative to the containing section.
</summary>
            <exception cref="!:System.ArgumentNullException">If section is null</exception>
            <exception cref="!:System.ArgumentNullException">If offset is null</exception>
        </member>
        <member name="P:Oasys.AdSec.ISubComponent.Section">
            <summary>
The section definition for the sub-component.
</summary>
            <exception cref="!:System.ArgumentNullException">If Section is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.ISubComponent.Offset">
            <summary>
Offset is applied between origins of containing section and sub-component.
The offset of the profile is in the containing section's Profile Coordinate System.
Any rotation applied to the containing section's profile will be applied to its sub-components.
Sub-components can also have an additional rotation for their profiles.
</summary>
            <exception cref="!:System.ArgumentNullException">If Offset is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.ISubComponent">
            <summary>A sub-component defines a section with an offset
relative to its containing section. Sub-components can be added to <see cref="!:ISection.SubComponents" />.
<para>See <see href="~/articles/glossary.md#sub-componentsub-component">Glossary</see></para></summary>
            <remarks>A sub-component's section can have its own sub-components recursively.
</remarks>
        </member>
        <member name="M:Oasys.Profiles.IProfile.Validate">
            <summary>Checks that the definition of the profile is consistent.
A profile must be valid for its containing section to be analysed.
</summary>
            <returns>Warnings observed from the profile definition.</returns>
            <exception cref="!:Oasys.Exceptions.ValidationException">
When the profile is not valid.
</exception>
        </member>
        <member name="M:Oasys.Profiles.IProfile.Description">
            <summary>Converts the profile's geometry into a string description.</summary>
        </member>
        <member name="M:Oasys.Profiles.IProfile.Area">
            <summary>Calculates the profile's area.</summary>
        </member>
        <member name="P:Oasys.Profiles.IProfile.IsReflectedZ">
            <summary>Reflects the profile over the z-axis in the local coordinate system.</summary>
        </member>
        <member name="P:Oasys.Profiles.IProfile.IsReflectedY">
            <summary>Reflects the profile over the y-axis in the local coordinate system.</summary>
        </member>
        <member name="P:Oasys.Profiles.IProfile.Rotation">
            <summary>The angle at which the profile is rotated.
Positive rotation is anti-clockwise around the x-axis in the local coordinate system.
</summary>
            <exception cref="!:System.ArgumentException">
When the angle is not a finite value.
</exception>
        </member>
        <member name="T:Oasys.Profiles.IProfile">
            <summary>Defines a cross-section's shape, size and orientation.
<para>See <see href="~/articles/glossary.md#profileprofile">Glossary</see></para></summary>
            <remarks>
                <see cref="T:Oasys.Profiles.IProfile" /> is a base class for other profiles with specific shapes,
e.g. <see cref="!:Oasys.Profiles.ICircleProfile" /> and <see cref="!:Oasys.Profiles.IRectangleProfile" />.
</remarks>
            <example>
# [C#](#tab/tabid-1)
<code source="../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ISection.cs" region="Usings" lang="csharp" /><code source="../../../../AdSec_API_Samples/DocumentationOnly/.NET/DotNetCodeSnippets/ISection.cs" region="Snippet" lang="csharp" /><para>Example creating a section with a rotated profile.</para>
# [Python](#tab/tabid-2)
<code source="../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ISection.py" region="Imports" lang="python" /><code source="../../../../AdSec_API_Samples/DocumentationOnly/Python/PythonCodeSnippets/ISection.py" region="Snippet" lang="python" /><para>Example creating a section with a rotated profile.</para>
***
</example>
        </member>
        <member name="P:Oasys.AdSec.Materials.IMaterial.Serviceability">
            <summary>The material's stress-strain relationship for serviceability (SLS) analysis.</summary>
            <exception cref="!:System.ArgumentNullException">If Serviceability is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.Materials.IMaterial.Strength">
            <summary>The material's stress-strain relationship for strength (ULS) analysis.</summary>
            <exception cref="!:System.ArgumentNullException">If Strength is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.Materials.IMaterial">
            <summary>
A base class for all material types.
<para>See <see href="~/articles/glossary.md#materialmaterial">Glossary</see></para></summary>
            <seealso cref="!:IConcrete" />
            <seealso cref="!:IReinforcement" />
            <seealso cref="!:ISteel" />
            <seealso cref="!:IFrp" />
            <seealso cref="!:StressStrainCurves.ITensionCompressionCurve" />
        </member>
        <member name="M:Oasys.Collections.IList`1.Create">
            <summary>
Creates an empty list
</summary>
        </member>
        <member name="T:Oasys.Collections.IList`1">
            <summary>
A customised version <see cref="!:System.Collections.Generic.IList{T}" /><para>See <see href="https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ilist-1?view=net-5.0">IList</see> for more information</para><typeparam name="T">The type of elements in the list.</typeparam></summary>
        </member>
        <member name="M:Oasys.AdSec.Reinforcement.Groups.IGroup.Validate">
            <summary>Checks that the definition of the group is consistent.
A group must be valid for its containing section to be analysed.
</summary>
            <returns>Warnings observed from the reinforcement group definition.</returns>
            <exception cref="!:Oasys.Exceptions.ValidationException">
When the group is not valid.
</exception>
        </member>
        <member name="T:Oasys.AdSec.Reinforcement.Groups.IGroup">
            <summary>Defines a group of reinforcement.
<para>See <see href="~/articles/glossary.md#groupgroup">Glossary</see></para></summary>
            <remarks>An abstract base class of all reinforcement group types.</remarks>
            <seealso cref="!:ILongitudinalGroup" />
        </member>
        <member name="M:INativeWrapper.FromNative``1(std.shared_ptr&lt;SDK.INative&gt;)">
            <summary>Creates a new wrapper to hold 'native_ptr'.</summary>
            <typeparam name="TType">Casts the result to this type.</typeparam>
            <param name="native_ptr">An SDK implementation object</param>
            <returns>A C++/CLI wrapper containing native_ptr</returns>
        </member>
        <member name="M:INativeWrapper.SetNative(std.shared_ptr&lt;SDK.INative&gt;)">
            <summary>Sets the native object to the given pointer.
Required for objects contained in templates. Can only be called after a default constructor.
</summary>
        </member>
        <member name="M:INativeWrapper.Native(System.Object!System.Runtime.CompilerServices.IsConst)">
            <summary>Returns the wrapper's native pointer or null if the
wrapper is null.</summary>
            <param name="wrapper">Takes an Object^ to avoid annoying casts.</param>
        </member>
        <member name="M:INativeWrapper.DisableThreadCheck">
            <summary>Allows this object to be called from any thread.
WARNING This is not safe unless the object is immutable and fully
initialised by the thread that instantiated it. See OAA-232.</summary>
        </member>
        <member name="M:INativeWrapper.CheckThread">
            <summary>API objects do not support multi-threading.
This function MUST be called by the vast majority of functions.
</summary>
        </member>
        <member name="T:INativeWrapper">
            <summary>A class that wraps a native C++ class.</summary>
        </member>
        <member name="M:SDK.INative.GetInterfaceTypeName">
            <summary>Provided so that the C++/CLI layer can tell
which SDK Interface has been implemented by a native
object. This allows us to construct the CLR wrapper
for a native object without knowing anything else
about the native object.</summary>
        </member>
        <member name="M:ApiUtils.GetApiType(System.String)">
            <summary>Recursively separates a type from it's type arguments builds
the .NET Type for each piece.</summary>
        </member>
        <member name="M:ApiUtils.ToInterfaceTypeName2(System.Type)">
            <summary>Converts the output of ToInterfaceTypeName() to a
managed string for testing purposes.</summary>
        </member>
        <member name="M:ApiUtils.ToInterfaceTypeName(System.Type)">
            <summary>This is the inverse of GetWrapperType().
</summary>
            <param name="dotNetType">The type of the wrapper class</param>
            <returns>A string that will generate apiInterfaceType if
passed to GetWrapperType().</returns>
        </member>
        <member name="M:ApiUtils.GetWrapperType(System.String)">
            <summary>Finds the API type that acts as the wrapper
for a given native type.
This function is only useful for generated classes using
the wrapped class strategy.</summary>
            <param name="interfaceTypeName">The C++ run time type name
of a class returned with typeid(x).name().</param>
            <returns>The .NET type that wraps the native C++ type.</returns>
            <exception cref="T:System.ArgumentException">If the type name
is in an unexpected format or if there's no matching wrapper
type.</exception>
        </member>
        <member name="T:ApiUtils">
            <summary>Assorted utilities for API implementations.
This class is public so we can test the methods with C#
unit tests.</summary>
        </member>
        <member name="M:Oasys.AdSec.ISection.Create(Oasys.Profiles.IProfile,Oasys.AdSec.Materials.IMaterial)">
            <summary>Creates a new <see cref="T:Oasys.AdSec.ISection" />.
</summary>
            <param name="profile">Defines the section's shape, size and orientation.</param>
            <param name="material">Defines the section's material.</param>.
<returns>Section with the specified profile and material.</returns><exception cref="!:System.ArgumentNullException">If profile is null</exception><exception cref="!:System.ArgumentNullException">If material is null</exception></member>
        <member name="P:Oasys.AdSec.ISection.SubComponents">
            <summary>The sub-components contained within the section
<para>See <see href="~/articles/glossary.md#sub-componentsub-component">Glossary</see></para></summary>
            <exception cref="!:System.ArgumentNullException">If SubComponents is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.ISection.ReinforcementGroups">
            <summary>The groups of reinforcement in the section (applicable for only concrete material).
<para>See <see href="~/articles/glossary.md#reinforcementreinforcement">Glossary</see></para></summary>
            <exception cref="!:System.ArgumentNullException">If ReinforcementGroups is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.ISection.Material">
            <summary>The material used for the <see cref="P:Oasys.AdSec.ISection.Profile" />.
<para>See <see href="~/articles/glossary.md#materialmaterial">Glossary</see></para></summary>
            <exception cref="!:System.ArgumentNullException">If Material is set to null</exception>
        </member>
        <member name="P:Oasys.AdSec.ISection.Profile">
            <summary>The profile that describes the section's shape, size and orientation.
<para>See <see href="~/articles/glossary.md#profileprofile">Glossary</see></para></summary>
            <exception cref="!:System.ArgumentNullException">If Profile is set to null</exception>
        </member>
        <member name="T:Oasys.AdSec.ISection">
            <summary>Represents a cross-section through a structural member of the specified material which
can contain reinforcement. A section has a profile that describes its shape, size and orientation.
<para>See <see href="~/articles/glossary.md#sectionsection">Glossary</see></para></summary>
        </member>
    </members>
</doc>